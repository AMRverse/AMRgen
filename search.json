[{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"AnalysingGenoPhenoData","text":"AMRgen comprehensive R package designed integrate antimicrobial resistance genotype phenotype data. provides tools : Import AMR genotype data (e.g. AMRFinderPlus, hAMRonization) Import AST phenotype data (e.g. NCBI) Conduct genotype-phenotype analyses explore impact genotypic markers phenotype, including via logistic regression, solo marker analysis, upset plots Fetch MIC disk zone reference distributions EUCAST vignette walks basic workflow using example datasets included AMRgen package, explains wrangle data files right formats use workflow.","code":""},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"genotype-table","dir":"Articles","previous_headings":"Introduction","what":"1. Genotype table","title":"AnalysingGenoPhenoData","text":"import_amrfp() function lets load genotype data AMRFinderPlus outputs, process generate object key columns needed work AMRgen package. genotype table one row genetic marker detected input genome, .e. one per strain/marker combination. genotype data AMRfinderplus format, can wrangle input data files necessary format. essential columns genotype table work AMRgen functions : Name: character string giving sample name, used link sample names phenotype file (column can different name, case ’ll need make sure first column dataframe pass name functions using geno_sample_col) marker: character string giving name genetic marker detected drug_class: character string giving antibiotic class associated marker NOTE: consider whether genomes AMR markers detected genotyping, make sure include analyses. E.g. AMRfinderplus output one row per genome/marker combination, genome markers detected, row genome concatenated output file. species core genes included AMRfinderplus probably won’t problem expect calls every genome (e.g. AMRfinderplus report blaSHV, oqxA, oqxB, fosA Klebsiella pneumoniae genomes, input genomes appear concatenated output file). easy solution run check make sure genome names input dataset represented genotype table, missing add empty rows using e.g. tibble(Name=missing_samples) %>% bind_rows(genotype_table).","code":"# Example AMRfinderplus genotyping output ecoli_geno_raw #> # A tibble: 53,591 × 10 #>    Name    `Gene symbol` `Hierarchy node` `Element type` `Element subtype` Class #>    <chr>   <chr>         <chr>            <chr>          <chr>             <chr> #>  1 SAMN03… blaEC         blaEC            AMR            AMR               BETA… #>  2 SAMN03… acrF          acrF             AMR            AMR               EFFL… #>  3 SAMN03… glpT_E448K    glpT             AMR            POINT             FOSF… #>  4 SAMN03… floR          floR             AMR            AMR               PHEN… #>  5 SAMN03… mdtM          mdtM             AMR            AMR               EFFL… #>  6 SAMN03… blaTEM-1      blaTEM-1         AMR            AMR               BETA… #>  7 SAMN03… sul2          sul2             AMR            AMR               SULF… #>  8 SAMN03… aph(3'')-Ib   aph(3'')-Ib      AMR            AMR               AMIN… #>  9 SAMN03… aph(6)-Id     aph(6)-Id        AMR            AMR               AMIN… #> 10 SAMN03… tet(A)        tet(A)           AMR            AMR               TETR… #> # ℹ 53,581 more rows #> # ℹ 4 more variables: Subclass <chr>, `% Coverage of reference sequence` <dbl>, #> #   `% Identity to reference sequence` <dbl>, #> #   `Accession of closest sequence` <chr>  # Load AMRfinderplus output #    (replace 'ecoli_geno_raw' with the filepath for any AMRfinderplus output) ecoli_geno <- import_amrfp(ecoli_geno_raw, \"Name\") #> Input is already a dataframe.  # Check the format of the processed genotype table head(ecoli_geno) #> # A tibble: 6 × 13 #>   Name         marker     drug_agent drug_class   `Gene symbol` `Hierarchy node` #>   <chr>        <gene>     <ab>       <chr>        <chr>         <chr>            #> 1 SAMN03177615 blaEC      NA         Beta-lactam… blaEC         blaEC            #> 2 SAMN03177615 acrF       NA         Efflux       acrF          acrF             #> 3 SAMN03177615 glpT_E448K FOS        Other antib… glpT_E448K    glpT             #> 4 SAMN03177615 floR       CHL        Amphenicols  floR          floR             #> 5 SAMN03177615 floR       FLR        Other antib… floR          floR             #> 6 SAMN03177615 mdtM       NA         Efflux       mdtM          mdtM             #> # ℹ 7 more variables: `Element type` <chr>, `Element subtype` <chr>, #> #   Class <chr>, Subclass <chr>, `% Coverage of reference sequence` <dbl>, #> #   `% Identity to reference sequence` <dbl>, #> #   `Accession of closest sequence` <chr>"},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"phenotype-table","dir":"Articles","previous_headings":"Introduction","what":"2. Phenotype table","title":"AnalysingGenoPhenoData","text":"import_ncbi_ast() function imports AST data NCBI format files. phenotype table one row assay measurement, .e. one per strain/drug combination. assay data NCBI AST format, can wrangle input data files necessary format. essential columns phenotype table work AMRgen functions : id: character string giving sample name, used link sample names genotype file (column can different name, case ’ll need make sure first column dataframe pass name functions using pheno_sample_col) spp_pheno: species form AMR package mo class (can created column species name string, using AMR::.mo(species_string)) drug_agent: antibiotic name form AMR package ab class (can created column antibiotic name string, using AMR::.ab(antibiotic_string)) pheno: S//R phenotype calls form AMR package sir class (can created column phenotype values string, using AMR::(sir_string), generated interpreting MIC disk assay data using AMR::.sir) want analyses raw assay data (e.g. upset plots) need data one : mic: MIC form AMR package mic class (can created column assay values string, using AMR::.mic(mic_string)) disk: disk diffusion zone diameter form AMR package disk class (can created column assay values string, using AMR::.disk(disk_string))","code":"# Example E. coli AST data from NCBI # This one has already been imported and phenotypes interpreted from assay data # You can make your own from NCBI format data using: #    import_ncbi_ast(\"filepath/AST.tsv\", interpret=T) ecoli_ast #> # A tibble: 15,320 × 24 #>    id           spp_pheno    drug_agent ecoff pheno     mic  disk guideline #>    <chr>        <mo>         <ab>       <chr> <sir>   <mic> <dsk> <chr>     #>  1 SAMN36015110 B_ESCHR_COLI CIP        NWT     R   <128.00    NA CLSI      #>  2 SAMN07988997 B_ESCHR_COLI IPM        NWT     S    <=1.00    NA CLSI      #>  3 SAMN11638310 B_ESCHR_COLI CIP        NWT     R    256.00    NA CLSI      #>  4 SAMN05729964 B_ESCHR_COLI CIP        NWT     R     64.00    NA CLSI      #>  5 SAMN18634044 B_ESCHR_COLI CIP        NWT     R    <=1.00    NA CLSI      #>  6 SAMN26232716 B_ESCHR_COLI CIP        NA      NA       NA    NA CLSI      #>  7 SAMN26232716 B_ESCHR_COLI CIP        NWT     R        NA    20 CLSI      #>  8 SAMN10620111 B_ESCHR_COLI CIP        NWT     R    >=4.00    NA CLSI      #>  9 SAMN10620168 B_ESCHR_COLI CIP        NWT     R    >=4.00    NA CLSI      #> 10 SAMN10620104 B_ESCHR_COLI CIP        NWT     S    <=0.25    NA CLSI      #> # ℹ 15,310 more rows #> # ℹ 16 more variables: `Organism group` <chr>, `Scientific name` <chr>, #> #   `Isolation type` <chr>, Location <chr>, `Isolation source` <chr>, #> #   Isolate <chr>, Antibiotic <chr>, `Resistance phenotype` <chr>, #> #   `Measurement sign` <chr>, `MIC (mg/L)` <dbl>, `Disk diffusion (mm)` <dbl>, #> #   `Laboratory typing platform` <chr>, Vendor <chr>, #> #   `Laboratory typing method version or reagent` <chr>, …  head(ecoli_ast) #> # A tibble: 6 × 24 #>   id           spp_pheno    drug_agent ecoff pheno   mic  disk guideline #>   <chr>        <mo>         <ab>       <chr> <sir> <mic> <dsk> <chr>     #> 1 SAMN36015110 B_ESCHR_COLI CIP        NWT     R    <128    NA CLSI      #> 2 SAMN07988997 B_ESCHR_COLI IPM        NWT     S     <=1    NA CLSI      #> 3 SAMN11638310 B_ESCHR_COLI CIP        NWT     R     256    NA CLSI      #> 4 SAMN05729964 B_ESCHR_COLI CIP        NWT     R      64    NA CLSI      #> 5 SAMN18634044 B_ESCHR_COLI CIP        NWT     R     <=1    NA CLSI      #> 6 SAMN26232716 B_ESCHR_COLI CIP        NA      NA     NA    NA CLSI      #> # ℹ 16 more variables: `Organism group` <chr>, `Scientific name` <chr>, #> #   `Isolation type` <chr>, Location <chr>, `Isolation source` <chr>, #> #   Isolate <chr>, Antibiotic <chr>, `Resistance phenotype` <chr>, #> #   `Measurement sign` <chr>, `MIC (mg/L)` <dbl>, `Disk diffusion (mm)` <dbl>, #> #   `Laboratory typing platform` <chr>, Vendor <chr>, #> #   `Laboratory typing method version or reagent` <chr>, #> #   `Testing standard` <chr>, `Create date` <dttm>"},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"combine-genotype-and-phenotype-data-for-a-given-drug","dir":"Articles","previous_headings":"Introduction","what":"3. Combine genotype and phenotype data for a given drug","title":"AnalysingGenoPhenoData","text":"genotype phenotype tables can include data related many different drugs, need analyse things one drug time. function get_binary_matrix() can used extract phenotype data specified drug, genotype data markers associated specified drug class. returns single dataframe one row per strain, subset strains appear genotype phenotype input tables. row indicates, one strain, phenotypes (SIR column, assay columns desired, boolean 1/0 coding R NWT status) genotypes (one column per marker, boolean 1/0 coding marker presence/absence).","code":"# Get matrix combining phenotype data for ciprofloxacin, binary calls for R/NWT phenotype, #    and genotype presence/absence data for all markers associated with the relevant drug #    class (which are labelled \"Quinolones\" in AMRfinderplus). cip_bin <- get_binary_matrix(ecoli_geno, ecoli_ast, antibiotic = \"Ciprofloxacin\", drug_class_list = c(\"Quinolones\"), sir_col = \"pheno\", keep_assay_values = T, keep_assay_values_from = \"mic\") #> [1] \"Some samples had multiple phenotype rows, taking the most resistant only\" #> [1] \"Defining NWT using ecoff column provided: ecoff\"  # check format head(cip_bin) #> # A tibble: 6 × 50 #>   id           pheno     mic     R   NWT gyrA_S83L gyrA_D87Y gyrA_D87N parC_S80I #>   <chr>        <sir>   <mic> <dbl> <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 SAMN03177615   S   <=0.015     0     0         0         0         0         0 #> 2 SAMN03177616   S   <=0.015     0     0         0         0         0         0 #> 3 SAMN03177617   S   <=0.015     0     0         0         0         0         0 #> 4 SAMN03177618   S     0.250     0     0         1         0         0         0 #> 5 SAMN03177619   S     0.120     0     0         0         1         0         0 #> 6 SAMN03177620   S   <=0.015     0     0         0         0         0         0 #> # ℹ 41 more variables: parE_S458A <dbl>, parC_S80R <dbl>, parE_L416F <dbl>, #> #   qnrB6 <dbl>, gyrA_D87G <dbl>, parC_S57T <dbl>, parC_E84A <dbl>, #> #   soxS_A12S <dbl>, qnrB2 <dbl>, qnrS2 <dbl>, parC_E84K <dbl>, #> #   parC_A56T <dbl>, qnrB19 <dbl>, `aac(6')-Ib-cr5` <dbl>, parC_E84V <dbl>, #> #   parE_I529L <dbl>, parE_S458T <dbl>, parE_E460D <dbl>, parC_E84G <dbl>, #> #   qnrS1 <dbl>, marR_S3N <dbl>, `aac(6')-Ib-cr` <dbl>, soxR_R20H <dbl>, #> #   qnrB1 <dbl>, parE_I355T <dbl>, soxR_G121D <dbl>, qnrB4 <dbl>, qepA <dbl>, …  # list colnames, to see full list of quinolone markers included colnames(cip_bin) #>  [1] \"id\"             \"pheno\"          \"mic\"            \"R\"              #>  [5] \"NWT\"            \"gyrA_S83L\"      \"gyrA_D87Y\"      \"gyrA_D87N\"      #>  [9] \"parC_S80I\"      \"parE_S458A\"     \"parC_S80R\"      \"parE_L416F\"     #> [13] \"qnrB6\"          \"gyrA_D87G\"      \"parC_S57T\"      \"parC_E84A\"      #> [17] \"soxS_A12S\"      \"qnrB2\"          \"qnrS2\"          \"parC_E84K\"      #> [21] \"parC_A56T\"      \"qnrB19\"         \"aac(6')-Ib-cr5\" \"parC_E84V\"      #> [25] \"parE_I529L\"     \"parE_S458T\"     \"parE_E460D\"     \"parC_E84G\"      #> [29] \"qnrS1\"          \"marR_S3N\"       \"aac(6')-Ib-cr\"  \"soxR_R20H\"      #> [33] \"qnrB1\"          \"parE_I355T\"     \"soxR_G121D\"     \"qnrB4\"          #> [37] \"qepA\"           \"gyrA_S83A\"      \"qnrA1\"          \"parE_D475E\"     #> [41] \"parC_A108V\"     \"qepA1\"          \"parE_E460K\"     \"gyrA_S83W\"      #> [45] \"qnrB7\"          \"marR_R77C\"      \"parE_L445H\"     \"parE_I464F\"     #> [49] \"qnrB\"           \"acrR_R45C\""},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"model-a-binary-drug-phenotype-using-genetic-marker-presenceabsence-data","dir":"Articles","previous_headings":"Introduction","what":"4. Model a binary drug phenotype using genetic marker presence/absence data","title":"AnalysingGenoPhenoData","text":"Logistic regression models can informative get overview association drug resistance phenotype, marker thought associated relevant drug class. amr_logistic() function uses get_binary_matrix function generate binary-coded genotype phenotype data specified drug class; fits two logistic regression models form R ~ marker1 + marker2 + marker3 + ... NWT ~ marker1 + marker2 + marker3 + .... Note ‘NWT’ variable latter model can taken either precomputed ECOFF-based call WT=wildtype/NWT=nonwildtype (encoded input column ecoff_col), computed S//R phenotype NWT=R/WT=S. amr_logistic() function can fit model using either standard logistic regression approach implemented glm() function, Firth’s bias-reduced penalized-likelihood logistic regression implemented logistf package. default use Firth’s regression, standard logistic regression can fail observations subgroups, happens quite often kind data. use glm() instead, set glm=TRUE. function also filters markers observations combined genotype/phenotype dataset. default minimum 10 can changed using maf parameter (maf stands ‘minor allele frequency’). trouble fitting models, may many markers combinations observations, might try increasing maf value ensure rare markers excluded prior model fitting. Using modelling approach, negative assocation single marker phenotype call R NWT strong indication marker contribute resistance. Note however positive association marker R NWT necessarily imply marker independently contributing resistance phenotype, may non-independence markersthat adequately adjusted model. function returns 4 objects: modelR, modelNWT: data frames summarising model, beta coefficient, lower upper values 95% confidence intervals, p-value marker (generated raw model output using logistf_details() glm_details() relevant) plot: ggplot2 object generated modelR modelNWT objects using compare_estimates() function bin_mat: binary matrix used input regression models","code":"# Manually run Firth's logistic regression model using the binary matrix produced above dataR <- cip_bin[, setdiff(names(cip_bin), c(\"id\", \"pheno\", \"mic\", \"NWT\"))] modelR <- logistf::logistf(R ~ ., data = dataR) #> Warning in logistf::logistf(R ~ ., data = dataR): logistf.fit: Maximum number #> of iterations for full model exceeded. Try to increase the number of iterations #> or alter step size by passing 'logistf.control(maxit=..., maxstep=...)' to #> parameter control  summary(modelR) #> logistf::logistf(formula = R ~ ., data = dataR) #>  #> Model fitted by Penalized ML #> Coefficients: #>                         coef  se(coef)   lower 0.95 upper 0.95        Chisq #> (Intercept)      -4.96390507 0.1811448  -5.34017910 -4.6231446          Inf #> gyrA_S83L         4.11280948 0.2272604   3.67076498  4.5689857          Inf #> gyrA_D87Y         2.80024435 0.9652413   0.47378680  4.6457032 5.280028e+00 #> gyrA_D87N         3.62098439 0.7709538   1.74841360  5.0668148 1.118989e+01 #> parC_S80I         3.96648770 1.3787998   1.89258911  8.8299875 2.247148e+01 #> parE_S458A       -3.48867207 1.6042039  -8.54898079 -0.5324673 5.988137e+00 #> parC_S80R         1.71325782 0.9385031   0.05191566  4.0315534 4.108450e+00 #> parE_L416F        1.91056416 1.6262212  -1.44814273  6.9152611 1.470118e+00 #> qnrB6             4.52952457 1.2592524   1.65349298  7.1835449 8.065719e+00 #> gyrA_D87G         1.55333099 1.4956678  -6.98907726  3.9394371 4.225022e-01 #> parC_S57T        -1.13436499 1.4203029  -5.23754021  1.3915663 5.101399e-01 #> parC_E84A        -5.70441041 2.2070287 -11.29721113 -0.1323417 3.971922e+00 #> soxS_A12S         2.13648042 1.3286588  -0.66203438  4.9842385 1.987397e+00 #> qnrB2             2.44199360 1.5962790  -7.75945152  5.1604273 1.289487e+00 #> qnrS2            -2.00673705 2.1305732  -7.43942342  6.8150128 6.985621e-01 #> parC_E84K        -5.71832108 2.7625239 -12.33010980  0.7827491 3.094908e+00 #> parC_A56T         2.37563231 1.4855542  -5.28098230  4.5695832 6.320247e-01 #> qnrB19            4.71475162 0.4005202   3.91716136  5.5054620          Inf #> `aac(6')-Ib-cr5` -0.15833425 0.7260696  -1.72410982  1.5871315 3.801923e-02 #> parC_E84V        -3.23416018 1.7711701  -8.43712948  0.2806570 3.262335e+00 #> parE_I529L        1.90275405 0.3016164   1.30556855  2.5034222 3.918613e+01 #> parE_S458T       -4.28790735 2.1477103  -9.77270323  1.2196570 2.655964e+00 #> parE_E460D       -3.79866238 2.1030072  -9.21744527  1.6368531 2.259181e+00 #> parC_E84G         1.93913364 1.6389863  -1.17354599  6.9343461 1.627272e+00 #> qnrS1             4.62335756 0.3515918   3.92721260  5.3173640          Inf #> marR_S3N          1.34304342 0.2659083   0.80901622  1.8663526 2.288652e+01 #> `aac(6')-Ib-cr`  -4.30635808 1.8379077  -7.84380488  0.8539635 3.001890e+00 #> soxR_R20H        -5.81488017 2.2224293 -11.30563868 -0.3592767 4.196651e+00 #> qnrB1            -1.03326877 1.7233519  -4.24068024  5.3382336 1.418020e-01 #> parE_I355T        1.02709526 0.6715214  -0.40520437  2.3225745 2.049858e+00 #> soxR_G121D       -2.97288926 1.1081794  -5.22642088 -0.4070150 4.895143e+00 #> qnrB4             4.17537609 0.7837062   2.42602120  5.6429731 1.392998e+01 #> qepA             -9.71337827 3.0807874 -17.15799224 -2.8201977 6.619549e+00 #> gyrA_S83A         1.66806821 1.4515121  -3.19180388  3.7277821 8.393209e-01 #> qnrA1             3.35446716 1.5597479  -1.58044493  5.8907270 2.294695e+00 #> parE_D475E       -0.33734293 0.7214083  -2.08073197  0.9305620 2.182499e-01 #> parC_A108V       -2.14924472 1.7304455  -5.32647631  2.9202773 1.089096e+00 #> qepA1            -1.07546566 1.8773877  -5.11567232  4.8141372 1.572823e-01 #> parE_E460K       -4.81702417 2.3266297 -10.49147703  0.8547559 3.009358e+00 #> gyrA_S83W        10.87954154 2.8555865   4.62377311 17.5616932 8.436158e+00 #> qnrB7             6.06251736 1.6430095   3.11145478 11.0538683 1.259767e+01 #> marR_R77C         0.04695384 1.6545330  -2.92831420  5.0478355 8.109452e-04 #> parE_L445H       -5.88907864 1.8237009 -11.12464450 -2.3249701 1.023072e+01 #> parE_I464F       -4.79046635 2.1585223 -10.25943106  0.6897515 3.165628e+00 #> qnrB              6.06251736 1.6430095   3.11145478 11.0538683 1.259767e+01 #> acrR_R45C        -1.32835211 1.8735607  -4.96320806  3.8738455 4.249534e-01 #>                             p method #> (Intercept)      0.000000e+00      2 #> gyrA_S83L        0.000000e+00      2 #> gyrA_D87Y        2.157140e-02      2 #> gyrA_D87N        8.224427e-04      2 #> parC_S80I        2.132864e-06      2 #> parE_S458A       1.440240e-02      2 #> parC_S80R        4.266945e-02      2 #> parE_L416F       2.253270e-01      2 #> qnrB6            4.511057e-03      2 #> gyrA_D87G        5.156911e-01      2 #> parC_S57T        4.750783e-01      2 #> parC_E84A        4.626492e-02      2 #> soxS_A12S        1.586133e-01      2 #> qnrB2            2.561426e-01      2 #> qnrS2            4.032673e-01      2 #> parC_E84K        7.853759e-02      2 #> parC_A56T        4.266136e-01      2 #> qnrB19           0.000000e+00      2 #> `aac(6')-Ib-cr5` 8.454045e-01      2 #> parC_E84V        7.088814e-02      2 #> parE_I529L       3.852672e-10      2 #> parE_S458T       1.031622e-01      2 #> parE_E460D       1.328243e-01      2 #> parC_E84G        2.020808e-01      2 #> qnrS1            0.000000e+00      2 #> marR_S3N         1.718527e-06      2 #> `aac(6')-Ib-cr`  8.316743e-02      2 #> soxR_R20H        4.050389e-02      2 #> qnrB1            7.064961e-01      2 #> parE_I355T       1.522204e-01      2 #> soxR_G121D       2.693235e-02      2 #> qnrB4            1.897475e-04      2 #> qepA             1.008654e-02      2 #> gyrA_S83A        3.595911e-01      2 #> qnrA1            1.298167e-01      2 #> parE_D475E       6.403767e-01      2 #> parC_A108V       2.966715e-01      2 #> qepA1            6.916710e-01      2 #> parE_E460K       8.278508e-02      2 #> gyrA_S83W        3.678326e-03      2 #> qnrB7            3.862287e-04      2 #> marR_R77C        9.772816e-01      2 #> parE_L445H       1.381204e-03      2 #> parE_I464F       7.520350e-02      2 #> qnrB             3.862287e-04      2 #> acrR_R45C        5.144757e-01      2 #>  #> Method: 1-Wald, 2-Profile penalized log-likelihood, 3-None #>  #> Likelihood ratio test=3665.555 on 45 df, p=0, n=5258 #> Wald test = 999.5128 on 45 df, p = 0  # Extract model summary details using `logistf_details()` modelR_summary <- logistf_details(modelR)  modelR_summary #> # A tibble: 46 × 5 #>    marker        est ci.lower ci.upper       pval #>  * <chr>       <dbl>    <dbl>    <dbl>      <dbl> #>  1 (Intercept) -4.96  -5.34     -4.62  0          #>  2 gyrA_S83L    4.11   3.67      4.57  0          #>  3 gyrA_D87Y    2.80   0.474     4.65  0.0216     #>  4 gyrA_D87N    3.62   1.75      5.07  0.000822   #>  5 parC_S80I    3.97   1.89      8.83  0.00000213 #>  6 parE_S458A  -3.49  -8.55     -0.532 0.0144     #>  7 parC_S80R    1.71   0.0519    4.03  0.0427     #>  8 parE_L416F   1.91  -1.45      6.92  0.225      #>  9 qnrB6        4.53   1.65      7.18  0.00451    #> 10 gyrA_D87G    1.55  -6.99      3.94  0.516      #> # ℹ 36 more rows #> Use ggplot2::autoplot() on this output to visualise  # Plot the point estimates and 95% confidence intervals of the model plot_estimates(modelR_summary) # Alternatively, use the amr_logistic() function to model R and NWT and plot the results together models <- amr_logistic(   geno_table = import_amrfp(ecoli_geno_raw, \"Name\"), pheno_table = ecoli_ast,   antibiotic = \"Ciprofloxacin\", drug_class_list = c(\"Quinolones\"), maf = 10 ) #> Input is already a dataframe. #> [1] \"Some samples had multiple phenotype rows, taking the most resistant only\" #> [1] \"Defining NWT using ecoff column provided: ecoff\" #> [1] \"Fitting logistic regression models using logistf\" # Output tables models$modelR #> # A tibble: 22 × 5 #>    marker        est ci.lower ci.upper       pval #>  * <chr>       <dbl>    <dbl>    <dbl>      <dbl> #>  1 (Intercept) -4.83  -5.19     -4.51  0          #>  2 gyrA_S83L    4.00   3.57      4.44  0          #>  3 gyrA_D87Y    2.53  -0.0130    4.46  0.0511     #>  4 gyrA_D87N    2.69   0.662     4.33  0.0105     #>  5 parC_S80I    3.03   1.60      5.25  0.00000201 #>  6 parE_S458A  -2.05  -4.79      0.190 0.0762     #>  7 parC_S80R    1.70   0.0462    4.02  0.0434     #>  8 parE_L416F   1.83  -1.30      6.85  0.250      #>  9 parC_S57T   -1.29  -5.88      1.30  0.434      #> 10 soxS_A12S    2.32  -0.673     4.88  0.150      #> # ℹ 12 more rows #> Use ggplot2::autoplot() on this output to visualise  models$modelNWT #> # A tibble: 22 × 5 #>    marker           est ci.lower ci.upper    pval #>  * <chr>          <dbl>    <dbl>    <dbl>   <dbl> #>  1 (Intercept) -1.09      -1.17     -1.01 0       #>  2 gyrA_S83L    2.05       1.66      2.47 0       #>  3 gyrA_D87Y    0.584     -1.25      2.25 0.502   #>  4 gyrA_D87N    2.06       0.602     3.84 0.00555 #>  5 parC_S80I    2.81       0.670     8.31 0.00447 #>  6 parE_S458A  -1.61      -6.95      1.43 0.304   #>  7 parC_S80R    1.08      -1.18      5.98 0.412   #>  8 parE_L416F  -0.00272   -3.26      5.03 0.999   #>  9 parC_S57T    0.782      0.160     1.39 0.0144  #> 10 soxS_A12S    1.96       0.177     4.29 0.0312  #> # ℹ 12 more rows #> Use ggplot2::autoplot() on this output to visualise  # Note the matrix output is the same as cip_bin, but without the MIC data as this is not required #    for logistic regression. models$bin_mat #> # A tibble: 5,258 × 49 #>    id       pheno     R   NWT gyrA_S83L gyrA_D87Y gyrA_D87N parC_S80I parE_S458A #>    <chr>    <sir> <dbl> <dbl>     <dbl>     <dbl>     <dbl>     <dbl>      <dbl> #>  1 SAMN031…   S       0     0         0         0         0         0          0 #>  2 SAMN031…   S       0     0         0         0         0         0          0 #>  3 SAMN031…   S       0     0         0         0         0         0          0 #>  4 SAMN031…   S       0     0         1         0         0         0          0 #>  5 SAMN031…   S       0     0         0         1         0         0          0 #>  6 SAMN031…   S       0     0         0         0         0         0          0 #>  7 SAMN031…   S       0     0         0         0         0         0          0 #>  8 SAMN031…   R       1     1         1         0         1         1          1 #>  9 SAMN031…   S       0     0         1         0         0         0          0 #> 10 SAMN031…   R       1     1         1         0         1         1          1 #> # ℹ 5,248 more rows #> # ℹ 40 more variables: parC_S80R <dbl>, parE_L416F <dbl>, qnrB6 <dbl>, #> #   gyrA_D87G <dbl>, parC_S57T <dbl>, parC_E84A <dbl>, soxS_A12S <dbl>, #> #   qnrB2 <dbl>, qnrS2 <dbl>, parC_E84K <dbl>, parC_A56T <dbl>, qnrB19 <dbl>, #> #   `aac(6')-Ib-cr5` <dbl>, parC_E84V <dbl>, parE_I529L <dbl>, #> #   parE_S458T <dbl>, parE_E460D <dbl>, parC_E84G <dbl>, qnrS1 <dbl>, #> #   marR_S3N <dbl>, `aac(6')-Ib-cr` <dbl>, soxR_R20H <dbl>, qnrB1 <dbl>, …"},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"assess-solo-positive-predictive-value-of-genetic-markers","dir":"Articles","previous_headings":"Introduction","what":"5. Assess solo positive predictive value of genetic markers","title":"AnalysingGenoPhenoData","text":"strongest evidence effect individual genetic marker drug phenotype positive predictive value (PPV) resistance amongst strains carry marker ‘solo’ markers known associated resistance drug class. referred ‘solo PPV’. function solo_ppv_analysis() takes input genotype phenotype tables, calculates solo PPV resistance specific drug (included phenotype table) formarkers associated specified drug class (included genotype table). uses get_binary_matrix() function first calculate binary matrix, filters samples one marker. calculates remaining marker, amongst genomes marker found solo, number genomes, number proportion R NWT, 95% confidence intervals proportions. values returned table, also plotted can easily visualise distribution S//R calls solo PPV R NWT, solo marker. function returns 4 objects: solo_stats: data frame containing numbers, proportions confidence intervals PPV R NWT categories amr_binary: (wide format) binary matrix strains geno/pheno data specified drug/class solo_binary: (long format) binary matrix strains solo marker found, .e. data used calculate PPV combined_plot: plot showing distribution S//R calls solo PPV R NWT, solo marker","code":"# Run a solo PPV analysis soloPPV_cipro <- solo_ppv_analysis(ecoli_geno, ecoli_ast, antibiotic = \"Ciprofloxacin\", drug_class_list = c(\"Quinolones\"), sir_col = \"pheno\") #> [1] \"Some samples had multiple phenotype rows, taking the most resistant only\" #> [1] \"Defining NWT using ecoff column provided: ecoff\" # Output table soloPPV_cipro$solo_stats #> # A tibble: 44 × 8 #>    marker         category     x     n    ppv      se ci.lower ci.upper #>    <chr>          <chr>    <dbl> <int>  <dbl>   <dbl>    <dbl>    <dbl> #>  1 aac(6')-Ib-cr5 R            0     1 0      0         0        0      #>  2 gyrA_D87G      R            0     4 0      0         0        0      #>  3 gyrA_D87N      R            2     6 0.333  0.192     0        0.711  #>  4 gyrA_D87Y      R            0     4 0      0         0        0      #>  5 gyrA_S83A      R            0    13 0      0         0        0      #>  6 gyrA_S83L      R           29   108 0.269  0.0426    0.185    0.352  #>  7 marR_S3N       R           13   524 0.0248 0.00679   0.0115   0.0381 #>  8 parC_A56T      R            0     6 0      0         0        0      #>  9 parC_S57T      R            0    40 0      0         0        0      #> 10 parE_D475E     R            0    91 0      0         0        0      #> # ℹ 34 more rows  # Interim matrices with data used to compute stats and plots soloPPV_cipro$solo_binary #> # A tibble: 1,009 × 8 #>    id           pheno   mic  disk     R   NWT marker    value #>    <chr>        <sir> <mic> <dsk> <dbl> <dbl> <chr>     <dbl> #>  1 SAMN03177618   S    0.25    NA     0     0 gyrA_S83L     1 #>  2 SAMN03177619   S    0.12    NA     0     0 gyrA_D87Y     1 #>  3 SAMN03177623   S    0.25    NA     0     0 gyrA_S83L     1 #>  4 SAMN03177631   S    0.25    NA     0     0 gyrA_S83L     1 #>  5 SAMN03177635   S    0.25    NA     0     0 gyrA_S83L     1 #>  6 SAMN03177637   S    0.25    NA     0     0 gyrA_S83L     1 #>  7 SAMN03177638   S    0.25    NA     0     0 qnrB6         1 #>  8 SAMN03177639   S    0.12    NA     0     0 gyrA_S83L     1 #>  9 SAMN03177643   S    0.25    NA     0     0 gyrA_S83L     1 #> 10 SAMN03177646   S    0.25    NA     0     0 gyrA_S83L     1 #> # ℹ 999 more rows  soloPPV_cipro$amr_binary #> # A tibble: 5,258 × 51 #>    id    pheno     mic  disk     R   NWT gyrA_S83L gyrA_D87Y gyrA_D87N parC_S80I #>    <chr> <sir>   <mic> <dsk> <dbl> <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #>  1 SAMN…   S   <=0.015    NA     0     0         0         0         0         0 #>  2 SAMN…   S   <=0.015    NA     0     0         0         0         0         0 #>  3 SAMN…   S   <=0.015    NA     0     0         0         0         0         0 #>  4 SAMN…   S     0.250    NA     0     0         1         0         0         0 #>  5 SAMN…   S     0.120    NA     0     0         0         1         0         0 #>  6 SAMN…   S   <=0.015    NA     0     0         0         0         0         0 #>  7 SAMN…   S   <=0.015    NA     0     0         0         0         0         0 #>  8 SAMN…   R    >4.000    NA     1     1         1         0         1         1 #>  9 SAMN…   S     0.250    NA     0     0         1         0         0         0 #> 10 SAMN…   R    >4.000    NA     1     1         1         0         1         1 #> # ℹ 5,248 more rows #> # ℹ 41 more variables: parE_S458A <dbl>, parC_S80R <dbl>, parE_L416F <dbl>, #> #   qnrB6 <dbl>, gyrA_D87G <dbl>, parC_S57T <dbl>, parC_E84A <dbl>, #> #   soxS_A12S <dbl>, qnrB2 <dbl>, qnrS2 <dbl>, parC_E84K <dbl>, #> #   parC_A56T <dbl>, qnrB19 <dbl>, `aac(6')-Ib-cr5` <dbl>, parC_E84V <dbl>, #> #   parE_I529L <dbl>, parE_S458T <dbl>, parE_E460D <dbl>, parC_E84G <dbl>, #> #   qnrS1 <dbl>, marR_S3N <dbl>, `aac(6')-Ib-cr` <dbl>, soxR_R20H <dbl>, …"},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"compare-markers-with-assay-data","dir":"Articles","previous_headings":"Introduction","what":"6. Compare markers with assay data","title":"AnalysingGenoPhenoData","text":"far considered impact individual markers, association categorical S//R WT/NWT calls. function amr_upset() takes binary matrix table cip_bin summarising ciprofloxacin resistance vs quinolone markers, generated using get_binary_matrix(), explores distribution MIC disk diffusion assay values observed combinations markers (solo multiple markers). visualises data form upset plot, showing distribution assay values S//R calls observed marker combination, returns summary distributions (including sample size, median interquartile range, number proportion classified R). function returns 2 objects: summary: data frame containing summarising data associated combination markers plot: upset plot showing distribution assay values, breakdown S//R calls, observed marker combination","code":"# Compare ciprofloxacin MIC data with quinolone marker combinations, #    using the binary matrix we constructed earlier via get_binary_matrix() cipro_mic_upset <- amr_upset(cip_bin, min_set_size = 2, assay = \"mic\", order = \"value\") # Output table cipro_mic_upset$summary #> # A tibble: 110 × 8 #>    marker_list             marker_count median   q25   q75     ppv     R     n #>    <chr>                          <dbl>  <dbl> <dbl> <dbl>   <dbl> <dbl> <int> #>  1 \"\"                                 0  0.015 0.015  0.25 0.00757    26  3436 #>  2 \"qnrB\"                             1  2     2      2    1           1     1 #>  3 \"qnrB7\"                            1  1     1      1    1           1     1 #>  4 \"parE_E460K, gyrA_S83W\"            2  4     4      4    1           1     1 #>  5 \"parE_D475E\"                       1  0.015 0.015  0.5  0           0    91 #>  6 \"qnrA1\"                            1  0.12  0.12   0.12 0           0     2 #>  7 \"gyrA_S83A\"                        1  0.5   0.5    0.5  0           0    13 #>  8 \"qnrB4\"                            1  0.5   0.5    0.75 0.286       2     7 #>  9 \"parE_I355T\"                       1  0.015 0.015  0.5  0           0    40 #> 10 \"marR_S3N\"                         1  0.5   0.5    0.5  0.0248     13   524 #> # ℹ 100 more rows"},{"path":"https://interpretamr.github.io/AMRgen/articles/AnalysingGenoPhenoData.html","id":"download-reference-mic-distributions-and-compare-to-your-data","dir":"Articles","previous_headings":"Introduction","what":"7. Download reference MIC distributions and compare to your data","title":"AnalysingGenoPhenoData","text":"","code":"# get MIC distribution for ciprofloxacin, for all organisms get_eucast_mic_distribution(\"cipro\") #> # A tibble: 2,033 × 4 #>    microorganism              microorganism_code   mic count #>    <chr>                      <mo>               <mic> <int> #>  1 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.002     0 #>  2 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.004     0 #>  3 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.008     0 #>  4 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.016     0 #>  5 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.030     0 #>  6 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.060     0 #>  7 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.125     0 #>  8 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.250     1 #>  9 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.500     0 #> 10 Achromobacter xylosoxidans B_ACHRMB_XYLS      1.000     6 #> # ℹ 2,023 more rows  # specify microorganism to only get results for that pathogen ecoli_cip_mic_data <- get_eucast_mic_distribution(\"cipro\", \"E. coli\")  # get disk diffusion data instead ecoli_cip_disk_data <- get_eucast_disk_distribution(\"cipro\", \"E. coli\")  # plot the MIC data mics <- rep(ecoli_cip_mic_data$mic, ecoli_cip_mic_data$count) ggplot2::autoplot(mics, ab = \"cipro\", mo = \"E. coli\", title = \"E. coli cipro reference distribution\") # Compare reference distribution to random test data my_mic_values <- AMR::random_mic(500) comparison <- compare_mic_with_eucast(my_mic_values, ab = \"cipro\", mo = \"E. coli\") #> Joining with `by = join_by(value)` comparison #> # A tibble: 25 × 3 #>    value    user eucast #>  * <fct>   <int>  <int> #>  1 <=0.001    35      0 #>  2 0.002      31     14 #>  3 0.004       0    189 #>  4 0.005      25      0 #>  5 0.008       0   3952 #>  6 0.01       20      0 #>  7 0.016       0   7238 #>  8 0.025      32      0 #>  9 0.03        0   1355 #> 10 0.06        0    356 #> # ℹ 15 more rows #> Use ggplot2::autoplot() on this output to visualise. ggplot2::autoplot(comparison) # Compare reference distribution to example E. coli data ecoli_cip <- ecoli_ast$mic[ecoli_ast$drug_agent == \"CIP\"] comparison <- compare_mic_with_eucast(ecoli_cip, ab = \"cipro\", mo = \"E. coli\") #> Joining with `by = join_by(value)` comparison #> # A tibble: 36 × 3 #>    value    user eucast #>  * <fct>   <int>  <int> #>  1 0.002       0     14 #>  2 0.004       0    189 #>  3 0.008       0   3952 #>  4 <0.015     41      0 #>  5 <=0.015  2642      0 #>  6 0.016       0   7238 #>  7 0.03       69   1355 #>  8 <=0.06     11      0 #>  9 0.06        5    356 #> 10 0.12       34      0 #> # ℹ 26 more rows #> Use ggplot2::autoplot() on this output to visualise. ggplot2::autoplot(comparison)"},{"path":"https://interpretamr.github.io/AMRgen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthijs S. Berends. Author, maintainer. Natacha Couto. Author. Zoe . Dyson. Author. Jane Hawkey. Author. Kat Holt. Author.","code":""},{"path":"https://interpretamr.github.io/AMRgen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Berends MS, Couto N, Dyson ZA, Hawkey J, Holt K (2025). AMRgen: Genotype-Phenotype Integration Antimicrobial Resistance Research. R package version 0.0.1.9000, https://interpretAMR.github.io/AMRgen/.","code":"@Manual{,   title = {AMRgen: Genotype-Phenotype Integration for Antimicrobial Resistance Research},   author = {Matthijs S. Berends and Natacha Couto and Zoe A. Dyson and Jane Hawkey and Kat Holt},   year = {2025},   note = {R package version 0.0.1.9000},   url = {https://interpretAMR.github.io/AMRgen/}, }"},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"amrgen","dir":"","previous_headings":"","what":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"R Package Genetic Phenotypic Resistance Interpretation","code":""},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"AMRgen open-source R package designed bridge gap genotypic phenotypic antimicrobial resistance (AMR) data. Developed extension AMR R package, provides tools interpret AMR genes, integrate findings antimicrobial susceptibility test (AST) data, calculate genotype-phenotype associations. package developed collaboration ESGEM-AMR Working Group tailored researchers healthcare professionals tackling AMR globally. AMRgen website full function documentation Vignette working analysing geno/pheno data using key functions.","code":""},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"Import Genotype Phenotype Data: Import common formats (NCBI AST phenotypes; AMRfinderplus hAMRonization genotypes Genotype-Phenotype Integration: Links AMR gene presence phenotypic resistance profiles, enabling deeper insights resistance mechanisms. Automated EUCAST MIC Distribution Integration: Fetch MIC distribution data directly EUCAST seamless comparison local susceptibility data. Visualisation: Generate powerful UpSet plots identify intersections AMR gene presence phenotypic resistance, highlighting multidrug resistance patterns. Modular Extensible: Leverages robust foundation AMR package, including antibiotic selectors clinical breakpoint interpretations. Planned development - NCBI-Compliant Export: Export phenotype data NCBI-compliant antibiogram format. - Expanded Data Import: Import parse phenotype data tools (e.g. CARD, ResFinder).","code":""},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"install explore package, follow instructions :","code":""},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"installation","dir":"","previous_headings":"Getting Started","what":"Installation","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"Note package requires latest version AMR package (still beta). Install latest version AMR package : install package best restart R running installation. didn’t /encounter issues examples install, may help also restart install start fresh examples .","code":"install.packages(\"remotes\") # if you haven't already remotes::install_github(\"msberends/AMR\") # Install from GitHub remotes::install_github(\"amrverse/AMRgen\")"},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"quick-usage-examples","dir":"","previous_headings":"","what":"Quick Usage Examples","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"","code":"library(AMRgen)"},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"investigate-ciprofloxacin-resistance-vs-quinolone-genotype-markers-via-solo-ppv-and-upset-plots","dir":"","previous_headings":"Quick Usage Examples","what":"Investigate ciprofloxacin resistance vs quinolone genotype markers, via solo PPV and upset plots","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"","code":"# Example public E. coli AST data from NCBI #  (already imported via import_ncbi_ast() and re-interpreted with as.sir()) ecoli_ast  # Import matching E. coli AMRfinderplus data from AllTheBacteria ecoli_geno <- import_amrfp(ecoli_geno_raw, \"Name\")  # Calculate positive predictive value for ciprofloxacin resistance #  (for all quinolone-associated genotype markers) soloPPV_cipro <- solo_ppv_analysis(ecoli_geno, ecoli_ast, antibiotic=\"Ciprofloxacin\", drug_class_list=c(\"Quinolones\"), sir_col=\"pheno\")  # Do upset plot of ciprofloxacin MIC vs quinolone genotype marker combinations #  (for combinations observed at least 5 times) cip_upset <- amr_upset(soloPPV_cipro$amr_binary, min_set_size=5, assay=\"mic\", order=\"value\")  # Do logistic regression of ciprofloxacin resistance as a function of presence/absence of quinolone-associated markers #  (for markers observed at least 10 times) models <- amr_logistic(geno_table = import_amrfp(ecoli_geno_raw, \"Name\"), pheno_table = ecoli_ast,                         antibiotic = \"Ciprofloxacin\", drug_class_list = c(\"Quinolones\"), maf=10)"},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"download-reference-mic-distribution-from-eucastorg-and-compare-to-example-data","dir":"","previous_headings":"Quick Usage Examples","what":"Download reference MIC distribution from eucast.org and compare to example data","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"see Vignette.","code":"# Get MIC reference distribution for ciprofloxacin in E. coli ecoli_cip_mic_data <- get_eucast_mic_distribution(\"cipro\", \"E. coli\")  # Plot the reference distribution  mics <- rep(ecoli_cip_mic_data$mic, ecoli_cip_mic_data$count) ggplot2::autoplot(mics, ab = \"cipro\", mo = \"E. coli\", title = \"E. coli cipro reference distribution\")  # Compare reference distribution to example E. coli data ecoli_cip <- ecoli_ast$mic[ecoli_ast$drug_agent==\"CIP\"] comparison <- compare_mic_with_eucast(ecoli_cip, ab = \"cipro\", mo = \"E. coli\") comparison ggplot2::autoplot(comparison)"},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"Contributions welcome! encounter issues wish suggest new features, please open issue submit pull request.","code":""},{"path":"https://interpretamr.github.io/AMRgen/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Genotype-Phenotype Integration for Antimicrobial Resistance Research","text":"package distributed GNU GPL-3.0 Licence. See LICENSE details.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/AMRgen-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AMRgen: Genotype-Phenotype Integration for Antimicrobial Resistance Research — AMRgen-package","title":"AMRgen: Genotype-Phenotype Integration for Antimicrobial Resistance Research — AMRgen-package","text":"AMRgen package provides tools interpreting antimicrobial resistance (AMR) genes, integrating genomic data phenotypic antimicrobial susceptibility testing (AST) data, calculating genotype-phenotype associations. package extends functionality AMR package, enabling researchers fetch MIC distribution data EUCAST, visualise multidrug resistance patterns using UpSet plots, generate NCBI-compliant antibiograms. Designed AMR research surveillance, AMRgen aims support data-driven decision-making combating AMR global scale.","code":""},{"path":[]},{"path":"https://interpretamr.github.io/AMRgen/reference/AMRgen-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AMRgen: Genotype-Phenotype Integration for Antimicrobial Resistance Research — AMRgen-package","text":"Maintainer: Matthijs S. Berends m.s.berends@umcg.nl (ORCID) Authors: Natacha Couto (ORCID) Zoe . Dyson zoe.dyson@lshtm.ac.uk (ORCID) Jane Hawkey (ORCID) Kat Holt (ORCID)","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_complexUpset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Upset plot for AMR data — amr_complexUpset","title":"Create an Upset plot for AMR data — amr_complexUpset","text":"function generates Upset plot using binary matrix genetic determinants antimicrobial resistance (AMR) data. Optionally, MIC disk diffusion breakpoints can overlaid plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_complexUpset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Upset plot for AMR data — amr_complexUpset","text":"","code":"amr_complexUpset(   binary_matrix,   min_set_size = 10,   mic_disk = \"mic\",   remove_NAs = TRUE,   gene_determinants = NULL,   colour_by = \"pheno\",   plot_breakpoints = FALSE,   organism = NULL,   break_guide = \"EUCAST 2025\",   break_type = \"ECOFF\",   drug = NULL,   sort_intersections_by = \"degree\",   sort_intersections = \"ascending\",   show_intersect_size = TRUE,   intersect_counts = TRUE,   heights = NULL,   colour_values = c(S = \"#66c2a5\", I = \"#fdae61\", R = \"#d53e4f\") )"},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_complexUpset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Upset plot for AMR data — amr_complexUpset","text":"binary_matrix binary matrix rows represent samples columns represent genetic determinants phenotypic resistance data. min_set_size minimum size set included plot. Default 10. mic_disk character string specifying whether use 'mic' 'disk' y-axis. Must either \"mic\" \"disk\". Default \"mic\". remove_NAs Logical. TRUE, removes rows missing values selected mic_disk column. Default TRUE. gene_determinants character vector specifying genetic determinants include. NULL, genes used. Default NULL. colour_by character string specifying column used colour mapping plot. Default \"pheno\". plot_breakpoints Logical. TRUE, overlays MIC disk diffusion breakpoints plot. Default FALSE. organism character string specifying organism, used plotting breakpoints. break_guide character string specifying breakpoint guideline (e.g., \"EUCAST 2025\"). Default \"EUCAST 2025\". break_type character string specifying breakpoint type (e.g., \"ECOFF\"). Default \"ECOFF\". drug character string specifying antimicrobial agent analysed. sort_intersections_by character string passed ComplexUpset::upset() control sorting intersections (e.g., \"degree\" \"cardinality\"). sort_intersections character string specifying order intersections (\"ascending\" \"descending\"). show_intersect_size Logical. TRUE, shows bar plot intersection sizes. Default TRUE. intersect_counts Logical. TRUE, counts displayed intersection size bars. Default TRUE. heights Numeric vector specifying relative heights upset matrix vs annotation plots. NULL, defaults based show_intersect_size. colour_values named vector specifying colours different resistance categories (S, , R). Default c(S=\"#66c2a5\", =\"#fdae61\", R=\"#d53e4f\").","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_complexUpset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Upset plot for AMR data — amr_complexUpset","text":"ggplot object displaying Upset plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_complexUpset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Upset plot for AMR data — amr_complexUpset","text":"","code":"ecoli_geno <- import_amrfp(ecoli_geno_raw, \"Name\") #> Input is already a dataframe.  binary_matrix <- get_binary_matrix(   geno_table = ecoli_geno,   pheno_table = ecoli_ast,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"pheno\",   keep_assay_values = TRUE,   keep_assay_values_from = \"mic\" ) #> [1] \"Some samples had multiple phenotype rows, taking the most resistant only\" #> [1] \"Defining NWT using ecoff column provided: ecoff\"  amr_complexUpset(binary_matrix) #> Warning: Removed 171 rows containing non-finite outside the scale range (`stat_sum()`)."},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"AMR Logistic Regression Analysis — amr_logistic","title":"AMR Logistic Regression Analysis — amr_logistic","text":"Performs logistic regression analyze relationship genetic markers phenotype (R, NWT) specified antibiotic.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AMR Logistic Regression Analysis — amr_logistic","text":"","code":"amr_logistic(   geno_table,   pheno_table,   antibiotic,   drug_class_list,   geno_sample_col = NULL,   pheno_sample_col = NULL,   sir_col = \"pheno\",   ecoff_col = \"ecoff\",   maf = 10,   glm = FALSE,   single_plot = TRUE,   colors = c(\"maroon\", \"blue4\"),   axis_label_size = 9 )"},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AMR Logistic Regression Analysis — amr_logistic","text":"geno_table data frame containing genotype data. pheno_table data frame containing phenotypic data. antibiotic character string specifying antibiotic model using logistic regression. drug_class_list vector drug class names. Used subset relevant markers analysis. geno_sample_col (Optional) character string specifying column geno_table identifies sample IDs. Defaults NULL. pheno_sample_col (Optional) character string specifying column pheno_table identifies sample IDs. Defaults NULL. sir_col (Optional) character string specifying column pheno_table contains phenotype values (e.g., resistance/susceptibility). Defaults \"pheno\". ecoff_col (Optional) character string specifying column pheno_table containing ECOFF (epidemiological cutoff) values. Defaults \"ecoff\". maf (Optional) integer specifying minimum allele frequency (MAF) threshold. Markers MAF lower value excluded. Defaults 10. glm (Optional) Change TRUE fit model glm. Otherwise fit model logistf (default). single_plot (Optional) logical value. TRUE, single plot produced comparing estimates resistance (R) non-resistance (NWT). Otherwise, two plots printed side--side. Defaults TRUE. colors (Optional) vector two colors, use R NWT models plots. Defaults c(\"maroon\", \"blue4\"). axis_label_size (Optional) numeric value controlling size axis labels plot. Defaults 9.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AMR Logistic Regression Analysis — amr_logistic","text":"list following components: bin_mat: binary matrix genetic data phenotypic resistance information. modelR: fitted logistic regression model resistance (R). modelNWT: fitted logistic regression model non-resistance (NWT). plot: ggplot object comparing estimates resistance non-resistance corresponding statistical significance indicators.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AMR Logistic Regression Analysis — amr_logistic","text":"","code":"# Example usage of the amr_logistic function result <- amr_logistic(   geno_table = import_amrfp(ecoli_geno_raw, \"Name\"),   pheno_table = ecoli_ast,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   maf = 10 ) #> Input is already a dataframe. #> [1] \"Some samples had multiple phenotype rows, taking the most resistant only\" #> [1] \"Defining NWT using ecoff column provided: ecoff\" #> [1] \"Fitting logistic regression models using logistf\"  # To access the plot: print(result$plot)"},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","title":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","text":"function generates set visualizations analyze AMR gene combinations, MIC values, gene prevalence given binary matrix. creates several plots, including MIC distributions, bar plot percentage strains per combination, dot plot gene combinations strains, plot gene prevalence. also outputs table summarizing MIC distribution (median, lower, upper) number resistant, marker combination.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","text":"","code":"amr_upset(   binary_matrix,   min_set_size = 2,   order = \"\",   plot_set_size = FALSE,   plot_category = TRUE,   print_category_counts = FALSE,   print_set_size = FALSE,   boxplot_colour = \"grey\",   assay = \"mic\" )"},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","text":"binary_matrix data frame containing original binary matrix output get_binary_matrix function. Expected columns identifier (column 1, name), pheno (class sir, S//R categories colour points), mic (class mic, MIC values plot), columns representing gene presence/absence (binary coded, .e., 1 = present, 0 = absent). min_set_size integer specifying minimum size gene set included analysis plots. Default 2. genes least number occurrences included plots. order character string indicating order combinations x-axis. Options : - \"\" (default): decreasing frequency combinations - \"genes\": order number genes combination - \"value\": order median assay value (MIC disk zone) combination. plot_set_size Logical indicating whether include bar plot showing set size (.e., number times combination markers observed). Default FALSE. plot_category Logical indicating whether include stacked bar plot showing, marker combination, proportion samples phenotype classification (specified pheno column input file). Default TRUE. print_category_counts Logical indicating whether, plot_category TRUE, print number strains resistance category marker combination plot. Default FALSE. print_set_size Logical indicating whether, plot_set_size TRUE, print number strains marker combination plot. Default FALSE. boxplot_colour Colour lines box plots summarising MIC distribution marker combination. Default \"grey\". assay character string indicating whether plot MIC disk diffusion data. Must one : - \"mic\": plot MIC data stored column mic - \"disk\": plot disk diffusion data stored column disk","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","text":"list containing following elements: plot: grid plots displaying: () grid showing marker combinations observed, MIC distribution per marker combination, frequency per marker (optionally) phenotype classification /number samples marker combination. summary: data frame summarizing marker combination observed, including median MIC (interquartile range), number resistant isolates, positive predictive value resistance.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/amr_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Series of Plots for AMR Gene and Combination Analysis — amr_upset","text":"","code":"if (FALSE) { # \\dontrun{ ecoli_geno <- import_amrfp(ecoli_geno_raw, \"Name\") binary_matrix <- get_binary_matrix(   geno_table = ecoli_geno,   pheno_table = ecoli_ast,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"pheno\",   keep_assay_values = TRUE,   keep_assay_values_from = \"mic\" ) amr_upset(binary_matrix, min_set_size = 3, order = \"value\", assay = \"mic\") } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/as.gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Class and AMR Parsing Functions — as.gene","title":"Gene Class and AMR Parsing Functions — as.gene","text":"Functions create custom \"gene\" class parse AMR data.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/as.gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Class and AMR Parsing Functions — as.gene","text":"","code":"as.gene(x)"},{"path":"https://interpretamr.github.io/AMRgen/reference/as.gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Class and AMR Parsing Functions — as.gene","text":"x character vector converted \"gene\" class.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/as.gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Class and AMR Parsing Functions — as.gene","text":".gene, object class \"gene\".","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/as.gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene Class and AMR Parsing Functions — as.gene","text":"","code":"if (FALSE) { # \\dontrun{ # Create a gene object gene <- as.gene(c(\"gene1\", \"gene2\")) print(gene)  # Parse AMR data parsed_data <- import_amrfp(\"path/to/input_table.tsv\", \"SampleID\") } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"function creates stacked bar plot using ggplot2, x-axis represents MIC (Minimum Inhibitory Concentration) values, y-axis represents frequency, bars colored gene symbols. plot faceted antibiotic.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"","code":"barplot_mic_gen(   pheno_data,   geno_data,   pathogen_mo,   abs_to_plot,   pheno_sample_col = NULL,   geno_sample_col = NULL,   measure_method = \"mic\",   breakpoint_source = \"EUCAST 2025\",   breakpoint_type = \"ECOFF\",   color_by = \"gene\",   plot_title = \"Frequency distribution of values for different genotypes\",   leg_pos = \"bottom\",   ncol_leg = min(2, round(length(unique(geno_data$marker))/10)) )"},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"pheno_data data.frame read phenotypic parser, containing column listing sample ID, \"spp_pheno\" (class mo), \"drug_agent\" (class ab), \"mic\" (class mic), \"disk\" (class disk). sample ID column used match geno_data. geno_data data.frame generated genotypic parser, containing sample ID column, \"marker\" (class gene), \"drug_agent\" (class ab, note value can NA specific agent), \"drug_class\" (controlled vocab drug classes AMR package). pathogen_mo string mo format specifying pathogen used select breakpoints, e.g. 'B_STPHY_AURS'. abs_to_plot vector strings listing antibiotic drugs wish plot. Need three letter code format per AMR package. pheno_sample_col name sample column pheno_data, defaults first column. geno_sample_col name sample column geno_data, defaults first column. measure_method string specifying method used measure antimicrobial resistance. default 'mic' Minimum Inhibitory Concentration, option 'disk' Disk Diffusion. breakpoint_source string representing source breakpoint data. default, set EUCAST 2025. breakpoint_type string specifying type breakpoint use, default 'ECOFF'. color_by string specifying variable used color plot elements. Options include 'gene' (default) color gene, 'class' color drug class. strings also default gene. plot_title string specifying title plot. default title \"Frequency distribution values different genotypes\". leg_pos string specifying position plot's legend. default 'bottom', options include 'top', 'left', 'right'. ncol_leg integer specifying number columns legend. default, calculated based number unique gene symbols geno_data, rounded 10 items per column, minimally 2. ensures legend well-organized many gene symbols.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"ggplot2 object representing stacked bar plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"function automatically groups data antibiotic, MIC (mg/L), gene symbol calculates frequency occurrences. plot uses viridis color scale \"turbo\" palette default. can replace custom palette desired.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/barplot_mic_gen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Stacked Bar Plot of MIC Values Colored by Gene Symbol for Each Antibiotic — barplot_mic_gen","text":"","code":"if (FALSE) { # \\dontrun{ barplot_mic_gen(pheno_data,   geno_data,   abs_to_plot = c(\"CIP\", \"IPM\", \"MEM\"),   measure_method = \"mic\",   pathogen_mo = \"B_ESCHR_COLI\" ) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot to Compare Two Sets of Estimates — compare_estimates","title":"Plot to Compare Two Sets of Estimates — compare_estimates","text":"function compares two sets estimates creating plot overlays estimates confidence intervals sets. can also display estimates two separate plots.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot to Compare Two Sets of Estimates — compare_estimates","text":"","code":"compare_estimates(   tbl1,   tbl2,   title1 = NULL,   title2 = NULL,   title = NULL,   sig = 0.05,   colors = c(\"maroon\", \"blue4\"),   x_title = \"Coefficient (95% CI)\",   y_title = \"Variant\",   axis_label_size = 9,   single_plot = TRUE,   pd = position_dodge(width = 0.8),   marker_order = NULL )"},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot to Compare Two Sets of Estimates — compare_estimates","text":"tbl1 tibble containing first set summary statistics (e.g., coefficients, p-values, CI) variant. Expected columns : marker: name marker (e.g., variable name). pval: p-value marker. ci.lower: lower bound confidence interval. ci.upper: upper bound confidence interval. est: estimated coefficient. tbl2 tibble containing second set summary statistics variant (format tbl1). title1 Title tbl1 data. single_plot, legend label tbl1 data; otherwise title tbl1 plot. title2 Title tbl2 data. single_plot, legend label tbl2 data; otherwise title tbl2 plot. title (optional) main title combined plot, single_plot TRUE. sig (optional) individual plots, p-value threshold data points highlight significant. Defaults 0.05. colors (optional) combined plot, vector two colors represent two input datasets. x_title (optional) title x-axis. Defaults \"Coefficient (95% CI)\". y_title (optional) title y-axis. Defaults \"Variant\". axis_label_size (optional) font size axis labels. Defaults 9. single_plot boolean indicating whether make single combined plot (TRUE), plot dataset side--side (FALSE). pd (optional) Position dodge, .e. spacing 2 estimates positioned /line. Default 'position_dodge(width = 0.8)' marker_order (optional) Vector indicating order markers plotted y-axis.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot to Compare Two Sets of Estimates — compare_estimates","text":"ggplot object displaying comparison two sets estimates.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_geno_pheno_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","title":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","text":"function compares genotype (geno_data) phenotype (pheno_data) datasets based sample IDs. identifies sample IDs unique either dataset, well overlap. Optionally, renames sample ID columns datasets consistency.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_geno_pheno_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","text":"","code":"compare_geno_pheno_id(   geno_data,   pheno_data,   geno_sample_col = NULL,   pheno_sample_col = NULL,   rename_id_cols = F )"},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_geno_pheno_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","text":"geno_data data frame containing genotype data. first column (column specified geno_sample_col) represent sample IDs. pheno_data data frame containing phenotype data. first column (column specified pheno_sample_col) represent sample IDs. geno_sample_col string specifying name column geno_data contains sample IDs. Defaults first column geno_data. pheno_sample_col string specifying name column pheno_data contains sample IDs. Defaults first column pheno_data. rename_id_cols logical value indicating whether rename sample ID columns geno_data pheno_data \"id\". Defaults FALSE.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_geno_pheno_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","text":"list containing: pheno_unique: vector sample IDs unique phenotype dataset. geno_unique: vector sample IDs unique genotype dataset. overlap_ids: vector sample IDs common datasets. geno_matched: data frame genotype data filtered include samples matching IDs. pheno_matched: data frame phenotype data filtered include samples matching IDs.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/compare_geno_pheno_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Genotype and Phenotype Data by Sample ID — compare_geno_pheno_id","text":"","code":"geno_table <- import_amrfp(ecoli_geno_raw, \"Name\") #> Input is already a dataframe. head(ecoli_ast) #> # A tibble: 6 × 24 #>   id           spp_pheno    drug_agent ecoff pheno   mic  disk guideline #>   <chr>        <mo>         <ab>       <chr> <sir> <mic> <dsk> <chr>     #> 1 SAMN36015110 B_ESCHR_COLI CIP        NWT     R    <128    NA CLSI      #> 2 SAMN07988997 B_ESCHR_COLI IPM        NWT     S     <=1    NA CLSI      #> 3 SAMN11638310 B_ESCHR_COLI CIP        NWT     R     256    NA CLSI      #> 4 SAMN05729964 B_ESCHR_COLI CIP        NWT     R      64    NA CLSI      #> 5 SAMN18634044 B_ESCHR_COLI CIP        NWT     R     <=1    NA CLSI      #> 6 SAMN26232716 B_ESCHR_COLI CIP        NA      NA     NA    NA CLSI      #> # ℹ 16 more variables: `Organism group` <chr>, `Scientific name` <chr>, #> #   `Isolation type` <chr>, Location <chr>, `Isolation source` <chr>, #> #   Isolate <chr>, Antibiotic <chr>, `Resistance phenotype` <chr>, #> #   `Measurement sign` <chr>, `MIC (mg/L)` <dbl>, `Disk diffusion (mm)` <dbl>, #> #   `Laboratory typing platform` <chr>, Vendor <chr>, #> #   `Laboratory typing method version or reagent` <chr>, #> #   `Testing standard` <chr>, `Create date` <dttm> result <- compare_geno_pheno_id(geno_table,                                 ecoli_ast,                                 geno_sample_col = \"Name\",                                 pheno_sample_col = \"id\") print(result$pheno_unique) #>   [1] \"SAMN36015110\" \"SAMN05729964\" \"SAMN26232716\" \"SAMN10620111\" \"SAMN10620168\" #>   [6] \"SAMN10620104\" \"SAMN10620102\" \"SAMN10620129\" \"SAMN10620121\" \"SAMN10620086\" #>  [11] \"SAMN10221312\" \"SAMN10221481\" \"SAMN10221470\" \"SAMN10620159\" \"SAMN10620088\" #>  [16] \"SAMN10620123\" \"SAMN10620164\" \"SAMN10620145\" \"SAMN10620085\" \"SAMN10620169\" #>  [21] \"SAMN10620172\" \"SAMN10620082\" \"SAMN10620091\" \"SAMN10620170\" \"SAMN10620092\" #>  [26] \"SAMN10620098\" \"SAMN10620110\" \"SAMN10620117\" \"SAMN10620106\" \"SAMN10620109\" #>  [31] \"SAMN10620097\" \"SAMN10620118\" \"SAMN10620108\" \"SAMN10620105\" \"SAMN10620138\" #>  [36] \"SAMN10620114\" \"SAMN10620116\" \"SAMN10620119\" \"SAMN10620094\" \"SAMN10620083\" #>  [41] \"SAMN10620175\" \"SAMN10620171\" \"SAMN10620090\" \"SAMN10620151\" \"SAMN10620095\" #>  [46] \"SAMN10620176\" \"SAMN10620096\" \"SAMN10620147\" \"SAMN10620099\" \"SAMN10620173\" #>  [51] \"SAMN10620122\" \"SAMN10620162\" \"SAMN10620093\" \"SAMN10620107\" \"SAMN10620113\" #>  [56] \"SAMN10620174\" \"SAMN10620140\" \"SAMN10620135\" \"SAMN10620100\" \"SAMN10620153\" #>  [61] \"SAMN10620101\" \"SAMN10620166\" \"SAMN10620112\" \"SAMN10620130\" \"SAMN10620125\" #>  [66] \"SAMN10620103\" \"SAMN10620157\" \"SAMN10620084\" \"SAMN10620143\" \"SAMN10620148\" #>  [71] \"SAMN10620144\" \"SAMN10620126\" \"SAMN10620124\" \"SAMN10620141\" \"SAMN10620150\" #>  [76] \"SAMN10620128\" \"SAMN10620137\" \"SAMN10620158\" \"SAMN10620152\" \"SAMN10620167\" #>  [81] \"SAMN10620154\" \"SAMN10620139\" \"SAMN10620160\" \"SAMN10620133\" \"SAMN10620134\" #>  [86] \"SAMN10620156\" \"SAMN10620115\" \"SAMN10620163\" \"SAMN10620165\" \"SAMN10620132\" #>  [91] \"SAMN10620146\" \"SAMN10620161\" \"SAMN10620089\" \"SAMN10620127\" \"SAMN10620155\" #>  [96] \"SAMN10620087\" \"SAMN10620149\" \"SAMN10620136\" \"SAMN10620131\" \"SAMN10620142\" #> [101] \"SAMN12307931\" \"SAMN12647576\" \"SAMN12702871\" \"SAMN12734216\" \"SAMN12784143\" #> [106] \"SAMN12912142\" \"SAMN12924390\" \"SAMN13149869\" \"SAMN13283493\" \"SAMN13283522\" #> [111] \"SAMN13315602\" \"SAMN13320508\" \"SAMN13320505\" \"SAMN12990662\" \"SAMN13683695\" #> [116] \"SAMN13718877\" \"SAMN13747352\" \"SAMN13836675\" \"SAMN13996994\" \"SAMN14125631\" #> [121] \"SAMN14448423\" \"SAMN36726425\" \"SAMN36726672\" \"SAMN36727334\" \"SAMN36729056\" #> [126] \"SAMN36728961\" \"SAMN36729039\" \"SAMN36729003\" \"SAMN41558527\" \"SAMN41558520\" #> [131] \"SAMN41558518\" \"SAMN41558514\" \"SAMN06129826\" \"SAMN04096281\" \"SAMN30466959\" #> [136] \"SAMN30466960\" \"SAMN30466958\" \"SAMN30466956\" \"SAMN36726479\" \"SAMN36726476\" #> [141] \"SAMN36726462\" \"SAMN36726432\" \"SAMN36726430\" \"SAMN36726426\" \"SAMN36726421\" #> [146] \"SAMN36726417\" \"SAMN36726415\" \"SAMN36726458\" \"SAMN36726455\" \"SAMN36726454\" #> [151] \"SAMN36726447\" \"SAMN36726695\" \"SAMN36726623\" \"SAMN36726690\" \"SAMN36726621\" #> [156] \"SAMN36726638\" \"SAMN36726629\" \"SAMN36726615\" \"SAMN36726674\" \"SAMN36726662\" #> [161] \"SAMN36726652\" \"SAMN36727307\" \"SAMN36727270\" \"SAMN36727304\" \"SAMN36727340\" #> [166] \"SAMN36727333\" \"SAMN36727302\" \"SAMN36727299\" \"SAMN36727298\" \"SAMN36727289\" #> [171] \"SAMN36727285\" \"SAMN36727277\" \"SAMN36727267\" \"SAMN36729158\" \"SAMN36729156\" #> [176] \"SAMN36729150\" \"SAMN36728916\" \"SAMN36729146\" \"SAMN36729145\" \"SAMN36728989\" #> [181] \"SAMN36728988\" \"SAMN36728983\" \"SAMN36728947\" \"SAMN36729189\" \"SAMN36729184\" #> [186] \"SAMN36729183\" \"SAMN36729169\" \"SAMN36729112\" \"SAMN36729099\" \"SAMN36729095\" #> [191] \"SAMN36729092\" \"SAMN36729061\" \"SAMN36729058\" \"SAMN36728977\" \"SAMN36728955\" #> [196] \"SAMN36728954\" \"SAMN36729090\" \"SAMN36729072\" \"SAMN36729037\" \"SAMN36729034\" #> [201] \"SAMN36729031\" \"SAMN36729027\" \"SAMN36729136\" \"SAMN36729127\" \"SAMN36729122\" #> [206] \"SAMN36729119\" \"SAMN36729000\" \"SAMN36728994\" \"SAMN36728991\" \"SAMN36728990\" #> [211] \"SAMN36729197\" \"SAMN36729196\" \"SAMN36729209\" \"SAMN36729208\" \"SAMN36892918\" #> [216] \"SAMN37516942\" \"SAMN37516936\" \"SAMN37516879\" \"SAMN37516917\" \"SAMN38228836\" #> [221] \"SAMN38228829\" \"SAMN39956418\" \"SAMN40930690\" \"SAMN40930688\" \"SAMN40930683\" #> [226] \"SAMN40930682\" \"SAMN40930673\" \"SAMN40930662\" \"SAMN40930657\" \"SAMN40930646\" #> [231] \"SAMN26309169\" \"SAMN26308802\" \"SAMN26304504\" \"SAMN26308410\" \"SAMN26308788\" #> [236] \"SAMN26304557\" \"SAMN26309201\" \"SAMN26308762\" \"SAMN26308384\" \"SAMN26304588\" #> [241] \"SAMN26304550\" \"SAMN36726481\" \"SAMN36726480\" \"SAMN36726478\" \"SAMN36726477\" #> [246] \"SAMN36726473\" \"SAMN36726468\" \"SAMN36726461\" \"SAMN36726424\" \"SAMN36726422\" #> [251] \"SAMN36726419\" \"SAMN36726418\" \"SAMN36726413\" \"SAMN36726412\" \"SAMN36726411\" #> [256] \"SAMN36726457\" \"SAMN36726456\" \"SAMN36726450\" \"SAMN36726404\" \"SAMN36726444\" #> [261] \"SAMN36726439\" \"SAMN36726403\" \"SAMN36726437\" \"SAMN36726436\" \"SAMN36726399\" #> [266] \"SAMN36726701\" \"SAMN36726698\" \"SAMN36726697\" \"SAMN36726696\" \"SAMN36726694\" #> [271] \"SAMN36726693\" \"SAMN36726691\" \"SAMN36726688\" \"SAMN36726687\" \"SAMN36726683\" #> [276] \"SAMN36726682\" \"SAMN36726679\" \"SAMN36726675\" \"SAMN36726647\" \"SAMN36726645\" #> [281] \"SAMN36726618\" \"SAMN36726643\" \"SAMN36726642\" \"SAMN36726633\" \"SAMN36726616\" #> [286] \"SAMN36726669\" \"SAMN36726667\" \"SAMN36726620\" \"SAMN36726657\" \"SAMN36726655\" #> [291] \"SAMN36726649\" \"SAMN36727272\" \"SAMN36727325\" \"SAMN36727324\" \"SAMN36727319\" #> [296] \"SAMN36727317\" \"SAMN36727315\" \"SAMN36727314\" \"SAMN36727312\" \"SAMN36727303\" #> [301] \"SAMN36727336\" \"SAMN36727335\" \"SAMN36727330\" \"SAMN36727329\" \"SAMN36727301\" #> [306] \"SAMN36727295\" \"SAMN36727294\" \"SAMN36727293\" \"SAMN36727292\" \"SAMN36727290\" #> [311] \"SAMN36727287\" \"SAMN36727286\" \"SAMN36727268\" \"SAMN36727278\" \"SAMN36729192\" #> [316] \"SAMN36729164\" \"SAMN36729163\" \"SAMN36729155\" \"SAMN36729152\" \"SAMN36729149\" #> [321] \"SAMN36728986\" \"SAMN36728981\" \"SAMN36728949\" \"SAMN36728944\" \"SAMN36728941\" #> [326] \"SAMN36728895\" \"SAMN36728938\" \"SAMN36728930\" \"SAMN36728929\" \"SAMN36728928\" #> [331] \"SAMN36729185\" \"SAMN36729182\" \"SAMN36729181\" \"SAMN36729177\" \"SAMN36729172\" #> [336] \"SAMN36729116\" \"SAMN36729115\" \"SAMN36729114\" \"SAMN36729113\" \"SAMN36729110\" #> [341] \"SAMN36728912\" \"SAMN36729106\" \"SAMN36729104\" \"SAMN36729103\" \"SAMN36729102\" #> [346] \"SAMN36729100\" \"SAMN36729096\" \"SAMN36729093\" \"SAMN36729091\" \"SAMN36729065\" #> [351] \"SAMN36729064\" \"SAMN36729062\" \"SAMN36729060\" \"SAMN36728907\" \"SAMN36729059\" #> [356] \"SAMN36729053\" \"SAMN36728906\" \"SAMN36729049\" \"SAMN36729047\" \"SAMN36729044\" #> [361] \"SAMN36728975\" \"SAMN36728971\" \"SAMN36728968\" \"SAMN36728967\" \"SAMN36728966\" #> [366] \"SAMN36728965\" \"SAMN36728963\" \"SAMN36728958\" \"SAMN36728957\" \"SAMN36728956\" #> [371] \"SAMN36728953\" \"SAMN36728910\" \"SAMN36728892\" \"SAMN36729089\" \"SAMN36729087\" #> [376] \"SAMN36729081\" \"SAMN36729080\" \"SAMN36729077\" \"SAMN36729075\" \"SAMN36729074\" #> [381] \"SAMN36729073\" \"SAMN36729071\" \"SAMN36729040\" \"SAMN36729036\" \"SAMN36729025\" #> [386] \"SAMN36729021\" \"SAMN36729019\" \"SAMN36729140\" \"SAMN36728915\" \"SAMN36729137\" #> [391] \"SAMN36729132\" \"SAMN36729131\" \"SAMN36729125\" \"SAMN36729121\" \"SAMN36729118\" #> [396] \"SAMN36729013\" \"SAMN36729010\" \"SAMN36729008\" \"SAMN36728901\" \"SAMN36728995\" #> [401] \"SAMN36728992\" \"SAMN36728891\" \"SAMN36728890\" \"SAMN36729213\" \"SAMN36729202\" #> [406] \"SAMN36729201\" \"SAMN36729199\" \"SAMN36729162\" \"SAMN36728914\" \"SAMN36729120\" #> [411] \"SAMN36728921\" \"SAMN36892891\" \"SAMN36892881\" \"SAMN36892847\" \"SAMN37516952\" #> [416] \"SAMN37516945\" \"SAMN37516943\" \"SAMN37516880\" \"SAMN37516941\" \"SAMN37516938\" #> [421] \"SAMN37516933\" \"SAMN37516927\" \"SAMN37516926\" \"SAMN37516924\" \"SAMN37516923\" #> [426] \"SAMN37516878\" \"SAMN37516920\" \"SAMN37516877\" \"SAMN37516876\" \"SAMN37516902\" #> [431] \"SAMN37516897\" \"SAMN37516895\" \"SAMN37516893\" \"SAMN37516890\" \"SAMN37516889\" #> [436] \"SAMN37516887\" \"SAMN37516886\" \"SAMN37516873\" \"SAMN38228875\" \"SAMN38228870\" #> [441] \"SAMN38228858\" \"SAMN38228857\" \"SAMN38228856\" \"SAMN38228846\" \"SAMN38228833\" #> [446] \"SAMN38228828\" \"SAMN38228810\" \"SAMN38228863\" \"SAMN38228878\" \"SAMN39956406\" #> [451] \"SAMN39956417\" \"SAMN39956413\" \"SAMN39956408\" \"SAMN39956407\" \"SAMN39956403\" #> [456] \"SAMN39956412\" \"SAMN40930639\" \"SAMN40930691\" \"SAMN40930689\" \"SAMN40930687\" #> [461] \"SAMN40930686\" \"SAMN40930685\" \"SAMN40930672\" \"SAMN40930670\" \"SAMN40930669\" #> [466] \"SAMN40930667\" \"SAMN40930663\" \"SAMN40930660\" \"SAMN40930659\" \"SAMN40930656\" #> [471] \"SAMN40930648\" \"SAMN40930645\" \"SAMN40930643\" \"SAMN41091867\" \"SAMN41091864\" #> [476] \"SAMN41091873\" \"SAMN41091872\" \"SAMN41091871\" \"SAMN36726624\" \"SAMN36729011\" #> [481] \"SAMN06828737\" \"SAMN05170202\" \"SAMN07709882\" \"SAMN07291511\" \"SAMN10457079\" #> [486] \"SAMN11636422\" \"SAMN11637033\" \"SAMN11640643\" \"SAMN11918773\" \"SAMN13012426\" #> [491] \"SAMN16480748\" \"SAMN16629913\" \"SAMN19680753\" \"SAMN19680771\" \"SAMN23219802\" #> [496] \"SAMN16304328\" \"SAMN16304308\" \"SAMN16304310\" \"SAMN16304306\" \"SAMN16304305\" #> [501] \"SAMN16304307\" \"SAMN16304304\" \"SAMN16304330\" \"SAMN16304329\" \"SAMN16304326\" #> [506] \"SAMN16304327\" \"SAMN16304325\" \"SAMN16304324\" \"SAMN16304322\" \"SAMN16304323\" #> [511] \"SAMN16304320\" \"SAMN16304318\" \"SAMN16304319\" \"SAMN16304317\" \"SAMN16304315\" #> [516] \"SAMN16304313\" \"SAMN16304312\" \"SAMN16304314\" \"SAMN16304316\" \"SAMN16304311\" #> [521] \"SAMN16304303\" \"SAMN16304309\" \"SAMN16304299\" \"SAMN16304300\" \"SAMN16304301\" #> [526] \"SAMN16304297\" \"SAMN16304298\" \"SAMN16304296\" \"SAMN16304295\" \"SAMN16304294\" #> [531] \"SAMN16304292\" \"SAMN16304293\" \"SAMN16304291\" \"SAMN16304290\" \"SAMN16304289\" #> [536] \"SAMN16304288\" \"SAMN16304287\" \"SAMN16304284\" \"SAMN16304286\" \"SAMN16304283\" #> [541] \"SAMN16304285\" \"SAMN16304282\" \"SAMN16304278\" \"SAMN16304281\" \"SAMN16304280\" #> [546] \"SAMN16304279\" \"SAMN16304277\" \"SAMN16304276\" \"SAMN16304275\" \"SAMN16304273\" #> [551] \"SAMN16304274\" \"SAMN16304271\" \"SAMN16304272\" \"SAMN16304262\" \"SAMN16304255\" #> [556] \"SAMN16304254\" \"SAMN16304251\" \"SAMN16304253\" \"SAMN16304252\" \"SAMN16304250\" #> [561] \"SAMN16304241\" \"SAMN16304244\" \"SAMN16304238\" \"SAMN16304235\" \"SAMN16304234\" #> [566] \"SAMN16304232\" \"SAMN16304228\" \"SAMN16304233\" \"SAMN16304230\" \"SAMN16304227\" #> [571] \"SAMN16304226\" \"SAMN16304222\" \"SAMN16304221\" \"SAMN16304225\" \"SAMN16304223\" #> [576] \"SAMN16304220\" \"SAMN16304219\" \"SAMN16304207\" \"SAMN16304210\" \"SAMN16304202\" #> [581] \"SAMN16304200\" \"SAMN16304203\" \"SAMN16304192\" \"SAMN16304188\" \"SAMN16304189\" #> [586] \"SAMN16304190\" \"SAMN16304187\" \"SAMN16304191\" \"SAMN16304186\" \"SAMN16304184\" #> [591] \"SAMN16304182\" \"SAMN16304179\" \"SAMN16304183\" \"SAMN16304181\" \"SAMN16304180\" #> [596] \"SAMN16304176\" \"SAMN16304169\" \"SAMN16304166\" \"SAMN16304165\" \"SAMN16304167\" #> [601] \"SAMN16304164\" \"SAMN16304162\" \"SAMN16304163\" \"SAMN16304161\" \"SAMN16304160\" #> [606] \"SAMN16304159\" \"SAMN16304158\" \"SAMN16304151\" \"SAMN16304148\" \"SAMN16304153\" #> [611] \"SAMN16304152\" \"SAMN16304145\" \"SAMN16304149\" \"SAMN16304144\" \"SAMN16304143\" #> [616] \"SAMN16304142\" \"SAMN16304141\" \"SAMN16304134\" \"SAMN16304133\" \"SAMN16304131\" #> [621] \"SAMN16304125\" \"SAMN16304124\" \"SAMN16304126\" \"SAMN16304123\" \"SAMN16304122\" #> [626] \"SAMN16304119\" \"SAMN16304120\" \"SAMN16304121\" \"SAMN16304112\" \"SAMN16304111\" #> [631] \"SAMN16304110\" \"SAMN16304105\" \"SAMN16304104\" \"SAMN16304101\" \"SAMN16304099\" #> [636] \"SAMN16304100\" \"SAMN16304089\" \"SAMN16304088\" \"SAMN16304090\" \"SAMN16304087\" #> [641] \"SAMN16304085\" \"SAMN16304076\" \"SAMN16304077\" \"SAMN16304073\" \"SAMN16304074\" #> [646] \"SAMN16304072\" \"SAMN16304064\" \"SAMN16304062\" \"SAMN16304063\" \"SAMN16304061\" #> [651] \"SAMN16304059\" \"SAMN16304058\" \"SAMN16304201\" \"SAMN10495378\" \"SAMN40280060\" #> [656] \"SAMN03075588\" \"SAMN03075589\" print(result$geno_unique) #> character(0) print(result$overlap_ids) #>    [1] \"SAMN07988997\" \"SAMN11638310\" \"SAMN18634044\" \"SAMN04122821\" #>    [5] \"SAMN04279649\" \"SAMN04279648\" \"SAMN04339728\" \"SAMN04393387\" #>    [9] \"SAMN04455486\" \"SAMN04455488\" \"SAMN04455487\" \"SAMN04495823\" #>   [13] \"SAMN04495824\" \"SAMN04514654\" \"SAMN04521101\" \"SAMN04521102\" #>   [17] \"SAMN04521103\" \"SAMN04526076\" \"SAMN04526077\" \"SAMN04563576\" #>   [21] \"SAMN04528908\" \"SAMN04568568\" \"SAMN04568567\" \"SAMN04568570\" #>   [25] \"SAMN04568569\" \"SAMN04621601\" \"SAMN04621605\" \"SAMN04621603\" #>   [29] \"SAMN04621602\" \"SAMN04621604\" \"SAMN04571741\" \"SAMN04571742\" #>   [33] \"SAMN04571743\" \"SAMN04856230\" \"SAMN04856231\" \"SAMN04908468\" #>   [37] \"SAMN04908471\" \"SAMN04908472\" \"SAMN04925767\" \"SAMN04925766\" #>   [41] \"SAMN04942587\" \"SAMN04942588\" \"SAMN04942586\" \"SAMN05001756\" #>   [45] \"SAMN05001754\" \"SAMN05191775\" \"SAMN05440605\" \"SAMN05440613\" #>   [49] \"SAMN05440614\" \"SAMN05440606\" \"SAMN05505568\" \"SAMN05505569\" #>   [53] \"SAMN05505572\" \"SAMN05505570\" \"SAMN05505567\" \"SAMN05505574\" #>   [57] \"SAMN05505571\" \"SAMN05505573\" \"SAMN10221514\" \"SAMN10221515\" #>   [61] \"SAMN10221508\" \"SAMN10221509\" \"SAMN10221510\" \"SAMN10221511\" #>   [65] \"SAMN10221516\" \"SAMN10221517\" \"SAMN10221036\" \"SAMN10221037\" #>   [69] \"SAMN10221034\" \"SAMN10221035\" \"SAMN10221032\" \"SAMN10221033\" #>   [73] \"SAMN10221030\" \"SAMN10221031\" \"SAMN10221028\" \"SAMN10221524\" #>   [77] \"SAMN10221116\" \"SAMN10221117\" \"SAMN10221108\" \"SAMN10221109\" #>   [81] \"SAMN10221110\" \"SAMN10221111\" \"SAMN10221112\" \"SAMN10221113\" #>   [85] \"SAMN10221114\" \"SAMN10221211\" \"SAMN10221210\" \"SAMN10221209\" #>   [89] \"SAMN10221208\" \"SAMN10221215\" \"SAMN10221214\" \"SAMN10221213\" #>   [93] \"SAMN10221212\" \"SAMN10221350\" \"SAMN10221351\" \"SAMN10221348\" #>   [97] \"SAMN10221216\" \"SAMN10221354\" \"SAMN10221355\" \"SAMN10221352\" #>  [101] \"SAMN10221353\" \"SAMN10221189\" \"SAMN10221188\" \"SAMN10221518\" #>  [105] \"SAMN10221041\" \"SAMN10221040\" \"SAMN10221039\" \"SAMN10221038\" #>  [109] \"SAMN10221288\" \"SAMN10221376\" \"SAMN10221043\" \"SAMN10221042\" #>  [113] \"SAMN10221373\" \"SAMN10221372\" \"SAMN10221289\" \"SAMN10221374\" #>  [117] \"SAMN10221369\" \"SAMN10221368\" \"SAMN10221371\" \"SAMN10221370\" #>  [121] \"SAMN10221566\" \"SAMN10221567\" \"SAMN10221562\" \"SAMN10221563\" #>  [125] \"SAMN10221564\" \"SAMN10221565\" \"SAMN10221558\" \"SAMN10221014\" #>  [129] \"SAMN10221560\" \"SAMN10221561\" \"SAMN10221637\" \"SAMN10221636\" #>  [133] \"SAMN10221629\" \"SAMN10221628\" \"SAMN10221631\" \"SAMN10221630\" #>  [137] \"SAMN10221633\" \"SAMN10221632\" \"SAMN10221635\" \"SAMN10221634\" #>  [141] \"SAMN10220990\" \"SAMN10220991\" \"SAMN10220988\" \"SAMN10220989\" #>  [145] \"SAMN10220994\" \"SAMN10220995\" \"SAMN10220992\" \"SAMN10220993\" #>  [149] \"SAMN10220996\" \"SAMN10220997\" \"SAMN10221175\" \"SAMN10221174\" #>  [153] \"SAMN10221173\" \"SAMN10221172\" \"SAMN10221171\" \"SAMN10221170\" #>  [157] \"SAMN10221169\" \"SAMN10221168\" \"SAMN10221314\" \"SAMN10221315\" #>  [161] \"SAMN10221313\" \"SAMN10221310\" \"SAMN10221311\" \"SAMN10221177\" #>  [165] \"SAMN10221176\" \"SAMN10221377\" \"SAMN10221382\" \"SAMN10221383\" #>  [169] \"SAMN10221384\" \"SAMN10221385\" \"SAMN10221378\" \"SAMN10221379\" #>  [173] \"SAMN10221380\" \"SAMN10221381\" \"SAMN10221545\" \"SAMN10221544\" #>  [177] \"SAMN10221543\" \"SAMN10221542\" \"SAMN10221386\" \"SAMN10221387\" #>  [181] \"SAMN10221539\" \"SAMN10221538\" \"SAMN10221375\" \"SAMN10221004\" #>  [185] \"SAMN10221003\" \"SAMN10221002\" \"SAMN10221000\" \"SAMN10220999\" #>  [189] \"SAMN10220998\" \"SAMN10221007\" \"SAMN10221006\" \"SAMN10221060\" #>  [193] \"SAMN10221059\" \"SAMN10221058\" \"SAMN10221065\" \"SAMN10221064\" #>  [197] \"SAMN10221063\" \"SAMN10221062\" \"SAMN10221417\" \"SAMN10221416\" #>  [201] \"SAMN10221067\" \"SAMN10221066\" \"SAMN10221472\" \"SAMN10221473\" #>  [205] \"SAMN10221474\" \"SAMN10221475\" \"SAMN10221598\" \"SAMN10221599\" #>  [209] \"SAMN10221600\" \"SAMN10221601\" \"SAMN10221602\" \"SAMN10221603\" #>  [213] \"SAMN10221604\" \"SAMN10221605\" \"SAMN10221606\" \"SAMN10221607\" #>  [217] \"SAMN10221400\" \"SAMN10221401\" \"SAMN10221398\" \"SAMN10221399\" #>  [221] \"SAMN10221404\" \"SAMN10221405\" \"SAMN10221257\" \"SAMN10221256\" #>  [225] \"SAMN10221559\" \"SAMN10221522\" \"SAMN10221406\" \"SAMN10221407\" #>  [229] \"SAMN10221251\" \"SAMN10221250\" \"SAMN10221521\" \"SAMN10221520\" #>  [233] \"SAMN10221595\" \"SAMN10221270\" \"SAMN10221271\" \"SAMN10221268\" #>  [237] \"SAMN10221269\" \"SAMN10221274\" \"SAMN10221275\" \"SAMN10221272\" #>  [241] \"SAMN10221273\" \"SAMN10221276\" \"SAMN10221277\" \"SAMN10221488\" #>  [245] \"SAMN10221489\" \"SAMN10221494\" \"SAMN10221501\" \"SAMN10221500\" #>  [249] \"SAMN10221495\" \"SAMN10221498\" \"SAMN10221505\" \"SAMN10221504\" #>  [253] \"SAMN10221503\" \"SAMN10221502\" \"SAMN10221492\" \"SAMN10221507\" #>  [257] \"SAMN10221506\" \"SAMN10221493\" \"SAMN10221596\" \"SAMN10221237\" #>  [261] \"SAMN10221105\" \"SAMN10221104\" \"SAMN10221135\" \"SAMN10221102\" #>  [265] \"SAMN10221101\" \"SAMN10221100\" \"SAMN10221099\" \"SAMN10221098\" #>  [269] \"SAMN10221224\" \"SAMN10221225\" \"SAMN10221222\" \"SAMN10221223\" #>  [273] \"SAMN10221220\" \"SAMN10221221\" \"SAMN10221218\" \"SAMN10221219\" #>  [277] \"SAMN10221347\" \"SAMN10221346\" \"SAMN10221339\" \"SAMN10221338\" #>  [281] \"SAMN10221341\" \"SAMN10221340\" \"SAMN10221343\" \"SAMN10221342\" #>  [285] \"SAMN10221345\" \"SAMN10221344\" \"SAMN10221235\" \"SAMN10221234\" #>  [289] \"SAMN10221056\" \"SAMN10221057\" \"SAMN10221052\" \"SAMN10221053\" #>  [293] \"SAMN10221054\" \"SAMN10221055\" \"SAMN10221048\" \"SAMN10221049\" #>  [297] \"SAMN10221050\" \"SAMN10221051\" \"SAMN10221426\" \"SAMN10221427\" #>  [301] \"SAMN10221418\" \"SAMN10221419\" \"SAMN10221420\" \"SAMN10221421\" #>  [305] \"SAMN10221422\" \"SAMN10221423\" \"SAMN10221424\" \"SAMN10221425\" #>  [309] \"SAMN10221577\" \"SAMN10221576\" \"SAMN10221571\" \"SAMN10221570\" #>  [313] \"SAMN10221569\" \"SAMN10221568\" \"SAMN10221575\" \"SAMN10221574\" #>  [317] \"SAMN10221573\" \"SAMN10221572\" \"SAMN10221307\" \"SAMN10221029\" #>  [321] \"SAMN10221306\" \"SAMN10221642\" \"SAMN10221643\" \"SAMN10221644\" #>  [325] \"SAMN10221645\" \"SAMN10221638\" \"SAMN10221639\" \"SAMN10221640\" #>  [329] \"SAMN10221641\" \"SAMN10221646\" \"SAMN10221647\" \"SAMN10221305\" #>  [333] \"SAMN10221304\" \"SAMN10221525\" \"SAMN10221180\" \"SAMN10221181\" #>  [337] \"SAMN10221178\" \"SAMN10221179\" \"SAMN10221184\" \"SAMN10221185\" #>  [341] \"SAMN10221182\" \"SAMN10221183\" \"SAMN10221303\" \"SAMN10221302\" #>  [345] \"SAMN10221186\" \"SAMN10221187\" \"SAMN10221299\" \"SAMN10221298\" #>  [349] \"SAMN10221301\" \"SAMN10221300\" \"SAMN10221133\" \"SAMN10221513\" #>  [353] \"SAMN10221233\" \"SAMN10221232\" \"SAMN10221136\" \"SAMN10221137\" #>  [357] \"SAMN10221229\" \"SAMN10221228\" \"SAMN10221231\" \"SAMN10221230\" #>  [361] \"SAMN10221332\" \"SAMN10221333\" \"SAMN10221334\" \"SAMN10221335\" #>  [365] \"SAMN10221328\" \"SAMN10221329\" \"SAMN10221330\" \"SAMN10221331\" #>  [369] \"SAMN10221336\" \"SAMN10221337\" \"SAMN10221156\" \"SAMN10221157\" #>  [373] \"SAMN10221152\" \"SAMN10221153\" \"SAMN10221154\" \"SAMN10221155\" #>  [377] \"SAMN10221148\" \"SAMN10221150\" \"SAMN10221151\" \"SAMN10221103\" #>  [381] \"SAMN10221226\" \"SAMN10221227\" \"SAMN10221435\" \"SAMN10221434\" #>  [385] \"SAMN10221433\" \"SAMN10221432\" \"SAMN10221431\" \"SAMN10221430\" #>  [389] \"SAMN10221429\" \"SAMN10221428\" \"SAMN10221534\" \"SAMN10221535\" #>  [393] \"SAMN10221532\" \"SAMN10221533\" \"SAMN10221530\" \"SAMN10221531\" #>  [397] \"SAMN10221437\" \"SAMN10221436\" \"SAMN10221584\" \"SAMN10221585\" #>  [401] \"SAMN10221582\" \"SAMN10221583\" \"SAMN10221580\" \"SAMN10221581\" #>  [405] \"SAMN10221578\" \"SAMN10221579\" \"SAMN10221586\" \"SAMN10221587\" #>  [409] \"SAMN10221107\" \"SAMN10221106\" \"SAMN10221651\" \"SAMN10221650\" #>  [413] \"SAMN10221649\" \"SAMN10221648\" \"SAMN10221655\" \"SAMN10221654\" #>  [417] \"SAMN10221653\" \"SAMN10221652\" \"SAMN10221657\" \"SAMN10221656\" #>  [421] \"SAMN10221476\" \"SAMN10221402\" \"SAMN10221316\" \"SAMN10221317\" #>  [425] \"SAMN10221480\" \"SAMN10221308\" \"SAMN10221309\" \"SAMN10221296\" #>  [429] \"SAMN10221297\" \"SAMN10221191\" \"SAMN10221190\" \"SAMN10221193\" #>  [433] \"SAMN10221192\" \"SAMN10221195\" \"SAMN10221194\" \"SAMN10221197\" #>  [437] \"SAMN10221196\" \"SAMN10221290\" \"SAMN10221291\" \"SAMN10221292\" #>  [441] \"SAMN10221293\" \"SAMN10221294\" \"SAMN10221295\" \"SAMN10221285\" #>  [445] \"SAMN10221477\" \"SAMN10221027\" \"SAMN10221026\" \"SAMN10221023\" #>  [449] \"SAMN10221022\" \"SAMN10221025\" \"SAMN10221024\" \"SAMN10221019\" #>  [453] \"SAMN10221018\" \"SAMN10221021\" \"SAMN10221020\" \"SAMN10221087\" #>  [457] \"SAMN10221086\" \"SAMN10221083\" \"SAMN10221082\" \"SAMN10221085\" #>  [461] \"SAMN10221084\" \"SAMN10221079\" \"SAMN10221078\" \"SAMN10221081\" #>  [465] \"SAMN10221080\" \"SAMN10221202\" \"SAMN10221203\" \"SAMN10221204\" #>  [469] \"SAMN10221205\" \"SAMN10221198\" \"SAMN10221199\" \"SAMN10221200\" #>  [473] \"SAMN10221201\" \"SAMN10221496\" \"SAMN10221497\" \"SAMN10221206\" #>  [477] \"SAMN10221207\" \"SAMN10221663\" \"SAMN10221662\" \"SAMN10221665\" #>  [481] \"SAMN10221664\" \"SAMN10221659\" \"SAMN10221658\" \"SAMN10221661\" #>  [485] \"SAMN10221660\" \"SAMN10221667\" \"SAMN10221666\" \"SAMN10221453\" #>  [489] \"SAMN10221452\" \"SAMN10221455\" \"SAMN10221454\" \"SAMN10221449\" #>  [493] \"SAMN10221448\" \"SAMN10221451\" \"SAMN10221450\" \"SAMN10221457\" #>  [497] \"SAMN10221456\" \"SAMN10221547\" \"SAMN10221546\" \"SAMN10221366\" #>  [501] \"SAMN10221367\" \"SAMN10221364\" \"SAMN10221365\" \"SAMN10221362\" #>  [505] \"SAMN10221363\" \"SAMN10221360\" \"SAMN10221361\" \"SAMN10221358\" #>  [509] \"SAMN10221359\" \"SAMN10221541\" \"SAMN10221540\" \"SAMN10221045\" #>  [513] \"SAMN10221626\" \"SAMN10221627\" \"SAMN10221044\" \"SAMN10221620\" #>  [517] \"SAMN10221621\" \"SAMN10221618\" \"SAMN10221619\" \"SAMN10221624\" #>  [521] \"SAMN10221625\" \"SAMN10221622\" \"SAMN10221623\" \"SAMN10221005\" #>  [525] \"SAMN10220979\" \"SAMN10220978\" \"SAMN10220981\" \"SAMN10220980\" #>  [529] \"SAMN10220983\" \"SAMN10220982\" \"SAMN10220985\" \"SAMN10220984\" #>  [533] \"SAMN10220987\" \"SAMN10220986\" \"SAMN10221119\" \"SAMN10221121\" #>  [537] \"SAMN10221120\" \"SAMN10221123\" \"SAMN10221122\" \"SAMN10221125\" #>  [541] \"SAMN10221124\" \"SAMN10221127\" \"SAMN10221126\" \"SAMN10221160\" #>  [545] \"SAMN10221161\" \"SAMN10221162\" \"SAMN10221163\" \"SAMN10221164\" #>  [549] \"SAMN10221165\" \"SAMN10221321\" \"SAMN10221320\" \"SAMN10221319\" #>  [553] \"SAMN10221318\" \"SAMN10221325\" \"SAMN10221324\" \"SAMN10221323\" #>  [557] \"SAMN10221322\" \"SAMN10221327\" \"SAMN10221326\" \"SAMN10221147\" #>  [561] \"SAMN10221146\" \"SAMN10221141\" \"SAMN10221140\" \"SAMN10221139\" #>  [565] \"SAMN10221138\" \"SAMN10221145\" \"SAMN10221144\" \"SAMN10221143\" #>  [569] \"SAMN10221142\" \"SAMN10221548\" \"SAMN10221549\" \"SAMN10221550\" #>  [573] \"SAMN10221551\" \"SAMN10221552\" \"SAMN10221553\" \"SAMN10221554\" #>  [577] \"SAMN10221555\" \"SAMN10221556\" \"SAMN10221557\" \"SAMN10221409\" #>  [581] \"SAMN10221403\" \"SAMN10221046\" \"SAMN10221408\" \"SAMN10221072\" #>  [585] \"SAMN10221073\" \"SAMN10221074\" \"SAMN10221075\" \"SAMN10221068\" #>  [589] \"SAMN10221069\" \"SAMN10221070\" \"SAMN10221071\" \"SAMN10221254\" #>  [593] \"SAMN10221253\" \"SAMN10221252\" \"SAMN10221076\" \"SAMN10221077\" #>  [597] \"SAMN10221249\" \"SAMN10221248\" \"SAMN10221593\" \"SAMN10221592\" #>  [601] \"SAMN10221412\" \"SAMN10221594\" \"SAMN10221589\" \"SAMN10221588\" #>  [605] \"SAMN10221591\" \"SAMN10221590\" \"SAMN10221415\" \"SAMN10221597\" #>  [609] \"SAMN10221527\" \"SAMN10221414\" \"SAMN10221468\" \"SAMN10221469\" #>  [613] \"SAMN10221471\" \"SAMN10221526\" \"SAMN10221279\" \"SAMN10221490\" #>  [617] \"SAMN10221479\" \"SAMN10221491\" \"SAMN10221478\" \"SAMN10221047\" #>  [621] \"SAMN10221356\" \"SAMN10221357\" \"SAMN10221483\" \"SAMN10221482\" #>  [625] \"SAMN10221166\" \"SAMN10221485\" \"SAMN10221167\" \"SAMN10221484\" #>  [629] \"SAMN10221487\" \"SAMN10221486\" \"SAMN10221217\" \"SAMN10221284\" #>  [633] \"SAMN10221283\" \"SAMN10221282\" \"SAMN10221281\" \"SAMN10221280\" #>  [637] \"SAMN10221349\" \"SAMN10221278\" \"SAMN10221287\" \"SAMN10221286\" #>  [641] \"SAMN10221158\" \"SAMN10221159\" \"SAMN10221512\" \"SAMN10221391\" #>  [645] \"SAMN10221390\" \"SAMN10221389\" \"SAMN10221388\" \"SAMN10221395\" #>  [649] \"SAMN10221394\" \"SAMN10221393\" \"SAMN10221392\" \"SAMN10221397\" #>  [653] \"SAMN10221396\" \"SAMN10221008\" \"SAMN10221009\" \"SAMN10221010\" #>  [657] \"SAMN10221011\" \"SAMN10221012\" \"SAMN10221013\" \"SAMN10221096\" #>  [661] \"SAMN10221097\" \"SAMN10221094\" \"SAMN10221095\" \"SAMN10221092\" #>  [665] \"SAMN10221093\" \"SAMN10221090\" \"SAMN10221091\" \"SAMN10221088\" #>  [669] \"SAMN10221089\" \"SAMN10221465\" \"SAMN10221464\" \"SAMN10221463\" #>  [673] \"SAMN10221462\" \"SAMN10221461\" \"SAMN10221460\" \"SAMN10221459\" #>  [677] \"SAMN10221458\" \"SAMN10221467\" \"SAMN10221466\" \"SAMN10221670\" #>  [681] \"SAMN10221668\" \"SAMN10221669\" \"SAMN10221444\" \"SAMN10221445\" #>  [685] \"SAMN10221442\" \"SAMN10221443\" \"SAMN10221440\" \"SAMN10221441\" #>  [689] \"SAMN10221438\" \"SAMN10221439\" \"SAMN10221446\" \"SAMN10221447\" #>  [693] \"SAMN10220958\" \"SAMN10220959\" \"SAMN10220960\" \"SAMN10220961\" #>  [697] \"SAMN10220962\" \"SAMN10220963\" \"SAMN10220964\" \"SAMN10220965\" #>  [701] \"SAMN10220966\" \"SAMN10220967\" \"SAMN10221499\" \"SAMN10221411\" #>  [705] \"SAMN10221617\" \"SAMN10221616\" \"SAMN10221615\" \"SAMN10221614\" #>  [709] \"SAMN10221613\" \"SAMN10221612\" \"SAMN10221611\" \"SAMN10221610\" #>  [713] \"SAMN10221609\" \"SAMN10221608\" \"SAMN10221410\" \"SAMN10221536\" #>  [717] \"SAMN10221537\" \"SAMN10221413\" \"SAMN10221259\" \"SAMN10221258\" #>  [721] \"SAMN10221261\" \"SAMN10221260\" \"SAMN10221263\" \"SAMN10221262\" #>  [725] \"SAMN10221265\" \"SAMN10221264\" \"SAMN10221267\" \"SAMN10221266\" #>  [729] \"SAMN10221015\" \"SAMN10221016\" \"SAMN10221528\" \"SAMN10221017\" #>  [733] \"SAMN10221529\" \"SAMN10221238\" \"SAMN10221239\" \"SAMN10221240\" #>  [737] \"SAMN10221241\" \"SAMN10221242\" \"SAMN10221243\" \"SAMN10221244\" #>  [741] \"SAMN10221245\" \"SAMN10221246\" \"SAMN10221247\" \"SAMN10220972\" #>  [745] \"SAMN10220973\" \"SAMN10220974\" \"SAMN10220975\" \"SAMN10220968\" #>  [749] \"SAMN10220969\" \"SAMN10220970\" \"SAMN10220971\" \"SAMN10221519\" #>  [753] \"SAMN10220976\" \"SAMN10220977\" \"SAMN10221130\" \"SAMN10221131\" #>  [757] \"SAMN10221128\" \"SAMN10221129\" \"SAMN10221134\" \"SAMN10221236\" #>  [761] \"SAMN10221132\" \"SAMN10948831\" \"SAMN10948830\" \"SAMN11029061\" #>  [765] \"SAMN11029056\" \"SAMN11029052\" \"SAMN11372926\" \"SAMN11372903\" #>  [769] \"SAMN11372842\" \"SAMN11372843\" \"SAMN11372840\" \"SAMN11372841\" #>  [773] \"SAMN11372846\" \"SAMN11372847\" \"SAMN11372844\" \"SAMN11372845\" #>  [777] \"SAMN11372848\" \"SAMN11372849\" \"SAMN11372957\" \"SAMN11372956\" #>  [781] \"SAMN11372955\" \"SAMN11372954\" \"SAMN11372953\" \"SAMN11372952\" #>  [785] \"SAMN11372951\" \"SAMN11372950\" \"SAMN11372922\" \"SAMN11372923\" #>  [789] \"SAMN11372920\" \"SAMN11372921\" \"SAMN11372904\" \"SAMN11372927\" #>  [793] \"SAMN11372959\" \"SAMN11372958\" \"SAMN11372905\" \"SAMN11372906\" #>  [797] \"SAMN11372907\" \"SAMN11372908\" \"SAMN11372909\" \"SAMN11372895\" #>  [801] \"SAMN11372902\" \"SAMN11372942\" \"SAMN11372943\" \"SAMN11372940\" #>  [805] \"SAMN11372941\" \"SAMN11372946\" \"SAMN11372947\" \"SAMN11372944\" #>  [809] \"SAMN11372945\" \"SAMN11372948\" \"SAMN11372949\" \"SAMN11372899\" #>  [813] \"SAMN11372898\" \"SAMN11372894\" \"SAMN11372897\" \"SAMN11372896\" #>  [817] \"SAMN11372931\" \"SAMN11372930\" \"SAMN11372933\" \"SAMN11372932\" #>  [821] \"SAMN11372935\" \"SAMN11372934\" \"SAMN11372937\" \"SAMN11372936\" #>  [825] \"SAMN11372939\" \"SAMN11372938\" \"SAMN11372893\" \"SAMN11372892\" #>  [829] \"SAMN11372891\" \"SAMN11372890\" \"SAMN11372879\" \"SAMN11372878\" #>  [833] \"SAMN11372875\" \"SAMN11372874\" \"SAMN11372877\" \"SAMN11372876\" #>  [837] \"SAMN11372871\" \"SAMN11372870\" \"SAMN11372873\" \"SAMN11372872\" #>  [841] \"SAMN11372888\" \"SAMN11372889\" \"SAMN11372886\" \"SAMN11372887\" #>  [845] \"SAMN11372884\" \"SAMN11372885\" \"SAMN11372882\" \"SAMN11372883\" #>  [849] \"SAMN11372880\" \"SAMN11372881\" \"SAMN11372928\" \"SAMN11372929\" #>  [853] \"SAMN11372832\" \"SAMN11372833\" \"SAMN11372830\" \"SAMN11372831\" #>  [857] \"SAMN11372836\" \"SAMN11372837\" \"SAMN11372834\" \"SAMN11372835\" #>  [861] \"SAMN11372838\" \"SAMN11372839\" \"SAMN11372859\" \"SAMN11372858\" #>  [865] \"SAMN11372853\" \"SAMN11372852\" \"SAMN11372851\" \"SAMN11372850\" #>  [869] \"SAMN11372857\" \"SAMN11372856\" \"SAMN11372855\" \"SAMN11372854\" #>  [873] \"SAMN11372924\" \"SAMN11372925\" \"SAMN11372864\" \"SAMN11372865\" #>  [877] \"SAMN11372866\" \"SAMN11372867\" \"SAMN11372860\" \"SAMN11372861\" #>  [881] \"SAMN11372862\" \"SAMN11372863\" \"SAMN11372868\" \"SAMN11372869\" #>  [885] \"SAMN11372900\" \"SAMN11372911\" \"SAMN11372910\" \"SAMN11372901\" #>  [889] \"SAMN11372913\" \"SAMN11372919\" \"SAMN11372918\" \"SAMN11372960\" #>  [893] \"SAMN11372961\" \"SAMN11372962\" \"SAMN11372912\" \"SAMN11372915\" #>  [897] \"SAMN11372914\" \"SAMN11372917\" \"SAMN11372916\" \"SAMN11854358\" #>  [901] \"SAMN11854364\" \"SAMN11854360\" \"SAMN11854363\" \"SAMN11854362\" #>  [905] \"SAMN11854354\" \"SAMN11854353\" \"SAMN11854361\" \"SAMN11854357\" #>  [909] \"SAMN11854359\" \"SAMN11854356\" \"SAMN11854355\" \"SAMN11960651\" #>  [913] \"SAMN11960653\" \"SAMN11982669\" \"SAMN11982667\" \"SAMN11982670\" #>  [917] \"SAMN11982668\" \"SAMN12035817\" \"SAMN12035816\" \"SAMN12058481\" #>  [921] \"SAMN12058479\" \"SAMN12058480\" \"SAMN12091262\" \"SAMN12091249\" #>  [925] \"SAMN12091258\" \"SAMN12091254\" \"SAMN12091257\" \"SAMN12091261\" #>  [929] \"SAMN12091252\" \"SAMN12091260\" \"SAMN12091255\" \"SAMN12091256\" #>  [933] \"SAMN12091251\" \"SAMN12091250\" \"SAMN12091259\" \"SAMN12091253\" #>  [937] \"SAMN12188553\" \"SAMN12188548\" \"SAMN12188544\" \"SAMN12221392\" #>  [941] \"SAMN12221393\" \"SAMN12221391\" \"SAMN12249001\" \"SAMN12249002\" #>  [945] \"SAMN12249003\" \"SAMN12255969\" \"SAMN12255968\" \"SAMN12260489\" #>  [949] \"SAMN12273918\" \"SAMN12273921\" \"SAMN12273919\" \"SAMN12273952\" #>  [953] \"SAMN12289080\" \"SAMN12289081\" \"SAMN12289082\" \"SAMN12307939\" #>  [957] \"SAMN12307934\" \"SAMN12329385\" \"SAMN12329384\" \"SAMN12329386\" #>  [961] \"SAMN12384751\" \"SAMN12359590\" \"SAMN12359589\" \"SAMN12359607\" #>  [965] \"SAMN12359604\" \"SAMN12359563\" \"SAMN12359564\" \"SAMN12359606\" #>  [969] \"SAMN12359557\" \"SAMN12359558\" \"SAMN12359555\" \"SAMN12359556\" #>  [973] \"SAMN12359561\" \"SAMN12359562\" \"SAMN12359559\" \"SAMN12359560\" #>  [977] \"SAMN12359583\" \"SAMN12359584\" \"SAMN12359599\" \"SAMN12359600\" #>  [981] \"SAMN12359597\" \"SAMN12359598\" \"SAMN12359595\" \"SAMN12359596\" #>  [985] \"SAMN12359575\" \"SAMN12359576\" \"SAMN12359577\" \"SAMN12359578\" #>  [989] \"SAMN12359579\" \"SAMN12359580\" \"SAMN12359581\" \"SAMN12359582\" #>  [993] \"SAMN12359544\" \"SAMN12359543\" \"SAMN12359603\" \"SAMN12359608\" #>  [997] \"SAMN12359610\" \"SAMN12359536\" \"SAMN12359535\" \"SAMN12359538\" #> [1001] \"SAMN12359537\" \"SAMN12359540\" \"SAMN12359539\" \"SAMN12359593\" #> [1005] \"SAMN12359541\" \"SAMN12359601\" \"SAMN12359594\" \"SAMN12359602\" #> [1009] \"SAMN12359605\" \"SAMN12359574\" \"SAMN12359573\" \"SAMN12359609\" #> [1013] \"SAMN12359611\" \"SAMN12359566\" \"SAMN12359565\" \"SAMN12359568\" #> [1017] \"SAMN12359567\" \"SAMN12359570\" \"SAMN12359569\" \"SAMN12359572\" #> [1021] \"SAMN12359571\" \"SAMN12359548\" \"SAMN12359547\" \"SAMN12359546\" #> [1025] \"SAMN12359545\" \"SAMN12359552\" \"SAMN12359551\" \"SAMN12359550\" #> [1029] \"SAMN12359549\" \"SAMN12359592\" \"SAMN12359591\" \"SAMN12359554\" #> [1033] \"SAMN12359553\" \"SAMN12359588\" \"SAMN12359587\" \"SAMN12359586\" #> [1037] \"SAMN12359585\" \"SAMN12359612\" \"SAMN12359542\" \"SAMN12359613\" #> [1041] \"SAMN12414242\" \"SAMN12526318\" \"SAMN12526311\" \"SAMN12571685\" #> [1045] \"SAMN12571692\" \"SAMN12571690\" \"SAMN12359715\" \"SAMN12360042\" #> [1049] \"SAMN12360039\" \"SAMN12360038\" \"SAMN12360041\" \"SAMN12360040\" #> [1053] \"SAMN12360035\" \"SAMN12360034\" \"SAMN12360037\" \"SAMN12360036\" #> [1057] \"SAMN12359982\" \"SAMN12359983\" \"SAMN12359976\" \"SAMN12359977\" #> [1061] \"SAMN12359952\" \"SAMN12359847\" \"SAMN12359945\" \"SAMN12359944\" #> [1065] \"SAMN12359953\" \"SAMN12359845\" \"SAMN12359732\" \"SAMN12359729\" #> [1069] \"SAMN12359728\" \"SAMN12359731\" \"SAMN12359730\" \"SAMN12359725\" #> [1073] \"SAMN12359724\" \"SAMN12359727\" \"SAMN12359992\" \"SAMN12359984\" #> [1077] \"SAMN12359987\" \"SAMN12359989\" \"SAMN12359988\" \"SAMN12359991\" #> [1081] \"SAMN12359990\" \"SAMN12360005\" \"SAMN12359885\" \"SAMN12359886\" #> [1085] \"SAMN12359887\" \"SAMN12359964\" \"SAMN12359830\" \"SAMN12359831\" #> [1089] \"SAMN12359829\" \"SAMN12359826\" \"SAMN12359827\" \"SAMN12359824\" #> [1093] \"SAMN12359825\" \"SAMN12359832\" \"SAMN12359833\" \"SAMN12359800\" #> [1097] \"SAMN12359801\" \"SAMN12359798\" \"SAMN12359799\" \"SAMN12359797\" #> [1101] \"SAMN12359642\" \"SAMN12359640\" \"SAMN12359641\" \"SAMN12359638\" #> [1105] \"SAMN12359639\" \"SAMN12359637\" \"SAMN12359802\" \"SAMN12359803\" #> [1109] \"SAMN12360028\" \"SAMN12360030\" \"SAMN12360031\" \"SAMN12360024\" #> [1113] \"SAMN12359644\" \"SAMN12359647\" \"SAMN12359646\" \"SAMN12360017\" #> [1117] \"SAMN12360016\" \"SAMN12360015\" \"SAMN12360014\" \"SAMN12360021\" #> [1121] \"SAMN12360020\" \"SAMN12360019\" \"SAMN12359782\" \"SAMN12359783\" #> [1125] \"SAMN12359774\" \"SAMN12359775\" \"SAMN12359776\" \"SAMN12359777\" #> [1129] \"SAMN12359778\" \"SAMN12359779\" \"SAMN12359780\" \"SAMN12359781\" #> [1133] \"SAMN12359998\" \"SAMN12359999\" \"SAMN12360000\" \"SAMN12360001\" #> [1137] \"SAMN12359994\" \"SAMN12359883\" \"SAMN12359882\" \"SAMN12359881\" #> [1141] \"SAMN12359880\" \"SAMN12359879\" \"SAMN12359975\" \"SAMN12359980\" #> [1145] \"SAMN12359981\" \"SAMN12359978\" \"SAMN12359979\" \"SAMN12359819\" #> [1149] \"SAMN12359818\" \"SAMN12359821\" \"SAMN12359820\" \"SAMN12359815\" #> [1153] \"SAMN12359814\" \"SAMN12359817\" \"SAMN12359823\" \"SAMN12359822\" #> [1157] \"SAMN12359809\" \"SAMN12359808\" \"SAMN12359810\" \"SAMN12359805\" #> [1161] \"SAMN12359804\" \"SAMN12359807\" \"SAMN12359806\" \"SAMN12359667\" #> [1165] \"SAMN12359666\" \"SAMN12359665\" \"SAMN12359664\" \"SAMN12359813\" #> [1169] \"SAMN12359812\" \"SAMN12359669\" \"SAMN12359668\" \"SAMN12359889\" #> [1173] \"SAMN12359890\" \"SAMN12359891\" \"SAMN12359892\" \"SAMN12359893\" #> [1177] \"SAMN12359658\" \"SAMN12359659\" \"SAMN12359654\" \"SAMN12359655\" #> [1181] \"SAMN12359656\" \"SAMN12359657\" \"SAMN12359662\" \"SAMN12359663\" #> [1185] \"SAMN12359903\" \"SAMN12359902\" \"SAMN12359899\" \"SAMN12359901\" #> [1189] \"SAMN12359900\" \"SAMN12359895\" \"SAMN12359894\" \"SAMN12359897\" #> [1193] \"SAMN12359896\" \"SAMN12359864\" \"SAMN12360012\" \"SAMN12359673\" #> [1197] \"SAMN12359922\" \"SAMN12359923\" \"SAMN12359672\" \"SAMN12359918\" #> [1201] \"SAMN12360025\" \"SAMN12360026\" \"SAMN12360027\" \"SAMN12359791\" #> [1205] \"SAMN12359790\" \"SAMN12359789\" \"SAMN12359788\" \"SAMN12359787\" #> [1209] \"SAMN12359786\" \"SAMN12359785\" \"SAMN12359784\" \"SAMN12359793\" #> [1213] \"SAMN12359792\" \"SAMN12360007\" \"SAMN12360006\" \"SAMN12359872\" #> [1217] \"SAMN12360004\" \"SAMN12360011\" \"SAMN12360010\" \"SAMN12360009\" #> [1221] \"SAMN12360008\" \"SAMN12359866\" \"SAMN12359867\" \"SAMN12360013\" #> [1225] \"SAMN12359865\" \"SAMN12359870\" \"SAMN12359871\" \"SAMN12359868\" #> [1229] \"SAMN12359869\" \"SAMN12359676\" \"SAMN12359677\" \"SAMN12359674\" #> [1233] \"SAMN12359878\" \"SAMN12359877\" \"SAMN12360003\" \"SAMN12359875\" #> [1237] \"SAMN12359874\" \"SAMN12359685\" \"SAMN12359684\" \"SAMN12359686\" #> [1241] \"SAMN12359689\" \"SAMN12359688\" \"SAMN12359691\" \"SAMN12359690\" #> [1245] \"SAMN12359693\" \"SAMN12359692\" \"SAMN12359713\" \"SAMN12359712\" #> [1249] \"SAMN12359711\" \"SAMN12359710\" \"SAMN12359709\" \"SAMN12359708\" #> [1253] \"SAMN12359707\" \"SAMN12359706\" \"SAMN12359705\" \"SAMN12359704\" #> [1257] \"SAMN12359933\" \"SAMN12359932\" \"SAMN12359927\" \"SAMN12359926\" #> [1261] \"SAMN12359925\" \"SAMN12359924\" \"SAMN12359931\" \"SAMN12359919\" #> [1265] \"SAMN12359920\" \"SAMN12359914\" \"SAMN12359915\" \"SAMN12359916\" #> [1269] \"SAMN12359917\" \"SAMN12359671\" \"SAMN12359670\" \"SAMN12359765\" #> [1273] \"SAMN12359764\" \"SAMN12359767\" \"SAMN12359766\" \"SAMN12359769\" #> [1277] \"SAMN12359768\" \"SAMN12359771\" \"SAMN12359770\" \"SAMN12359773\" #> [1281] \"SAMN12359772\" \"SAMN12360023\" \"SAMN12360022\" \"SAMN12359619\" #> [1285] \"SAMN12359618\" \"SAMN12359621\" \"SAMN12359620\" \"SAMN12359615\" #> [1289] \"SAMN12359614\" \"SAMN12359617\" \"SAMN12359623\" \"SAMN12359622\" #> [1293] \"SAMN12359738\" \"SAMN12359912\" \"SAMN12359913\" \"SAMN12359910\" #> [1297] \"SAMN12359911\" \"SAMN12359908\" \"SAMN12359909\" \"SAMN12359906\" #> [1301] \"SAMN12359907\" \"SAMN12359904\" \"SAMN12359905\" \"SAMN12359756\" #> [1305] \"SAMN12359757\" \"SAMN12359754\" \"SAMN12359755\" \"SAMN12359760\" #> [1309] \"SAMN12359761\" \"SAMN12359758\" \"SAMN12359759\" \"SAMN12359762\" #> [1313] \"SAMN12359763\" \"SAMN12360032\" \"SAMN12360033\" \"SAMN12359863\" #> [1317] \"SAMN12359862\" \"SAMN12359855\" \"SAMN12359857\" \"SAMN12359856\" #> [1321] \"SAMN12359859\" \"SAMN12359858\" \"SAMN12359861\" \"SAMN12359860\" #> [1325] \"SAMN12359675\" \"SAMN12359681\" \"SAMN12359678\" \"SAMN12359679\" #> [1329] \"SAMN12359682\" \"SAMN12359683\" \"SAMN12359702\" \"SAMN12359703\" #> [1333] \"SAMN12359695\" \"SAMN12359696\" \"SAMN12359697\" \"SAMN12359698\" #> [1337] \"SAMN12359699\" \"SAMN12359700\" \"SAMN12359701\" \"SAMN12359940\" #> [1341] \"SAMN12359941\" \"SAMN12359938\" \"SAMN12359939\" \"SAMN12359936\" #> [1345] \"SAMN12359937\" \"SAMN12359934\" \"SAMN12359935\" \"SAMN12359942\" #> [1349] \"SAMN12359631\" \"SAMN12359630\" \"SAMN12359629\" \"SAMN12359628\" #> [1353] \"SAMN12359627\" \"SAMN12359949\" \"SAMN12359948\" \"SAMN12359951\" #> [1357] \"SAMN12359950\" \"SAMN12359852\" \"SAMN12359853\" \"SAMN12359947\" #> [1361] \"SAMN12359946\" \"SAMN12359848\" \"SAMN12359849\" \"SAMN12359850\" #> [1365] \"SAMN12359851\" \"SAMN12359844\" \"SAMN12359930\" \"SAMN12359929\" #> [1369] \"SAMN12359928\" \"SAMN12359996\" \"SAMN12359997\" \"SAMN12360002\" #> [1373] \"SAMN12359876\" \"SAMN12359794\" \"SAMN12359795\" \"SAMN12359843\" #> [1377] \"SAMN12359634\" \"SAMN12359635\" \"SAMN12359842\" \"SAMN12359747\" #> [1381] \"SAMN12359746\" \"SAMN12359745\" \"SAMN12359744\" \"SAMN12359751\" #> [1385] \"SAMN12359750\" \"SAMN12359749\" \"SAMN12359748\" \"SAMN12359753\" #> [1389] \"SAMN12359752\" \"SAMN12359973\" \"SAMN12359972\" \"SAMN12359971\" #> [1393] \"SAMN12359970\" \"SAMN12359969\" \"SAMN12359968\" \"SAMN12359967\" #> [1397] \"SAMN12359966\" \"SAMN12359965\" \"SAMN12359739\" \"SAMN12359740\" #> [1401] \"SAMN12359734\" \"SAMN12359735\" \"SAMN12359736\" \"SAMN12359737\" #> [1405] \"SAMN12359742\" \"SAMN12359743\" \"SAMN12359954\" \"SAMN12359955\" #> [1409] \"SAMN12359956\" \"SAMN12359957\" \"SAMN12359958\" \"SAMN12359959\" #> [1413] \"SAMN12359961\" \"SAMN12359837\" \"SAMN12359963\" \"SAMN12359835\" #> [1417] \"SAMN12359834\" \"SAMN12359841\" \"SAMN12359840\" \"SAMN12359839\" #> [1421] \"SAMN12359653\" \"SAMN12359652\" \"SAMN12359649\" \"SAMN12359648\" #> [1425] \"SAMN12359651\" \"SAMN12359650\" \"SAMN12359645\" \"SAMN12359626\" #> [1429] \"SAMN12359625\" \"SAMN12359624\" \"SAMN12359633\" \"SAMN12359632\" #> [1433] \"SAMN12359962\" \"SAMN12359836\" \"SAMN12359873\" \"SAMN12359884\" #> [1437] \"SAMN12359722\" \"SAMN12359723\" \"SAMN12359720\" \"SAMN12359721\" #> [1441] \"SAMN12359718\" \"SAMN12359719\" \"SAMN12359716\" \"SAMN12359717\" #> [1445] \"SAMN12359846\" \"SAMN12359733\" \"SAMN12359726\" \"SAMN12359993\" #> [1449] \"SAMN12359985\" \"SAMN12359986\" \"SAMN12359888\" \"SAMN12359828\" #> [1453] \"SAMN12359796\" \"SAMN12359643\" \"SAMN12359636\" \"SAMN12360029\" #> [1457] \"SAMN12360018\" \"SAMN12359995\" \"SAMN12359974\" \"SAMN12359816\" #> [1461] \"SAMN12359811\" \"SAMN12359660\" \"SAMN12359661\" \"SAMN12359898\" #> [1465] \"SAMN12359687\" \"SAMN12359921\" \"SAMN12359616\" \"SAMN12359854\" #> [1469] \"SAMN12359694\" \"SAMN12359943\" \"SAMN12359741\" \"SAMN12359960\" #> [1473] \"SAMN12359838\" \"SAMN12359714\" \"SAMN12587177\" \"SAMN12587175\" #> [1477] \"SAMN12587176\" \"SAMN12587173\" \"SAMN12587174\" \"SAMN12587171\" #> [1481] \"SAMN12587172\" \"SAMN12587160\" \"SAMN12587159\" \"SAMN12587156\" #> [1485] \"SAMN12587155\" \"SAMN12587158\" \"SAMN12587157\" \"SAMN12587152\" #> [1489] \"SAMN12587151\" \"SAMN12587154\" \"SAMN12587153\" \"SAMN12587170\" #> [1493] \"SAMN12587169\" \"SAMN12587168\" \"SAMN12587167\" \"SAMN12587166\" #> [1497] \"SAMN12587165\" \"SAMN12587164\" \"SAMN12587163\" \"SAMN12587161\" #> [1501] \"SAMN12609913\" \"SAMN12609912\" \"SAMN12609940\" \"SAMN12587178\" #> [1505] \"SAMN12587162\" \"SAMN12647577\" \"SAMN12647585\" \"SAMN12647584\" #> [1509] \"SAMN12702868\" \"SAMN12702869\" \"SAMN12702870\" \"SAMN12702872\" #> [1513] \"SAMN12702888\" \"SAMN12716865\" \"SAMN12716862\" \"SAMN12716863\" #> [1517] \"SAMN12716864\" \"SAMN12727832\" \"SAMN12727829\" \"SAMN12727834\" #> [1521] \"SAMN12727838\" \"SAMN12731190\" \"SAMN12734223\" \"SAMN12684081\" #> [1525] \"SAMN12684085\" \"SAMN12684082\" \"SAMN12684084\" \"SAMN12745434\" #> [1529] \"SAMN12745433\" \"SAMN12745439\" \"SAMN12767324\" \"SAMN12767328\" #> [1533] \"SAMN10221061\" \"SAMN10221523\" \"SAMN12783873\" \"SAMN12783881\" #> [1537] \"SAMN12783892\" \"SAMN12783896\" \"SAMN12783920\" \"SAMN12783939\" #> [1541] \"SAMN12783958\" \"SAMN12783966\" \"SAMN12783988\" \"SAMN12784150\" #> [1545] \"SAMN12784151\" \"SAMN12784304\" \"SAMN12784429\" \"SAMN12784434\" #> [1549] \"SAMN12797079\" \"SAMN12797067\" \"SAMN12797188\" \"SAMN12797190\" #> [1553] \"SAMN12797191\" \"SAMN12797189\" \"SAMN10221255\" \"SAMN10221115\" #> [1557] \"SAMN12822643\" \"SAMN12822657\" \"SAMN12822668\" \"SAMN12822670\" #> [1561] \"SAMN12822682\" \"SAMN12822695\" \"SAMN12846495\" \"SAMN12846528\" #> [1565] \"SAMN12846531\" \"SAMN12846532\" \"SAMN12846553\" \"SAMN12846558\" #> [1569] \"SAMN12846560\" \"SAMN12846559\" \"SAMN12850897\" \"SAMN12859067\" #> [1573] \"SAMN12859069\" \"SAMN12859046\" \"SAMN12859068\" \"SAMN12859066\" #> [1577] \"SAMN12859071\" \"SAMN12860549\" \"SAMN12860547\" \"SAMN12860542\" #> [1581] \"SAMN12860541\" \"SAMN12860545\" \"SAMN12860552\" \"SAMN12860556\" #> [1585] \"SAMN12912143\" \"SAMN12912140\" \"SAMN12912141\" \"SAMN12912155\" #> [1589] \"SAMN12912148\" \"SAMN12912157\" \"SAMN12912146\" \"SAMN12912150\" #> [1593] \"SAMN12912152\" \"SAMN12912144\" \"SAMN12912151\" \"SAMN12912156\" #> [1597] \"SAMN12912154\" \"SAMN12912145\" \"SAMN12912153\" \"SAMN12912166\" #> [1601] \"SAMN12912171\" \"SAMN12912161\" \"SAMN12912160\" \"SAMN12912158\" #> [1605] \"SAMN12912159\" \"SAMN12912164\" \"SAMN12912169\" \"SAMN12912163\" #> [1609] \"SAMN12912162\" \"SAMN12912165\" \"SAMN12912170\" \"SAMN12913176\" #> [1613] \"SAMN12913175\" \"SAMN12913177\" \"SAMN12912147\" \"SAMN12915988\" #> [1617] \"SAMN12924386\" \"SAMN12924385\" \"SAMN12924384\" \"SAMN12924389\" #> [1621] \"SAMN12924388\" \"SAMN12924387\" \"SAMN12995280\" \"SAMN12995272\" #> [1625] \"SAMN12995277\" \"SAMN12995268\" \"SAMN12995265\" \"SAMN12995274\" #> [1629] \"SAMN12995363\" \"SAMN13012858\" \"SAMN13012955\" \"SAMN13012956\" #> [1633] \"SAMN13013144\" \"SAMN13013146\" \"SAMN13013145\" \"SAMN13019794\" #> [1637] \"SAMN13019800\" \"SAMN13019797\" \"SAMN13019790\" \"SAMN13019836\" #> [1641] \"SAMN13019814\" \"SAMN13019810\" \"SAMN13019816\" \"SAMN13019812\" #> [1645] \"SAMN13019818\" \"SAMN13019838\" \"SAMN13019832\" \"SAMN13019834\" #> [1649] \"SAMN13019871\" \"SAMN13019875\" \"SAMN13027785\" \"SAMN13041519\" #> [1653] \"SAMN13041521\" \"SAMN13041520\" \"SAMN13047710\" \"SAMN13047708\" #> [1657] \"SAMN13047709\" \"SAMN13047706\" \"SAMN13047762\" \"SAMN13047769\" #> [1661] \"SAMN13047768\" \"SAMN13047770\" \"SAMN13049208\" \"SAMN13049216\" #> [1665] \"SAMN13049237\" \"SAMN13050478\" \"SAMN13051359\" \"SAMN13051356\" #> [1669] \"SAMN13051360\" \"SAMN13051355\" \"SAMN13051357\" \"SAMN13051354\" #> [1673] \"SAMN13051405\" \"SAMN13051401\" \"SAMN13050508\" \"SAMN13064115\" #> [1677] \"SAMN13064118\" \"SAMN13064119\" \"SAMN13064116\" \"SAMN13064120\" #> [1681] \"SAMN13064117\" \"SAMN13087300\" \"SAMN13087292\" \"SAMN13087305\" #> [1685] \"SAMN13087307\" \"SAMN13087304\" \"SAMN13087581\" \"SAMN13105179\" #> [1689] \"SAMN13108288\" \"SAMN13108290\" \"SAMN13108289\" \"SAMN13108287\" #> [1693] \"SAMN13108301\" \"SAMN13108298\" \"SAMN13108299\" \"SAMN13108300\" #> [1697] \"SAMN13149713\" \"SAMN13149719\" \"SAMN13149731\" \"SAMN13149857\" #> [1701] \"SAMN13149871\" \"SAMN13149900\" \"SAMN13150877\" \"SAMN13150874\" #> [1705] \"SAMN13150869\" \"SAMN13150868\" \"SAMN13150831\" \"SAMN13150825\" #> [1709] \"SAMN13153733\" \"SAMN13153732\" \"SAMN13153771\" \"SAMN13153775\" #> [1713] \"SAMN13153776\" \"SAMN13153770\" \"SAMN13153779\" \"SAMN13153778\" #> [1717] \"SAMN13153777\" \"SAMN13162518\" \"SAMN13162517\" \"SAMN13162522\" #> [1721] \"SAMN13162523\" \"SAMN13162520\" \"SAMN13162519\" \"SAMN13162521\" #> [1725] \"SAMN13172699\" \"SAMN13172700\" \"SAMN13172697\" \"SAMN13172701\" #> [1729] \"SAMN13172855\" \"SAMN13172859\" \"SAMN13173361\" \"SAMN13173360\" #> [1733] \"SAMN13173358\" \"SAMN13173359\" \"SAMN13192664\" \"SAMN13279661\" #> [1737] \"SAMN13279652\" \"SAMN13279658\" \"SAMN13279649\" \"SAMN13279659\" #> [1741] \"SAMN13279653\" \"SAMN13279648\" \"SAMN13279650\" \"SAMN13279651\" #> [1745] \"SAMN13279680\" \"SAMN13279657\" \"SAMN13279655\" \"SAMN13279654\" #> [1749] \"SAMN13279660\" \"SAMN13279672\" \"SAMN13279647\" \"SAMN13279669\" #> [1753] \"SAMN13279676\" \"SAMN13279665\" \"SAMN13283462\" \"SAMN13283511\" #> [1757] \"SAMN13283517\" \"SAMN13293928\" \"SAMN13293927\" \"SAMN13293924\" #> [1761] \"SAMN13293926\" \"SAMN13293925\" \"SAMN13293923\" \"SAMN13293922\" #> [1765] \"SAMN13315603\" \"SAMN13315604\" \"SAMN13320524\" \"SAMN13320507\" #> [1769] \"SAMN13320519\" \"SAMN13320506\" \"SAMN13323733\" \"SAMN13339197\" #> [1773] \"SAMN13339200\" \"SAMN13339201\" \"SAMN13339205\" \"SAMN13339206\" #> [1777] \"SAMN13339212\" \"SAMN13339210\" \"SAMN13339211\" \"SAMN13340328\" #> [1781] \"SAMN13340368\" \"SAMN13340365\" \"SAMN13340371\" \"SAMN13340366\" #> [1785] \"SAMN13340364\" \"SAMN13340402\" \"SAMN13340398\" \"SAMN13340399\" #> [1789] \"SAMN13340429\" \"SAMN13340522\" \"SAMN13340573\" \"SAMN13354140\" #> [1793] \"SAMN13354144\" \"SAMN13354150\" \"SAMN13354147\" \"SAMN13413561\" #> [1797] \"SAMN13413556\" \"SAMN13413558\" \"SAMN13413557\" \"SAMN13413560\" #> [1801] \"SAMN13413555\" \"SAMN13413559\" \"SAMN13429603\" \"SAMN13445911\" #> [1805] \"SAMN13446263\" \"SAMN13446262\" \"SAMN13446260\" \"SAMN13446261\" #> [1809] \"SAMN12990709\" \"SAMN12990708\" \"SAMN12990707\" \"SAMN12990706\" #> [1813] \"SAMN12990705\" \"SAMN12990704\" \"SAMN12990703\" \"SAMN12990616\" #> [1817] \"SAMN12990701\" \"SAMN12990700\" \"SAMN12990699\" \"SAMN12990698\" #> [1821] \"SAMN12990697\" \"SAMN12990696\" \"SAMN12990695\" \"SAMN12990694\" #> [1825] \"SAMN12990693\" \"SAMN12990615\" \"SAMN12990692\" \"SAMN12990691\" #> [1829] \"SAMN12990690\" \"SAMN12990689\" \"SAMN12990688\" \"SAMN12990687\" #> [1833] \"SAMN12990686\" \"SAMN12990685\" \"SAMN12990684\" \"SAMN12990683\" #> [1837] \"SAMN12990614\" \"SAMN12990682\" \"SAMN12990681\" \"SAMN12990680\" #> [1841] \"SAMN12990679\" \"SAMN12990678\" \"SAMN12990675\" \"SAMN12990671\" #> [1845] \"SAMN12990670\" \"SAMN12990669\" \"SAMN12990613\" \"SAMN12990668\" #> [1849] \"SAMN12990667\" \"SAMN12990666\" \"SAMN12990665\" \"SAMN12990664\" #> [1853] \"SAMN12990663\" \"SAMN12990661\" \"SAMN12990660\" \"SAMN12990612\" #> [1857] \"SAMN12990658\" \"SAMN12990657\" \"SAMN12990656\" \"SAMN12990654\" #> [1861] \"SAMN12990653\" \"SAMN12990652\" \"SAMN12990651\" \"SAMN12990650\" #> [1865] \"SAMN12990649\" \"SAMN12990611\" \"SAMN12990648\" \"SAMN12990647\" #> [1869] \"SAMN12990646\" \"SAMN12990645\" \"SAMN12990644\" \"SAMN12990643\" #> [1873] \"SAMN12990642\" \"SAMN12990639\" \"SAMN12990638\" \"SAMN12990637\" #> [1877] \"SAMN12990610\" \"SAMN12990636\" \"SAMN12990635\" \"SAMN12990634\" #> [1881] \"SAMN12990633\" \"SAMN12990632\" \"SAMN12990631\" \"SAMN12990630\" #> [1885] \"SAMN12990629\" \"SAMN12990628\" \"SAMN12990627\" \"SAMN12990609\" #> [1889] \"SAMN12990626\" \"SAMN12990625\" \"SAMN12990624\" \"SAMN12990623\" #> [1893] \"SAMN12990622\" \"SAMN12990621\" \"SAMN12990620\" \"SAMN12990619\" #> [1897] \"SAMN12990618\" \"SAMN12990617\" \"SAMN12990608\" \"SAMN12990607\" #> [1901] \"SAMN13474403\" \"SAMN13474470\" \"SAMN13474476\" \"SAMN13474490\" #> [1905] \"SAMN13474500\" \"SAMN13474469\" \"SAMN13482047\" \"SAMN13482050\" #> [1909] \"SAMN13445912\" \"SAMN13482831\" \"SAMN13482839\" \"SAMN13482843\" #> [1913] \"SAMN12990702\" \"SAMN12990674\" \"SAMN12990659\" \"SAMN12990655\" #> [1917] \"SAMN13540593\" \"SAMN13540719\" \"SAMN13540734\" \"SAMN13540766\" #> [1921] \"SAMN13540781\" \"SAMN13540894\" \"SAMN12943580\" \"SAMN12943579\" #> [1925] \"SAMN12943578\" \"SAMN12943451\" \"SAMN12943577\" \"SAMN12943576\" #> [1929] \"SAMN12943575\" \"SAMN12943574\" \"SAMN12943573\" \"SAMN12943572\" #> [1933] \"SAMN12943571\" \"SAMN12943570\" \"SAMN12943569\" \"SAMN12943568\" #> [1937] \"SAMN12943450\" \"SAMN12943567\" \"SAMN12943566\" \"SAMN12943565\" #> [1941] \"SAMN12943708\" \"SAMN12943464\" \"SAMN12943707\" \"SAMN12943706\" #> [1945] \"SAMN12943705\" \"SAMN12943704\" \"SAMN12943703\" \"SAMN12943702\" #> [1949] \"SAMN12943701\" \"SAMN12943700\" \"SAMN12943699\" \"SAMN12943698\" #> [1953] \"SAMN12943463\" \"SAMN12943697\" \"SAMN12943696\" \"SAMN12943695\" #> [1957] \"SAMN12943694\" \"SAMN12943693\" \"SAMN12943692\" \"SAMN12943691\" #> [1961] \"SAMN12943690\" \"SAMN12943689\" \"SAMN12943688\" \"SAMN12943462\" #> [1965] \"SAMN12943687\" \"SAMN12943686\" \"SAMN12943685\" \"SAMN12943684\" #> [1969] \"SAMN12943683\" \"SAMN12943682\" \"SAMN12943681\" \"SAMN12943680\" #> [1973] \"SAMN12943536\" \"SAMN12943535\" \"SAMN12943534\" \"SAMN12943533\" #> [1977] \"SAMN12943532\" \"SAMN12943531\" \"SAMN12943530\" \"SAMN12943529\" #> [1981] \"SAMN12943528\" \"SAMN12943527\" \"SAMN12943446\" \"SAMN12943526\" #> [1985] \"SAMN12943525\" \"SAMN12943524\" \"SAMN12943523\" \"SAMN12943522\" #> [1989] \"SAMN12943521\" \"SAMN12943520\" \"SAMN12943519\" \"SAMN12943518\" #> [1993] \"SAMN12943517\" \"SAMN12943445\" \"SAMN12943516\" \"SAMN12943515\" #> [1997] \"SAMN12943514\" \"SAMN12943513\" \"SAMN12943512\" \"SAMN12943511\" #> [2001] \"SAMN12943510\" \"SAMN12943509\" \"SAMN12943508\" \"SAMN12943507\" #> [2005] \"SAMN12943444\" \"SAMN12943506\" \"SAMN12943505\" \"SAMN12943504\" #> [2009] \"SAMN12943503\" \"SAMN12943502\" \"SAMN12943501\" \"SAMN12943500\" #> [2013] \"SAMN12943499\" \"SAMN12943498\" \"SAMN12943497\" \"SAMN12943443\" #> [2017] \"SAMN12943496\" \"SAMN12943495\" \"SAMN12943494\" \"SAMN12943493\" #> [2021] \"SAMN12943492\" \"SAMN12943491\" \"SAMN12943490\" \"SAMN12943489\" #> [2025] \"SAMN12943488\" \"SAMN12943487\" \"SAMN12943442\" \"SAMN12943486\" #> [2029] \"SAMN12943679\" \"SAMN12943678\" \"SAMN12943461\" \"SAMN12943677\" #> [2033] \"SAMN12943676\" \"SAMN12943675\" \"SAMN12943674\" \"SAMN12943673\" #> [2037] \"SAMN12943672\" \"SAMN12943671\" \"SAMN12943670\" \"SAMN12943669\" #> [2041] \"SAMN12943668\" \"SAMN12943460\" \"SAMN12943667\" \"SAMN12943666\" #> [2045] \"SAMN12943665\" \"SAMN12943664\" \"SAMN12943663\" \"SAMN12943662\" #> [2049] \"SAMN12943661\" \"SAMN12943660\" \"SAMN12943659\" \"SAMN12943658\" #> [2053] \"SAMN12943459\" \"SAMN12943657\" \"SAMN12943656\" \"SAMN12943655\" #> [2057] \"SAMN12943654\" \"SAMN12943653\" \"SAMN12943652\" \"SAMN12943651\" #> [2061] \"SAMN12943440\" \"SAMN12943737\" \"SAMN12943736\" \"SAMN12943735\" #> [2065] \"SAMN12943734\" \"SAMN12943733\" \"SAMN12943732\" \"SAMN12943731\" #> [2069] \"SAMN12943730\" \"SAMN12943729\" \"SAMN12943728\" \"SAMN12943466\" #> [2073] \"SAMN12943727\" \"SAMN12943726\" \"SAMN12943725\" \"SAMN12943724\" #> [2077] \"SAMN12943723\" \"SAMN12943722\" \"SAMN12943721\" \"SAMN12943720\" #> [2081] \"SAMN12943719\" \"SAMN12943718\" \"SAMN12943465\" \"SAMN12943717\" #> [2085] \"SAMN12943716\" \"SAMN12943715\" \"SAMN12943714\" \"SAMN12943713\" #> [2089] \"SAMN12943712\" \"SAMN12943711\" \"SAMN12943710\" \"SAMN12943709\" #> [2093] \"SAMN12943650\" \"SAMN12943649\" \"SAMN12943648\" \"SAMN12943458\" #> [2097] \"SAMN12943647\" \"SAMN12943646\" \"SAMN12943645\" \"SAMN12943644\" #> [2101] \"SAMN12943643\" \"SAMN12943642\" \"SAMN12943641\" \"SAMN12943640\" #> [2105] \"SAMN12943639\" \"SAMN12943638\" \"SAMN12943457\" \"SAMN12943439\" #> [2109] \"SAMN12943637\" \"SAMN12943636\" \"SAMN12943635\" \"SAMN12943634\" #> [2113] \"SAMN12943633\" \"SAMN12943632\" \"SAMN12943631\" \"SAMN12943630\" #> [2117] \"SAMN12943629\" \"SAMN12943628\" \"SAMN12943456\" \"SAMN12943627\" #> [2121] \"SAMN12943626\" \"SAMN12943625\" \"SAMN12943624\" \"SAMN12943623\" #> [2125] \"SAMN12943622\" \"SAMN12943621\" \"SAMN12943620\" \"SAMN12943619\" #> [2129] \"SAMN12943618\" \"SAMN12943455\" \"SAMN12943617\" \"SAMN12943616\" #> [2133] \"SAMN12943615\" \"SAMN12943614\" \"SAMN12943613\" \"SAMN12943612\" #> [2137] \"SAMN12943611\" \"SAMN12943610\" \"SAMN12943609\" \"SAMN12943608\" #> [2141] \"SAMN12943454\" \"SAMN12943607\" \"SAMN12943606\" \"SAMN12943605\" #> [2145] \"SAMN12943604\" \"SAMN12943603\" \"SAMN12943602\" \"SAMN12943601\" #> [2149] \"SAMN12943600\" \"SAMN12943599\" \"SAMN12943598\" \"SAMN12943453\" #> [2153] \"SAMN12943597\" \"SAMN12943596\" \"SAMN12943595\" \"SAMN12943594\" #> [2157] \"SAMN12943485\" \"SAMN12943484\" \"SAMN12943483\" \"SAMN12943482\" #> [2161] \"SAMN12943481\" \"SAMN12943480\" \"SAMN12943479\" \"SAMN12943478\" #> [2165] \"SAMN12943477\" \"SAMN12943441\" \"SAMN12943476\" \"SAMN12943475\" #> [2169] \"SAMN12943474\" \"SAMN12943473\" \"SAMN12943472\" \"SAMN12943471\" #> [2173] \"SAMN12943470\" \"SAMN12943469\" \"SAMN12943749\" \"SAMN12943748\" #> [2177] \"SAMN12943468\" \"SAMN12943747\" \"SAMN12943746\" \"SAMN12943745\" #> [2181] \"SAMN12943744\" \"SAMN12943743\" \"SAMN12943742\" \"SAMN12943741\" #> [2185] \"SAMN12943740\" \"SAMN12943739\" \"SAMN12943738\" \"SAMN12943467\" #> [2189] \"SAMN12943564\" \"SAMN12943563\" \"SAMN12943562\" \"SAMN12943561\" #> [2193] \"SAMN12943560\" \"SAMN12943559\" \"SAMN12943558\" \"SAMN12943449\" #> [2197] \"SAMN12943557\" \"SAMN12943556\" \"SAMN12943555\" \"SAMN12943554\" #> [2201] \"SAMN12943553\" \"SAMN12943552\" \"SAMN12943551\" \"SAMN12943550\" #> [2205] \"SAMN12943549\" \"SAMN12943548\" \"SAMN12943448\" \"SAMN12943547\" #> [2209] \"SAMN12943546\" \"SAMN12943545\" \"SAMN12943544\" \"SAMN12943543\" #> [2213] \"SAMN12943541\" \"SAMN12943540\" \"SAMN12943539\" \"SAMN12943538\" #> [2217] \"SAMN12943537\" \"SAMN12943447\" \"SAMN12943438\" \"SAMN12943437\" #> [2221] \"SAMN12943593\" \"SAMN12943592\" \"SAMN12943591\" \"SAMN12943590\" #> [2225] \"SAMN12943452\" \"SAMN12943587\" \"SAMN12943586\" \"SAMN12943585\" #> [2229] \"SAMN12943584\" \"SAMN12943583\" \"SAMN12943582\" \"SAMN12943581\" #> [2233] \"SAMN13676472\" \"SAMN13676473\" \"SAMN13682807\" \"SAMN13682810\" #> [2237] \"SAMN13682812\" \"SAMN13683699\" \"SAMN13683694\" \"SAMN13683698\" #> [2241] \"SAMN13683693\" \"SAMN13683697\" \"SAMN13683696\" \"SAMN13703355\" #> [2245] \"SAMN13703425\" \"SAMN13703426\" \"SAMN13703433\" \"SAMN13703493\" #> [2249] \"SAMN13703504\" \"SAMN13703498\" \"SAMN13703502\" \"SAMN13703507\" #> [2253] \"SAMN13703506\" \"SAMN13708360\" \"SAMN13714357\" \"SAMN13714350\" #> [2257] \"SAMN13714355\" \"SAMN13714356\" \"SAMN13714348\" \"SAMN13714349\" #> [2261] \"SAMN13718753\" \"SAMN13719098\" \"SAMN13719135\" \"SAMN13719151\" #> [2265] \"SAMN13721831\" \"SAMN13721832\" \"SAMN13721833\" \"SAMN13721837\" #> [2269] \"SAMN13721840\" \"SAMN13721845\" \"SAMN13747071\" \"SAMN13747353\" #> [2273] \"SAMN13747129\" \"SAMN13781468\" \"SAMN13781479\" \"SAMN13836667\" #> [2277] \"SAMN13836666\" \"SAMN13836681\" \"SAMN13836680\" \"SAMN13836672\" #> [2281] \"SAMN13836668\" \"SAMN13842342\" \"SAMN13842339\" \"SAMN13842338\" #> [2285] \"SAMN13842340\" \"SAMN13852109\" \"SAMN13852104\" \"SAMN13852237\" #> [2289] \"SAMN13852236\" \"SAMN13852238\" \"SAMN13852170\" \"SAMN13852254\" #> [2293] \"SAMN13852244\" \"SAMN13852243\" \"SAMN13852241\" \"SAMN13852245\" #> [2297] \"SAMN13855151\" \"SAMN13855149\" \"SAMN13842449\" \"SAMN13842450\" #> [2301] \"SAMN13902113\" \"SAMN13911696\" \"SAMN13911695\" \"SAMN13911719\" #> [2305] \"SAMN13911721\" \"SAMN13911718\" \"SAMN13920373\" \"SAMN13920401\" #> [2309] \"SAMN13920441\" \"SAMN13920468\" \"SAMN13920471\" \"SAMN13920676\" #> [2313] \"SAMN13920681\" \"SAMN13920695\" \"SAMN13920697\" \"SAMN13920700\" #> [2317] \"SAMN13996906\" \"SAMN13996938\" \"SAMN13996947\" \"SAMN13996991\" #> [2321] \"SAMN13996995\" \"SAMN13996990\" \"SAMN13996908\" \"SAMN13996946\" #> [2325] \"SAMN14069586\" \"SAMN14083809\" \"SAMN14125622\" \"SAMN14125629\" #> [2329] \"SAMN14125612\" \"SAMN14125627\" \"SAMN14305398\" \"SAMN14305404\" #> [2333] \"SAMN14305397\" \"SAMN14305401\" \"SAMN14317034\" \"SAMN14359371\" #> [2337] \"SAMN14369371\" \"SAMN14369370\" \"SAMN14369369\" \"SAMN14403489\" #> [2341] \"SAMN14403491\" \"SAMN14403490\" \"SAMN14414514\" \"SAMN14414515\" #> [2345] \"SAMN14414511\" \"SAMN14414512\" \"SAMN14414513\" \"SAMN14414509\" #> [2349] \"SAMN14448216\" \"SAMN14448278\" \"SAMN14448285\" \"SAMN14448341\" #> [2353] \"SAMN14448342\" \"SAMN14448420\" \"SAMN14448421\" \"SAMN14448422\" #> [2357] \"SAMN14448592\" \"SAMN14448588\" \"SAMN14448585\" \"SAMN14448590\" #> [2361] \"SAMN14448586\" \"SAMN14448591\" \"SAMN14448589\" \"SAMN14448741\" #> [2365] \"SAMN14487790\" \"SAMN12359680\" \"SAMN14850305\" \"SAMN14850308\" #> [2369] \"SAMN14850307\" \"SAMN14850310\" \"SAMN14850302\" \"SAMN14850301\" #> [2373] \"SAMN14850300\" \"SAMN15027854\" \"SAMN15027857\" \"SAMN15047368\" #> [2377] \"SAMN15047371\" \"SAMN15047374\" \"SAMN15047364\" \"SAMN15047488\" #> [2381] \"SAMN15047484\" \"SAMN15053762\" \"SAMN15053761\" \"SAMN15297860\" #> [2385] \"SAMN15298868\" \"SAMN15299077\" \"SAMN15299110\" \"SAMN15299147\" #> [2389] \"SAMN15394811\" \"SAMN15394810\" \"SAMN15394812\" \"SAMN15394805\" #> [2393] \"SAMN15394807\" \"SAMN15394806\" \"SAMN15394808\" \"SAMN15394809\" #> [2397] \"SAMN15394827\" \"SAMN15729768\" \"SAMN16245203\" \"SAMN16245113\" #> [2401] \"SAMN16245104\" \"SAMN16245103\" \"SAMN16245202\" \"SAMN16245201\" #> [2405] \"SAMN16245200\" \"SAMN16245199\" \"SAMN16245198\" \"SAMN16245197\" #> [2409] \"SAMN16245196\" \"SAMN16245195\" \"SAMN16245194\" \"SAMN16245193\" #> [2413] \"SAMN16245112\" \"SAMN16245192\" \"SAMN16245191\" \"SAMN16245190\" #> [2417] \"SAMN16245189\" \"SAMN16245188\" \"SAMN16245187\" \"SAMN16245186\" #> [2421] \"SAMN16245185\" \"SAMN16245184\" \"SAMN16245183\" \"SAMN16245111\" #> [2425] \"SAMN16245182\" \"SAMN16245181\" \"SAMN16245180\" \"SAMN16245179\" #> [2429] \"SAMN16245178\" \"SAMN16245177\" \"SAMN16245176\" \"SAMN16245175\" #> [2433] \"SAMN16245174\" \"SAMN16245173\" \"SAMN16245110\" \"SAMN16245172\" #> [2437] \"SAMN16245171\" \"SAMN16245170\" \"SAMN16245169\" \"SAMN16245168\" #> [2441] \"SAMN16245167\" \"SAMN16245166\" \"SAMN16245165\" \"SAMN16245164\" #> [2445] \"SAMN16245163\" \"SAMN16245109\" \"SAMN16245162\" \"SAMN16245161\" #> [2449] \"SAMN16245160\" \"SAMN16245159\" \"SAMN16245158\" \"SAMN16245157\" #> [2453] \"SAMN16245156\" \"SAMN16245155\" \"SAMN16245154\" \"SAMN16245153\" #> [2457] \"SAMN16245108\" \"SAMN16245151\" \"SAMN16245150\" \"SAMN16245149\" #> [2461] \"SAMN16245148\" \"SAMN16245147\" \"SAMN16245146\" \"SAMN16245145\" #> [2465] \"SAMN16245144\" \"SAMN16245143\" \"SAMN16245107\" \"SAMN16245142\" #> [2469] \"SAMN16245141\" \"SAMN16245140\" \"SAMN16245139\" \"SAMN16245138\" #> [2473] \"SAMN16245137\" \"SAMN16245136\" \"SAMN16245135\" \"SAMN16245134\" #> [2477] \"SAMN16245133\" \"SAMN16245106\" \"SAMN16245132\" \"SAMN16245131\" #> [2481] \"SAMN16245130\" \"SAMN16245129\" \"SAMN16245128\" \"SAMN16245127\" #> [2485] \"SAMN16245126\" \"SAMN16245125\" \"SAMN16245124\" \"SAMN16245312\" #> [2489] \"SAMN16245311\" \"SAMN16245310\" \"SAMN16245309\" \"SAMN16245308\" #> [2493] \"SAMN16245307\" \"SAMN16245306\" \"SAMN16245305\" \"SAMN16245304\" #> [2497] \"SAMN16245303\" \"SAMN16245123\" \"SAMN16245105\" \"SAMN16245302\" #> [2501] \"SAMN16245301\" \"SAMN16245300\" \"SAMN16245299\" \"SAMN16245298\" #> [2505] \"SAMN16245297\" \"SAMN16245296\" \"SAMN16245295\" \"SAMN16245294\" #> [2509] \"SAMN16245293\" \"SAMN16245122\" \"SAMN16245292\" \"SAMN16245291\" #> [2513] \"SAMN16245290\" \"SAMN16245289\" \"SAMN16245288\" \"SAMN16245287\" #> [2517] \"SAMN16245286\" \"SAMN16245285\" \"SAMN16245284\" \"SAMN16245283\" #> [2521] \"SAMN16245121\" \"SAMN16245282\" \"SAMN16245281\" \"SAMN16245279\" #> [2525] \"SAMN16245278\" \"SAMN16245277\" \"SAMN16245276\" \"SAMN16245275\" #> [2529] \"SAMN16245274\" \"SAMN16245273\" \"SAMN16245120\" \"SAMN16245272\" #> [2533] \"SAMN16245271\" \"SAMN16245270\" \"SAMN16245269\" \"SAMN16245268\" #> [2537] \"SAMN16245266\" \"SAMN16245264\" \"SAMN16245263\" \"SAMN16245119\" #> [2541] \"SAMN16245262\" \"SAMN16245261\" \"SAMN16245260\" \"SAMN16245259\" #> [2545] \"SAMN16245258\" \"SAMN16245257\" \"SAMN16245256\" \"SAMN16245255\" #> [2549] \"SAMN16245254\" \"SAMN16245253\" \"SAMN16245118\" \"SAMN16245252\" #> [2553] \"SAMN16245251\" \"SAMN16245250\" \"SAMN16245249\" \"SAMN16245248\" #> [2557] \"SAMN16245243\" \"SAMN16245117\" \"SAMN16245242\" \"SAMN16245241\" #> [2561] \"SAMN16245240\" \"SAMN16245237\" \"SAMN16245236\" \"SAMN16245235\" #> [2565] \"SAMN16245234\" \"SAMN16245233\" \"SAMN16245116\" \"SAMN16245232\" #> [2569] \"SAMN16245231\" \"SAMN16245230\" \"SAMN16245229\" \"SAMN16245228\" #> [2573] \"SAMN16245227\" \"SAMN16245226\" \"SAMN16245225\" \"SAMN16245224\" #> [2577] \"SAMN16245223\" \"SAMN16245115\" \"SAMN16245222\" \"SAMN16245221\" #> [2581] \"SAMN16245220\" \"SAMN16245219\" \"SAMN16245217\" \"SAMN16245216\" #> [2585] \"SAMN16245215\" \"SAMN16245214\" \"SAMN16245213\" \"SAMN16245114\" #> [2589] \"SAMN16245212\" \"SAMN16245211\" \"SAMN16245210\" \"SAMN16245209\" #> [2593] \"SAMN16245208\" \"SAMN16245207\" \"SAMN16245206\" \"SAMN16245205\" #> [2597] \"SAMN16245280\" \"SAMN16245267\" \"SAMN16245265\" \"SAMN16245247\" #> [2601] \"SAMN16245244\" \"SAMN16245238\" \"SAMN16245218\" \"SAMN16484147\" #> [2605] \"SAMN16484111\" \"SAMN16484146\" \"SAMN16484145\" \"SAMN16484144\" #> [2609] \"SAMN16484143\" \"SAMN16484142\" \"SAMN16484141\" \"SAMN16484140\" #> [2613] \"SAMN16484139\" \"SAMN16484138\" \"SAMN16484137\" \"SAMN16484110\" #> [2617] \"SAMN16484136\" \"SAMN16484135\" \"SAMN16484134\" \"SAMN16484133\" #> [2621] \"SAMN16484132\" \"SAMN16484131\" \"SAMN16484130\" \"SAMN16484129\" #> [2625] \"SAMN16484128\" \"SAMN16484127\" \"SAMN16484109\" \"SAMN16484126\" #> [2629] \"SAMN16484125\" \"SAMN16484124\" \"SAMN16484123\" \"SAMN16484122\" #> [2633] \"SAMN16484121\" \"SAMN16484120\" \"SAMN16484119\" \"SAMN16484116\" #> [2637] \"SAMN16484115\" \"SAMN16484114\" \"SAMN16484113\" \"SAMN16484112\" #> [2641] \"SAMN16484154\" \"SAMN16484153\" \"SAMN16484152\" \"SAMN16484151\" #> [2645] \"SAMN16484150\" \"SAMN16484149\" \"SAMN16484148\" \"SAMN16484118\" #> [2649] \"SAMN16484117\" \"SAMN16484108\" \"SAMN16484107\" \"SAMN18106116\" #> [2653] \"SAMN10221118\" \"SAMN18527829\" \"SAMN18988760\" \"SAMN18988759\" #> [2657] \"SAMN18988758\" \"SAMN19233567\" \"SAMN19233566\" \"SAMN22785518\" #> [2661] \"SAMN22785519\" \"SAMN22785520\" \"SAMN22785521\" \"SAMN22785522\" #> [2665] \"SAMN22785523\" \"SAMN22785524\" \"SAMN22785525\" \"SAMN22785526\" #> [2669] \"SAMN22785483\" \"SAMN22785527\" \"SAMN22785528\" \"SAMN22785529\" #> [2673] \"SAMN22785484\" \"SAMN22785485\" \"SAMN22785486\" \"SAMN22785487\" #> [2677] \"SAMN22785517\" \"SAMN22785482\" \"SAMN22785516\" \"SAMN22785515\" #> [2681] \"SAMN22785514\" \"SAMN22785513\" \"SAMN22785512\" \"SAMN22785511\" #> [2685] \"SAMN22785510\" \"SAMN22785509\" \"SAMN22785508\" \"SAMN22785507\" #> [2689] \"SAMN22785481\" \"SAMN22785506\" \"SAMN22785505\" \"SAMN22785504\" #> [2693] \"SAMN22785503\" \"SAMN22785502\" \"SAMN22785501\" \"SAMN22785500\" #> [2697] \"SAMN22785499\" \"SAMN22785498\" \"SAMN12990641\" \"SAMN22785480\" #> [2701] \"SAMN22785497\" \"SAMN22785496\" \"SAMN22785495\" \"SAMN22785494\" #> [2705] \"SAMN22785493\" \"SAMN22785492\" \"SAMN22785491\" \"SAMN22785490\" #> [2709] \"SAMN22785489\" \"SAMN22785488\" \"SAMN12943542\" \"SAMN22785479\" #> [2713] \"SAMN25037009\" \"SAMN25037006\" \"SAMN25037004\" \"SAMN25037003\" #> [2717] \"SAMN25037010\" \"SAMN25037002\" \"SAMN25037001\" \"SAMN03177674\" #> [2721] \"SAMN03177676\" \"SAMN03177659\" \"SAMN03177675\" \"SAMN03177664\" #> [2725] \"SAMN03177680\" \"SAMN03177681\" \"SAMN03177682\" \"SAMN03177617\" #> [2729] \"SAMN03177616\" \"SAMN03177644\" \"SAMN03177649\" \"SAMN03177689\" #> [2733] \"SAMN03177632\" \"SAMN03177633\" \"SAMN03177686\" \"SAMN03177687\" #> [2737] \"SAMN03177688\" \"SAMN03177662\" \"SAMN03177663\" \"SAMN03177667\" #> [2741] \"SAMN03177668\" \"SAMN03177645\" \"SAMN03177646\" \"SAMN03177637\" #> [2745] \"SAMN03177635\" \"SAMN03177660\" \"SAMN03177661\" \"SAMN03177639\" #> [2749] \"SAMN03177640\" \"SAMN03177690\" \"SAMN03177631\" \"SAMN03177669\" #> [2753] \"SAMN03177670\" \"SAMN03177653\" \"SAMN03177624\" \"SAMN03177625\" #> [2757] \"SAMN03177623\" \"SAMN03177627\" \"SAMN03177628\" \"SAMN03177685\" #> [2761] \"SAMN03177647\" \"SAMN03177648\" \"SAMN03177629\" \"SAMN03177656\" #> [2765] \"SAMN03177657\" \"SAMN03177673\" \"SAMN03177619\" \"SAMN03177671\" #> [2769] \"SAMN03177672\" \"SAMN03177665\" \"SAMN03177621\" \"SAMN03177684\" #> [2773] \"SAMN03177636\" \"SAMN03177638\" \"SAMN03177642\" \"SAMN03177634\" #> [2777] \"SAMN03177643\" \"SAMN03177622\" \"SAMN03177630\" \"SAMN03177650\" #> [2781] \"SAMN03177651\" \"SAMN03177652\" \"SAMN03177655\" \"SAMN03177658\" #> [2785] \"SAMN03177666\" \"SAMN03177677\" \"SAMN03177679\" \"SAMN03177683\" #> [2789] \"SAMN03177654\" \"SAMN03177678\" \"SAMN03177620\" \"SAMN03177618\" #> [2793] \"SAMN03177615\" \"SAMN03177626\" \"SAMN03177641\" \"SAMN03892127\" #> [2797] \"SAMN04022942\" \"SAMN04022943\" \"SAMN04022946\" \"SAMN04339721\" #> [2801] \"SAMN04339722\" \"SAMN04339723\" \"SAMN04339724\" \"SAMN04339725\" #> [2805] \"SAMN04339726\" \"SAMN04339727\" \"SAMN04339716\" \"SAMN04339718\" #> [2809] \"SAMN04339719\" \"SAMN04339720\" \"SAMN04393386\" \"SAMN04393398\" #> [2813] \"SAMN04393388\" \"SAMN04393390\" \"SAMN04393391\" \"SAMN04393394\" #> [2817] \"SAMN04456581\" \"SAMN05194531\" \"SAMN05374478\" \"SAMN05510456\" #> [2821] \"SAMN05510453\" \"SAMN05510454\" \"SAMN05463123\" \"SAMN05774084\" #> [2825] \"SAMN05774085\" \"SAMN05774075\" \"SAMN05774076\" \"SAMN05774077\" #> [2829] \"SAMN05774078\" \"SAMN05774079\" \"SAMN05774080\" \"SAMN05774082\" #> [2833] \"SAMN05806174\" \"SAMN06007770\" \"SAMN06007769\" \"SAMN06007768\" #> [2837] \"SAMN06007773\" \"SAMN06007776\" \"SAMN06007774\" \"SAMN06015662\" #> [2841] \"SAMN06015669\" \"SAMN06015665\" \"SAMN06546419\" \"SAMN06672149\" #> [2845] \"SAMN06680400\" \"SAMN06754732\" \"SAMN07325899\" \"SAMN07325903\" #> [2849] \"SAMN07450847\" \"SAMN07450857\" \"SAMN04393397\" \"SAMN05194390\" #> [2853] \"SAMN04622917\" \"SAMN14384391\" \"SAMN13176246\" \"SAMN13176243\" #> [2857] \"SAMN13176242\" \"SAMN13176257\" \"SAMN13176254\" \"SAMN13176253\" #> [2861] \"SAMN13176252\" \"SAMN13176251\" \"SAMN13176239\" \"SAMN15729771\" #> [2865] \"SAMN15729769\" \"SAMN16551976\" \"SAMN16551973\" \"SAMN19670075\" #> [2869] \"SAMN19670074\" \"SAMN19670073\" \"SAMN19670072\" \"SAMN19670071\" #> [2873] \"SAMN19670070\" \"SAMN19670069\" \"SAMN19670068\" \"SAMN19670067\" #> [2877] \"SAMN19670066\" \"SAMN04022944\" \"SAMN04096283\" \"SAMN04096284\" #> [2881] \"SAMN04096285\" \"SAMN04096286\" \"SAMN04096287\" \"SAMN04096288\" #> [2885] \"SAMN04096289\" \"SAMN04096291\" \"SAMN04096292\" \"SAMN04096278\" #> [2889] \"SAMN04122807\" \"SAMN04122814\" \"SAMN04122815\" \"SAMN04122817\" #> [2893] \"SAMN04122820\" \"SAMN04122822\" \"SAMN04279650\" \"SAMN04279645\" #> [2897] \"SAMN04279646\" \"SAMN04279647\" \"SAMN04122818\" \"SAMN04122819\" #> [2901] \"SAMN04122816\" \"SAMN04122823\" \"SAMN04393395\" \"SAMN04393396\" #> [2905] \"SAMN04456582\" \"SAMN04456584\" \"SAMN04622927\" \"SAMN04622928\" #> [2909] \"SAMN04622919\" \"SAMN04622920\" \"SAMN04622921\" \"SAMN04622922\" #> [2913] \"SAMN04622923\" \"SAMN04622924\" \"SAMN04622925\" \"SAMN04622926\" #> [2917] \"SAMN05178547\" \"SAMN05178548\" \"SAMN05178549\" \"SAMN05194541\" #> [2921] \"SAMN05194542\" \"SAMN05194543\" \"SAMN05194544\" \"SAMN05194537\" #> [2925] \"SAMN05194538\" \"SAMN05194539\" \"SAMN05194540\" \"SAMN05374483\" #> [2929] \"SAMN05374484\" \"SAMN05374486\" \"SAMN05374479\" \"SAMN05374480\" #> [2933] \"SAMN05374481\" \"SAMN05374482\" \"SAMN05806161\" \"SAMN05806162\" #> [2937] \"SAMN05806175\" \"SAMN05806164\" \"SAMN05806165\" \"SAMN05806166\" #> [2941] \"SAMN05806169\" \"SAMN06129824\" \"SAMN06007775\" \"SAMN06015667\" #> [2945] \"SAMN06015666\" \"SAMN06015663\" \"SAMN06015664\" \"SAMN06311519\" #> [2949] \"SAMN06311518\" \"SAMN06311517\" \"SAMN06546420\" \"SAMN06672151\" #> [2953] \"SAMN06680406\" \"SAMN06680404\" \"SAMN06680403\" \"SAMN06680401\" #> [2957] \"SAMN06754738\" \"SAMN06754737\" \"SAMN06754736\" \"SAMN06754733\" #> [2961] \"SAMN06754735\" \"SAMN06754743\" \"SAMN07325894\" \"SAMN07325902\" #> [2965] \"SAMN07325901\" \"SAMN07325904\" \"SAMN07332512\" \"SAMN07332516\" #> [2969] \"SAMN07332519\" \"SAMN07332517\" \"SAMN07332509\" \"SAMN07332520\" #> [2973] \"SAMN07332518\" \"SAMN07410718\" \"SAMN07410708\" \"SAMN07450853\" #> [2977] \"SAMN07450852\" \"SAMN07450850\" \"SAMN07450854\" \"SAMN07450858\" #> [2981] \"SAMN05194389\" \"SAMN13981361\" \"SAMN14384394\" \"SAMN14384393\" #> [2985] \"SAMN14384392\" \"SAMN18106117\" \"SAMN18106115\" \"SAMN18988762\" #> [2989] \"SAMN26305057\" \"SAMN26305158\" \"SAMN26309287\" \"SAMN26308389\" #> [2993] \"SAMN26308512\" \"SAMN26309314\" \"SAMN26304607\" \"SAMN26308352\" #> [2997] \"SAMN26305085\" \"SAMN26304797\" \"SAMN26304768\" \"SAMN26304964\" #> [3001] \"SAMN26309148\" \"SAMN26304673\" \"SAMN26308689\" \"SAMN26304612\" #> [3005] \"SAMN26305082\" \"SAMN26309277\" \"SAMN26305191\" \"SAMN26304973\" #> [3009] \"SAMN26304397\" \"SAMN26308539\" \"SAMN26305073\" \"SAMN26304362\" #> [3013] \"SAMN26304883\" \"SAMN26305215\" \"SAMN26305287\" \"SAMN26304996\" #> [3017] \"SAMN26304321\" \"SAMN26308401\" \"SAMN26308588\" \"SAMN26305145\" #> [3021] \"SAMN26304392\" \"SAMN26304337\" \"SAMN26305301\" \"SAMN26308897\" #> [3025] \"SAMN26304444\" \"SAMN26309191\" \"SAMN26305068\" \"SAMN26308546\" #> [3029] \"SAMN26304863\" \"SAMN26308355\" \"SAMN26304918\" \"SAMN26305024\" #> [3033] \"SAMN26308509\" \"SAMN26309210\" \"SAMN26309394\" \"SAMN26304517\" #> [3037] \"SAMN26309293\" \"SAMN26309214\" \"SAMN26309143\" \"SAMN26309421\" #> [3041] \"SAMN26304691\" \"SAMN26304868\" \"SAMN26305095\" \"SAMN26305257\" #> [3045] \"SAMN26308592\" \"SAMN26305039\" \"SAMN26308506\" \"SAMN26304884\" #> [3049] \"SAMN26305204\" \"SAMN26308882\" \"SAMN26304470\" \"SAMN26309331\" #> [3053] \"SAMN26304511\" \"SAMN26308639\" \"SAMN26305049\" \"SAMN26304491\" #> [3057] \"SAMN26308463\" \"SAMN26304336\" \"SAMN26305155\" \"SAMN26309274\" #> [3061] \"SAMN26304460\" \"SAMN26305212\" \"SAMN26308613\" \"SAMN26305174\" #> [3065] \"SAMN26309270\" \"SAMN26309397\" \"SAMN26309140\" \"SAMN26304639\" #> [3069] \"SAMN26308977\" \"SAMN26308688\" \"SAMN26304734\" \"SAMN26308693\" #> [3073] \"SAMN26305038\" \"SAMN26309145\" \"SAMN26304742\" \"SAMN26308791\" #> [3077] \"SAMN26305083\" \"SAMN26309340\" \"SAMN26309350\" \"SAMN26304459\" #> [3081] \"SAMN26304875\" \"SAMN26304494\" \"SAMN26304592\" \"SAMN26308368\" #> [3085] \"SAMN26304526\" \"SAMN26304578\" \"SAMN26305180\" \"SAMN26308760\" #> [3089] \"SAMN26304328\" \"SAMN26304582\" \"SAMN26308669\" \"SAMN26308661\" #> [3093] \"SAMN26305192\" \"SAMN26305173\" \"SAMN26308976\" \"SAMN26309055\" #> [3097] \"SAMN26308617\" \"SAMN26304601\" \"SAMN26309428\" \"SAMN26304454\" #> [3101] \"SAMN26308875\" \"SAMN26305156\" \"SAMN26308501\" \"SAMN26304567\" #> [3105] \"SAMN26308725\" \"SAMN26308664\" \"SAMN26304657\" \"SAMN26304531\" #> [3109] \"SAMN26304820\" \"SAMN26304563\" \"SAMN26304899\" \"SAMN26308680\" #> [3113] \"SAMN26308400\" \"SAMN26309176\" \"SAMN26304377\" \"SAMN26309265\" #> [3117] \"SAMN26309076\" \"SAMN26309225\" \"SAMN26309035\" \"SAMN26305013\" #> [3121] \"SAMN26304365\" \"SAMN26304400\" \"SAMN26308520\" \"SAMN26304581\" #> [3125] \"SAMN26305053\" \"SAMN26304737\" \"SAMN26305304\" \"SAMN26308362\" #> [3129] \"SAMN26305087\" \"SAMN26308893\" \"SAMN26308627\" \"SAMN26305067\" #> [3133] \"SAMN26308855\" \"SAMN26304436\" \"SAMN26308427\" \"SAMN26309332\" #> [3137] \"SAMN26309252\" \"SAMN26308996\" \"SAMN26304854\" \"SAMN26308606\" #> [3141] \"SAMN26305154\" \"SAMN26309370\" \"SAMN26305193\" \"SAMN26309127\" #> [3145] \"SAMN26309339\" \"SAMN26309312\" \"SAMN26304579\" \"SAMN26308856\" #> [3149] \"SAMN26309137\" \"SAMN26304344\" \"SAMN26308858\" \"SAMN26308498\" #> [3153] \"SAMN26305113\" \"SAMN26309109\" \"SAMN26304327\" \"SAMN26309194\" #> [3157] \"SAMN26304832\" \"SAMN26304798\" \"SAMN26309125\" \"SAMN26305072\" #> [3161] \"SAMN26305286\" \"SAMN26305303\" \"SAMN26308553\" \"SAMN26309389\" #> [3165] \"SAMN26304780\" \"SAMN26304981\" \"SAMN26309022\" \"SAMN26308746\" #> [3169] \"SAMN26304826\" \"SAMN26305078\" \"SAMN26305244\" \"SAMN26308750\" #> [3173] \"SAMN26308710\" \"SAMN26305088\" \"SAMN26304617\" \"SAMN26304895\" #> [3177] \"SAMN26309064\" \"SAMN26305297\" \"SAMN26308445\" \"SAMN26309172\" #> [3181] \"SAMN26309250\" \"SAMN26308728\" \"SAMN26309070\" \"SAMN26304637\" #> [3185] \"SAMN26308792\" \"SAMN26309363\" \"SAMN26308666\" \"SAMN26308739\" #> [3189] \"SAMN26304653\" \"SAMN26308917\" \"SAMN26308624\" \"SAMN26308961\" #> [3193] \"SAMN26305102\" \"SAMN26308918\" \"SAMN26305144\" \"SAMN26304658\" #> [3197] \"SAMN26305140\" \"SAMN26304954\" \"SAMN26304648\" \"SAMN26308887\" #> [3201] \"SAMN26309245\" \"SAMN26308373\" \"SAMN26304812\" \"SAMN26304984\" #> [3205] \"SAMN26308946\" \"SAMN26304394\" \"SAMN26305081\" \"SAMN26304707\" #> [3209] \"SAMN26304354\" \"SAMN26309087\" \"SAMN26308572\" \"SAMN26309360\" #> [3213] \"SAMN26304896\" \"SAMN26308532\" \"SAMN26309099\" \"SAMN26304701\" #> [3217] \"SAMN26305063\" \"SAMN26304595\" \"SAMN26309146\" \"SAMN26308578\" #> [3221] \"SAMN26304666\" \"SAMN26309431\" \"SAMN26304856\" \"SAMN26309311\" #> [3225] \"SAMN26308660\" \"SAMN26309083\" \"SAMN26305021\" \"SAMN26304811\" #> [3229] \"SAMN26305110\" \"SAMN26304408\" \"SAMN26309346\" \"SAMN26308547\" #> [3233] \"SAMN26304976\" \"SAMN26304928\" \"SAMN26305279\" \"SAMN26304674\" #> [3237] \"SAMN26309021\" \"SAMN26308844\" \"SAMN26309139\" \"SAMN26305047\" #> [3241] \"SAMN26309334\" \"SAMN26308416\" \"SAMN26309341\" \"SAMN26304870\" #> [3245] \"SAMN26308564\" \"SAMN26309282\" \"SAMN26308720\" \"SAMN26308557\" #> [3249] \"SAMN26304802\" \"SAMN26305090\" \"SAMN26304464\" \"SAMN26308877\" #> [3253] \"SAMN26308417\" \"SAMN26304825\" \"SAMN26305030\" \"SAMN26308593\" #> [3257] \"SAMN26308630\" \"SAMN26309233\" \"SAMN26304816\" \"SAMN26308873\" #> [3261] \"SAMN26308451\" \"SAMN26308636\" \"SAMN26304849\" \"SAMN26308930\" #> [3265] \"SAMN26304487\" \"SAMN26304481\" \"SAMN26305210\" \"SAMN26308770\" #> [3269] \"SAMN26308979\" \"SAMN26304917\" \"SAMN26304765\" \"SAMN26308433\" #> [3273] \"SAMN26304562\" \"SAMN26308706\" \"SAMN26309426\" \"SAMN26309202\" #> [3277] \"SAMN26308476\" \"SAMN26304690\" \"SAMN26308947\" \"SAMN26304516\" #> [3281] \"SAMN26308900\" \"SAMN26308456\" \"SAMN26308902\" \"SAMN26308931\" #> [3285] \"SAMN26308949\" \"SAMN26305213\" \"SAMN26309197\" \"SAMN26308623\" #> [3289] \"SAMN26308719\" \"SAMN26308489\" \"SAMN26309128\" \"SAMN26309105\" #> [3293] \"SAMN26304699\" \"SAMN26309298\" \"SAMN26308411\" \"SAMN26309231\" #> [3297] \"SAMN26308556\" \"SAMN26308364\" \"SAMN26308612\" \"SAMN26309080\" #> [3301] \"SAMN26304744\" \"SAMN26308978\" \"SAMN26304462\" \"SAMN26308625\" #> [3305] \"SAMN26304760\" \"SAMN26305281\" \"SAMN26304604\" \"SAMN26305031\" #> [3309] \"SAMN26304453\" \"SAMN26305256\" \"SAMN26304603\" \"SAMN26308519\" #> [3313] \"SAMN26304483\" \"SAMN26305273\" \"SAMN26308522\" \"SAMN26304646\" #> [3317] \"SAMN26304439\" \"SAMN26304830\" \"SAMN26308726\" \"SAMN26304900\" #> [3321] \"SAMN26305231\" \"SAMN26304419\" \"SAMN26304346\" \"SAMN26308378\" #> [3325] \"SAMN26309414\" \"SAMN26305245\" \"SAMN26309297\" \"SAMN26308648\" #> [3329] \"SAMN26305237\" \"SAMN26304384\" \"SAMN26304427\" \"SAMN26305196\" #> [3333] \"SAMN26304387\" \"SAMN26308825\" \"SAMN26309138\" \"SAMN26308830\" #> [3337] \"SAMN26304865\" \"SAMN26308810\" \"SAMN26308848\" \"SAMN26304752\" #> [3341] \"SAMN26304761\" \"SAMN26304949\" \"SAMN26308714\" \"SAMN26304919\" #> [3345] \"SAMN26309057\" \"SAMN26308514\" \"SAMN26304999\" \"SAMN26309019\" #> [3349] \"SAMN26309392\" \"SAMN26309409\" \"SAMN26305214\" \"SAMN26308926\" #> [3353] \"SAMN26308576\" \"SAMN26309208\" \"SAMN26305177\" \"SAMN26308815\" #> [3357] \"SAMN26308582\" \"SAMN26308667\" \"SAMN26304399\" \"SAMN26304783\" #> [3361] \"SAMN26305117\" \"SAMN26305292\" \"SAMN26304538\" \"SAMN26304774\" #> [3365] \"SAMN26308922\" \"SAMN26308694\" \"SAMN26308786\" \"SAMN26305051\" #> [3369] \"SAMN26304323\" \"SAMN26308823\" \"SAMN26308924\" \"SAMN26304541\" #> [3373] \"SAMN26308749\" \"SAMN26308909\" \"SAMN26309018\" \"SAMN26304756\" #> [3377] \"SAMN26309040\" \"SAMN26308644\" \"SAMN26308454\" \"SAMN26308824\" #> [3381] \"SAMN26308580\" \"SAMN26308832\" \"SAMN26309384\" \"SAMN26304510\" #> [3385] \"SAMN26308816\" \"SAMN26305186\" \"SAMN26305219\" \"SAMN26305166\" #> [3389] \"SAMN26308701\" \"SAMN26304564\" \"SAMN26305220\" \"SAMN26309096\" #> [3393] \"SAMN26309367\" \"SAMN26309234\" \"SAMN26309097\" \"SAMN26308460\" #> [3397] \"SAMN26309044\" \"SAMN26309235\" \"SAMN26308446\" \"SAMN26308860\" #> [3401] \"SAMN26304644\" \"SAMN26308579\" \"SAMN26304438\" \"SAMN26304368\" #> [3405] \"SAMN26308577\" \"SAMN26308646\" \"SAMN26304549\" \"SAMN26308347\" #> [3409] \"SAMN26309271\" \"SAMN26309272\" \"SAMN26308790\" \"SAMN26308573\" #> [3413] \"SAMN26309228\" \"SAMN26304452\" \"SAMN26308831\" \"SAMN26305094\" #> [3417] \"SAMN26308414\" \"SAMN26309229\" \"SAMN26309016\" \"SAMN26304495\" #> [3421] \"SAMN26308923\" \"SAMN26304624\" \"SAMN26308940\" \"SAMN26305044\" #> [3425] \"SAMN26304378\" \"SAMN26304785\" \"SAMN26308822\" \"SAMN26304385\" #> [3429] \"SAMN26309391\" \"SAMN26308415\" \"SAMN26309227\" \"SAMN26308677\" #> [3433] \"SAMN26304606\" \"SAMN26304435\" \"SAMN26305069\" \"SAMN26304638\" #> [3437] \"SAMN26304914\" \"SAMN26308397\" \"SAMN26309296\" \"SAMN26308821\" #> [3441] \"SAMN26304775\" \"SAMN26309041\" \"SAMN26308682\" \"SAMN26308538\" #> [3445] \"SAMN26309301\" \"SAMN26304545\" \"SAMN26308413\" \"SAMN26305128\" #> [3449] \"SAMN26308748\" \"SAMN26308479\" \"SAMN26304566\" \"SAMN26304864\" #> [3453] \"SAMN26304671\" \"SAMN26304827\" \"SAMN26304552\" \"SAMN26308533\" #> [3457] \"SAMN26309173\" \"SAMN26308835\" \"SAMN26309230\" \"SAMN26308989\" #> [3461] \"SAMN26304472\" \"SAMN26305006\" \"SAMN26304404\" \"SAMN26309273\" #> [3465] \"SAMN26304716\" \"SAMN26304810\" \"SAMN26308718\" \"SAMN26304527\" #> [3469] \"SAMN26305103\" \"SAMN26309122\" \"SAMN26309383\" \"SAMN26309393\" #> [3473] \"SAMN26309410\" \"SAMN26308651\" \"SAMN26304764\" \"SAMN26308367\" #> [3477] \"SAMN26309204\" \"SAMN26309368\" \"SAMN26308548\" \"SAMN26308550\" #> [3481] \"SAMN26304805\" \"SAMN26308478\" \"SAMN26304931\" \"SAMN26304542\" #> [3485] \"SAMN26308511\" \"SAMN26305181\" \"SAMN26304391\" \"SAMN26308834\" #> [3489] \"SAMN26308571\" \"SAMN26305079\" \"SAMN26304651\" \"SAMN26308477\" #> [3493] \"SAMN26308818\" \"SAMN26309365\" \"SAMN26304770\" \"SAMN26309072\" #> [3497] \"SAMN26308602\" \"SAMN26309196\" \"SAMN26305229\" \"SAMN26308783\" #> [3501] \"SAMN26304412\" \"SAMN26305222\" \"SAMN26309039\" \"SAMN26308629\" #> [3505] \"SAMN26304461\" \"SAMN26305171\" \"SAMN26305005\" \"SAMN26304358\" #> [3509] \"SAMN26304923\" \"SAMN26304822\" \"SAMN26308436\" \"SAMN26308756\" #> [3513] \"SAMN26308473\" \"SAMN26304349\" \"SAMN26305115\" \"SAMN26305265\" #> [3517] \"SAMN26309100\" \"SAMN26304558\" \"SAMN26305048\" \"SAMN26309315\" #> [3521] \"SAMN26305040\" \"SAMN26304482\" \"SAMN26304484\" \"SAMN26304662\" #> [3525] \"SAMN26305157\" \"SAMN26308457\" \"SAMN26304993\" \"SAMN26309123\" #> [3529] \"SAMN26308942\" \"SAMN26308994\" \"SAMN26304356\" \"SAMN26305197\" #> [3533] \"SAMN26304533\" \"SAMN26304372\" \"SAMN26304732\" \"SAMN26308695\" #> [3537] \"SAMN26308376\" \"SAMN26308808\" \"SAMN26304468\" \"SAMN26304649\" #> [3541] \"SAMN26308587\" \"SAMN26308412\" \"SAMN26308828\" \"SAMN26309387\" #> [3545] \"SAMN26305164\" \"SAMN26305036\" \"SAMN26308681\" \"SAMN26309420\" #> [3549] \"SAMN26304605\" \"SAMN26309327\" \"SAMN26309026\" \"SAMN26308405\" #> [3553] \"SAMN26309028\" \"SAMN26308361\" \"SAMN26305017\" \"SAMN26304446\" #> [3557] \"SAMN26308998\" \"SAMN26304995\" \"SAMN26304609\" \"SAMN26304625\" #> [3561] \"SAMN26309418\" \"SAMN26308933\" \"SAMN26308599\" \"SAMN26304817\" #> [3565] \"SAMN26304733\" \"SAMN26309078\" \"SAMN26305271\" \"SAMN26309348\" #> [3569] \"SAMN26309378\" \"SAMN26304616\" \"SAMN26309307\" \"SAMN26304838\" #> [3573] \"SAMN26309322\" \"SAMN26308349\" \"SAMN26308418\" \"SAMN26304823\" #> [3577] \"SAMN26305029\" \"SAMN26304859\" \"SAMN26308665\" \"SAMN26309263\" #> [3581] \"SAMN26304943\" \"SAMN26304559\" \"SAMN26304667\" \"SAMN26309155\" #> [3585] \"SAMN26308758\" \"SAMN26305288\" \"SAMN26308372\" \"SAMN26304963\" #> [3589] \"SAMN26304507\" \"SAMN26304669\" \"SAMN26304941\" \"SAMN26304529\" #> [3593] \"SAMN26304726\" \"SAMN26304708\" \"SAMN26308560\" \"SAMN26309106\" #> [3597] \"SAMN26305270\" \"SAMN26304420\" \"SAMN26309279\" \"SAMN26309347\" #> [3601] \"SAMN26308987\" \"SAMN26304886\" \"SAMN26309313\" \"SAMN26308346\" #> [3605] \"SAMN26308555\" \"SAMN26304990\" \"SAMN26308803\" \"SAMN26308907\" #> [3609] \"SAMN26308534\" \"SAMN26305178\" \"SAMN26304643\" \"SAMN26304642\" #> [3613] \"SAMN26309303\" \"SAMN26304591\" \"SAMN26309104\" \"SAMN26308393\" #> [3617] \"SAMN26304631\" \"SAMN26304679\" \"SAMN26308837\" \"SAMN26308914\" #> [3621] \"SAMN26309215\" \"SAMN26308983\" \"SAMN26309027\" \"SAMN26304445\" #> [3625] \"SAMN26304693\" \"SAMN26304725\" \"SAMN26308981\" \"SAMN26304786\" #> [3629] \"SAMN26305150\" \"SAMN26308658\" \"SAMN26309023\" \"SAMN26304682\" #> [3633] \"SAMN26309091\" \"SAMN26304887\" \"SAMN26309258\" \"SAMN26308432\" #> [3637] \"SAMN26308354\" \"SAMN26304414\" \"SAMN26305266\" \"SAMN26304947\" #> [3641] \"SAMN26304519\" \"SAMN26305100\" \"SAMN26309010\" \"SAMN26309056\" #> [3645] \"SAMN26304455\" \"SAMN26305235\" \"SAMN26309336\" \"SAMN26304792\" #> [3649] \"SAMN26304318\" \"SAMN26308561\" \"SAMN26309335\" \"SAMN26308743\" #> [3653] \"SAMN26308525\" \"SAMN26304395\" \"SAMN26308358\" \"SAMN26308590\" #> [3657] \"SAMN26304988\" \"SAMN26308686\" \"SAMN26308406\" \"SAMN26305277\" #> [3661] \"SAMN26309160\" \"SAMN26309098\" \"SAMN26304878\" \"SAMN26305170\" #> [3665] \"SAMN26308679\" \"SAMN26308510\" \"SAMN26308891\" \"SAMN26308558\" #> [3669] \"SAMN26304371\" \"SAMN26304659\" \"SAMN26309144\" \"SAMN26309185\" #> [3673] \"SAMN26308438\" \"SAMN26308628\" \"SAMN26309412\" \"SAMN26304979\" #> [3677] \"SAMN26304839\" \"SAMN26304844\" \"SAMN26304334\" \"SAMN26309065\" #> [3681] \"SAMN26304850\" \"SAMN26304343\" \"SAMN26304872\" \"SAMN26305217\" #> [3685] \"SAMN26308842\" \"SAMN26309283\" \"SAMN26308963\" \"SAMN26309014\" #> [3689] \"SAMN26304501\" \"SAMN26308551\" \"SAMN26308494\" \"SAMN26308685\" #> [3693] \"SAMN26308943\" \"SAMN26304824\" \"SAMN26304520\" \"SAMN26304728\" #> [3697] \"SAMN26308597\" \"SAMN26304396\" \"SAMN26304942\" \"SAMN26309142\" #> [3701] \"SAMN26308721\" \"SAMN26304348\" \"SAMN26304450\" \"SAMN26309318\" #> [3705] \"SAMN26309163\" \"SAMN26309177\" \"SAMN26308453\" \"SAMN26305120\" #> [3709] \"SAMN26305112\" \"SAMN26308516\" \"SAMN26309058\" \"SAMN26304475\" #> [3713] \"SAMN26304333\" \"SAMN26308345\" \"SAMN26308995\" \"SAMN26309379\" #> [3717] \"SAMN26304525\" \"SAMN26308470\" \"SAMN26304962\" \"SAMN26304915\" #> [3721] \"SAMN26308915\" \"SAMN26305071\" \"SAMN26308657\" \"SAMN26305052\" #> [3725] \"SAMN26308793\" \"SAMN26304787\" \"SAMN26309251\" \"SAMN26308959\" #> [3729] \"SAMN26309239\" \"SAMN26304401\" \"SAMN26308490\" \"SAMN26308569\" #> [3733] \"SAMN26308964\" \"SAMN26305008\" \"SAMN26305233\" \"SAMN26304829\" #> [3737] \"SAMN26305041\" \"SAMN26308390\" \"SAMN26308563\" \"SAMN26308452\" #> [3741] \"SAMN26304710\" \"SAMN26304800\" \"SAMN26304640\" \"SAMN26308374\" #> [3745] \"SAMN26308687\" \"SAMN26309085\" \"SAMN26305239\" \"SAMN26304960\" #> [3749] \"SAMN26304628\" \"SAMN26304598\" \"SAMN26304782\" \"SAMN26304502\" #> [3753] \"SAMN26309288\" \"SAMN26308668\" \"SAMN26305091\" \"SAMN26309292\" #> [3757] \"SAMN26308874\" \"SAMN26305011\" \"SAMN26308554\" \"SAMN26304634\" #> [3761] \"SAMN26308838\" \"SAMN26308462\" \"SAMN26309213\" \"SAMN26309157\" #> [3765] \"SAMN26304513\" \"SAMN26308881\" \"SAMN26304958\" \"SAMN26309183\" #> [3769] \"SAMN26304753\" \"SAMN26304906\" \"SAMN26304851\" \"SAMN26308769\" #> [3773] \"SAMN26304970\" \"SAMN26304847\" \"SAMN26305108\" \"SAMN26308997\" #> [3777] \"SAMN26308724\" \"SAMN26308634\" \"SAMN26308839\" \"SAMN26304518\" #> [3781] \"SAMN26309381\" \"SAMN26304630\" \"SAMN26308653\" \"SAMN26304325\" #> [3785] \"SAMN26304641\" \"SAMN26304652\" \"SAMN26308487\" \"SAMN26308475\" #> [3789] \"SAMN26309051\" \"SAMN26309001\" \"SAMN26304967\" \"SAMN26304762\" #> [3793] \"SAMN26309117\" \"SAMN26304593\" \"SAMN26304474\" \"SAMN26305300\" #> [3797] \"SAMN26308968\" \"SAMN26308781\" \"SAMN26304704\" \"SAMN26304416\" #> [3801] \"SAMN26309226\" \"SAMN26309357\" \"SAMN26304801\" \"SAMN26304759\" #> [3805] \"SAMN26309017\" \"SAMN26309257\" \"SAMN26304528\" \"SAMN26308521\" #> [3809] \"SAMN26304437\" \"SAMN26304522\" \"SAMN26304994\" \"SAMN26305224\" #> [3813] \"SAMN26308608\" \"SAMN26309043\" \"SAMN26309224\" \"SAMN26304596\" #> [3817] \"SAMN26308549\" \"SAMN26304431\" \"SAMN26305169\" \"SAMN26308647\" #> [3821] \"SAMN26308544\" \"SAMN26304425\" \"SAMN26308826\" \"SAMN26304813\" #> [3825] \"SAMN26304633\" \"SAMN26308991\" \"SAMN26305230\" \"SAMN26304686\" #> [3829] \"SAMN26309405\" \"SAMN26304330\" \"SAMN26308797\" \"SAMN26304403\" #> [3833] \"SAMN26309333\" \"SAMN26308850\" \"SAMN26304373\" \"SAMN26309223\" #> [3837] \"SAMN26304713\" \"SAMN26308464\" \"SAMN26309399\" \"SAMN26304551\" #> [3841] \"SAMN26309152\" \"SAMN26305274\" \"SAMN26308459\" \"SAMN26304898\" #> [3845] \"SAMN26309118\" \"SAMN26309101\" \"SAMN26305001\" \"SAMN26304747\" #> [3849] \"SAMN26305248\" \"SAMN26304771\" \"SAMN26308970\" \"SAMN26304966\" #> [3853] \"SAMN26309164\" \"SAMN26304449\" \"SAMN26308921\" \"SAMN26304882\" #> [3857] \"SAMN26308609\" \"SAMN26308483\" \"SAMN26305009\" \"SAMN26305032\" #> [3861] \"SAMN26308508\" \"SAMN26304750\" \"SAMN26308526\" \"SAMN26304684\" #> [3865] \"SAMN26304777\" \"SAMN26309108\" \"SAMN26308351\" \"SAMN26304661\" #> [3869] \"SAMN26304779\" \"SAMN26308607\" \"SAMN26304833\" \"SAMN26304695\" #> [3873] \"SAMN26309316\" \"SAMN26308878\" \"SAMN26308507\" \"SAMN26308583\" #> [3877] \"SAMN26308753\" \"SAMN26308595\" \"SAMN26305105\" \"SAMN26308794\" #> [3881] \"SAMN26304350\" \"SAMN26309232\" \"SAMN26309186\" \"SAMN26309416\" #> [3885] \"SAMN26308805\" \"SAMN26308889\" \"SAMN26309002\" \"SAMN26308684\" #> [3889] \"SAMN26305098\" \"SAMN26309126\" \"SAMN26304480\" \"SAMN26308811\" #> [3893] \"SAMN26304933\" \"SAMN26308673\" \"SAMN26304904\" \"SAMN26308586\" #> [3897] \"SAMN26304697\" \"SAMN26304890\" \"SAMN26309150\" \"SAMN26304911\" #> [3901] \"SAMN26308919\" \"SAMN26308731\" \"SAMN26309380\" \"SAMN26304503\" #> [3905] \"SAMN26304743\" \"SAMN26308869\" \"SAMN26308892\" \"SAMN26309081\" #> [3909] \"SAMN26308443\" \"SAMN26309295\" \"SAMN26305183\" \"SAMN26308984\" #> [3913] \"SAMN26309079\" \"SAMN26309289\" \"SAMN26304897\" \"SAMN26308536\" #> [3917] \"SAMN26309275\" \"SAMN26309429\" \"SAMN26304957\" \"SAMN26304894\" #> [3921] \"SAMN26304623\" \"SAMN26304554\" \"SAMN26305124\" \"SAMN26305056\" #> [3925] \"SAMN26308530\" \"SAMN26304573\" \"SAMN26305027\" \"SAMN26308642\" #> [3929] \"SAMN26304857\" \"SAMN26305075\" \"SAMN26304622\" \"SAMN26304488\" #> [3933] \"SAMN26304539\" \"SAMN26308920\" \"SAMN26304675\" \"SAMN26308871\" #> [3937] \"SAMN26309377\" \"SAMN26308956\" \"SAMN26309180\" \"SAMN26304804\" #> [3941] \"SAMN26304407\" \"SAMN26308908\" \"SAMN26309095\" \"SAMN26308395\" #> [3945] \"SAMN26305084\" \"SAMN26304417\" \"SAMN26304681\" \"SAMN26304600\" #> [3949] \"SAMN26308596\" \"SAMN26309325\" \"SAMN26304698\" \"SAMN26304741\" #> [3953] \"SAMN26308654\" \"SAMN26309242\" \"SAMN26304347\" \"SAMN26304831\" #> [3957] \"SAMN26304772\" \"SAMN26305209\" \"SAMN26309015\" \"SAMN26304382\" #> [3961] \"SAMN26305201\" \"SAMN26309110\" \"SAMN26309401\" \"SAMN26309358\" #> [3965] \"SAMN26304821\" \"SAMN26304476\" \"SAMN26304647\" \"SAMN26305023\" #> [3969] \"SAMN26309425\" \"SAMN26309082\" \"SAMN26308643\" \"SAMN26305089\" #> [3973] \"SAMN26308465\" \"SAMN26308458\" \"SAMN26308876\" \"SAMN26305167\" #> [3977] \"SAMN26304793\" \"SAMN26304977\" \"SAMN26308611\" \"SAMN26309049\" #> [3981] \"SAMN26304636\" \"SAMN26304655\" \"SAMN26304405\" \"SAMN26304618\" #> [3985] \"SAMN26305060\" \"SAMN26309209\" \"SAMN26304982\" \"SAMN26308742\" #> [3989] \"SAMN26304442\" \"SAMN26304434\" \"SAMN26309352\" \"SAMN26305283\" #> [3993] \"SAMN26308655\" \"SAMN26304547\" \"SAMN26309395\" \"SAMN26308584\" #> [3997] \"SAMN26309037\" \"SAMN26305026\" \"SAMN26305000\" \"SAMN26309182\" #> [4001] \"SAMN26304796\" \"SAMN26305109\" \"SAMN26309261\" \"SAMN26308700\" #> [4005] \"SAMN26308738\" \"SAMN26304370\" \"SAMN26309007\" \"SAMN26305080\" #> [4009] \"SAMN26305161\" \"SAMN26309398\" \"SAMN26304819\" \"SAMN26308939\" #> [4013] \"SAMN26308468\" \"SAMN26308767\" \"SAMN26308659\" \"SAMN26304479\" #> [4017] \"SAMN26309175\" \"SAMN26305280\" \"SAMN26304687\" \"SAMN26308888\" #> [4021] \"SAMN26308819\" \"SAMN26308448\" \"SAMN26305147\" \"SAMN26304656\" #> [4025] \"SAMN26308861\" \"SAMN26309149\" \"SAMN26304423\" \"SAMN26305258\" #> [4029] \"SAMN26304909\" \"SAMN26304324\" \"SAMN26309356\" \"SAMN26304910\" #> [4033] \"SAMN26308635\" \"SAMN26309349\" \"SAMN26305291\" \"SAMN26304535\" #> [4037] \"SAMN26308426\" \"SAMN26308500\" \"SAMN26304632\" \"SAMN26308513\" #> [4041] \"SAMN26309329\" \"SAMN26309178\" \"SAMN26308535\" \"SAMN26304706\" #> [4045] \"SAMN26308884\" \"SAMN26308771\" \"SAMN26304574\" \"SAMN26305092\" #> [4049] \"SAMN26308370\" \"SAMN26308391\" \"SAMN26308675\" \"SAMN26304406\" #> [4053] \"SAMN26304799\" \"SAMN26308740\" \"SAMN26308717\" \"SAMN26309390\" #> [4057] \"SAMN26304873\" \"SAMN26309372\" \"SAMN26309047\" \"SAMN26308843\" #> [4061] \"SAMN26304745\" \"SAMN26305046\" \"SAMN26309031\" \"SAMN26308449\" #> [4065] \"SAMN26309364\" \"SAMN26308420\" \"SAMN26304891\" \"SAMN26309216\" #> [4069] \"SAMN26305146\" \"SAMN26304367\" \"SAMN26305203\" \"SAMN26304860\" #> [4073] \"SAMN26309304\" \"SAMN26308618\" \"SAMN26304889\" \"SAMN26305264\" #> [4077] \"SAMN26305294\" \"SAMN26304746\" \"SAMN26305134\" \"SAMN26309308\" #> [4081] \"SAMN26308817\" \"SAMN26309338\" \"SAMN26308594\" \"SAMN26308804\" #> [4085] \"SAMN26304451\" \"SAMN26309427\" \"SAMN26305043\" \"SAMN26308562\" #> [4089] \"SAMN26304983\" \"SAMN26304718\" \"SAMN26309355\" \"SAMN26305206\" #> [4093] \"SAMN26308829\" \"SAMN26309153\" \"SAMN26309423\" \"SAMN26308986\" #> [4097] \"SAMN26304834\" \"SAMN26308674\" \"SAMN26308800\" \"SAMN26308527\" #> [4101] \"SAMN26304784\" \"SAMN26309077\" \"SAMN26308779\" \"SAMN26308862\" #> [4105] \"SAMN26308707\" \"SAMN26304560\" \"SAMN26309328\" \"SAMN26308434\" #> [4109] \"SAMN26304523\" \"SAMN26308703\" \"SAMN26304629\" \"SAMN26304540\" #> [4113] \"SAMN26305014\" \"SAMN26304689\" \"SAMN26304411\" \"SAMN26305123\" #> [4117] \"SAMN26309052\" \"SAMN26309354\" \"SAMN26309285\" \"SAMN26304441\" #> [4121] \"SAMN26309038\" \"SAMN26308833\" \"SAMN26309343\" \"SAMN26308866\" #> [4125] \"SAMN26305234\" \"SAMN26308971\" \"SAMN26304778\" \"SAMN26308896\" #> [4129] \"SAMN26304421\" \"SAMN26304767\" \"SAMN26308447\" \"SAMN26304363\" #> [4133] \"SAMN26304791\" \"SAMN26308385\" \"SAMN26309422\" \"SAMN26308515\" #> [4137] \"SAMN26308895\" \"SAMN26309112\" \"SAMN26309129\" \"SAMN26304719\" #> [4141] \"SAMN26309259\" \"SAMN26309400\" \"SAMN26304352\" \"SAMN26304410\" #> [4145] \"SAMN26304788\" \"SAMN26305262\" \"SAMN26305218\" \"SAMN26309168\" #> [4149] \"SAMN26304320\" \"SAMN26308610\" \"SAMN26305165\" \"SAMN26304703\" #> [4153] \"SAMN26309268\" \"SAMN26309302\" \"SAMN26304589\" \"SAMN26304789\" #> [4157] \"SAMN26304376\" \"SAMN26304998\" \"SAMN26308671\" \"SAMN26304757\" #> [4161] \"SAMN26308638\" \"SAMN26304877\" \"SAMN26304722\" \"SAMN26308600\" #> [4165] \"SAMN26309033\" \"SAMN26308932\" \"SAMN26304357\" \"SAMN26308698\" #> [4169] \"SAMN26309359\" \"SAMN26308904\" \"SAMN26308541\" \"SAMN26308715\" #> [4173] \"SAMN26304386\" \"SAMN26305148\" \"SAMN26304546\" \"SAMN26308356\" #> [4177] \"SAMN26308763\" \"SAMN26304680\" \"SAMN26308632\" \"SAMN26304456\" #> [4181] \"SAMN26305202\" \"SAMN26308409\" \"SAMN26309034\" \"SAMN26304660\" #> [4185] \"SAMN26304769\" \"SAMN26305070\" \"SAMN26308398\" \"SAMN26308849\" #> [4189] \"SAMN26304580\" \"SAMN26308375\" \"SAMN26305133\" \"SAMN26304496\" #> [4193] \"SAMN26308650\" \"SAMN26304422\" \"SAMN26305172\" \"SAMN26304717\" #> [4197] \"SAMN26309241\" \"SAMN26304477\" \"SAMN26304986\" \"SAMN26308670\" #> [4201] \"SAMN26308934\" \"SAMN26309222\" \"SAMN26304498\" \"SAMN26305221\" #> [4205] \"SAMN26309133\" \"SAMN26305276\" \"SAMN26308392\" \"SAMN26308812\" #> [4209] \"SAMN26304702\" \"SAMN26304575\" \"SAMN26309219\" \"SAMN26308503\" #> [4213] \"SAMN26309419\" \"SAMN26304809\" \"SAMN26309237\" \"SAMN26308640\" #> [4217] \"SAMN26309116\" \"SAMN26308484\" \"SAMN26309009\" \"SAMN26308672\" #> [4221] \"SAMN26309369\" \"SAMN26309291\" \"SAMN26309220\" \"SAMN26304390\" #> [4225] \"SAMN26304683\" \"SAMN26304329\" \"SAMN26308885\" \"SAMN26304714\" #> [4229] \"SAMN26304663\" \"SAMN26308787\" \"SAMN26309036\" \"SAMN26308396\" #> [4233] \"SAMN26308985\" \"SAMN26308631\" \"SAMN26305275\" \"SAMN26305142\" #> [4237] \"SAMN26308814\" \"SAMN26308505\" \"SAMN26304953\" \"SAMN26305241\" #> [4241] \"SAMN26309249\" \"SAMN26304380\" \"SAMN26309114\" \"SAMN26305111\" #> [4245] \"SAMN26305243\" \"SAMN26308967\" \"SAMN26304351\" \"SAMN26308585\" #> [4249] \"SAMN26309006\" \"SAMN26309337\" \"SAMN26305226\" \"SAMN26304508\" #> [4253] \"SAMN26308676\" \"SAMN26309205\" \"SAMN26304985\" \"SAMN26308910\" #> [4257] \"SAMN26304835\" \"SAMN26308798\" \"SAMN26309218\" \"SAMN26309046\" #> [4261] \"SAMN26308925\" \"SAMN26304678\" \"SAMN26304705\" \"SAMN26308552\" #> [4265] \"SAMN26304841\" \"SAMN26304492\" \"SAMN26309206\" \"SAMN26309111\" #> [4269] \"SAMN26305227\" \"SAMN26304840\" \"SAMN26308903\" \"SAMN26309131\" #> [4273] \"SAMN26308696\" \"SAMN26308474\" \"SAMN26304867\" \"SAMN26308948\" #> [4277] \"SAMN26304766\" \"SAMN26309003\" \"SAMN26309264\" \"SAMN26304936\" #> [4281] \"SAMN26308972\" \"SAMN26308542\" \"SAMN26309165\" \"SAMN26309120\" #> [4285] \"SAMN26304499\" \"SAMN26304489\" \"SAMN26309217\" \"SAMN26309187\" #> [4289] \"SAMN26308652\" \"SAMN26304685\" \"SAMN26308619\" \"SAMN26304739\" #> [4293] \"SAMN26304965\" \"SAMN26305061\" \"SAMN26308360\" \"SAMN26304922\" #> [4297] \"SAMN26304700\" \"SAMN26305034\" \"SAMN26304432\" \"SAMN26305143\" #> [4301] \"SAMN26308784\" \"SAMN26304536\" \"SAMN26309404\" \"SAMN26304790\" #> [4305] \"SAMN26304946\" \"SAMN26309025\" \"SAMN26304374\" \"SAMN26304379\" #> [4309] \"SAMN26304818\" \"SAMN26304677\" \"SAMN26309013\" \"SAMN26305263\" #> [4313] \"SAMN26305247\" \"SAMN26305175\" \"SAMN26308916\" \"SAMN26309374\" #> [4317] \"SAMN26308708\" \"SAMN26309188\" \"SAMN26309386\" \"SAMN26308982\" #> [4321] \"SAMN26308974\" \"SAMN26305299\" \"SAMN26308795\" \"SAMN26304692\" #> [4325] \"SAMN26308502\" \"SAMN26309323\" \"SAMN26308379\" \"SAMN26305130\" #> [4329] \"SAMN26304627\" \"SAMN26304991\" \"SAMN26304672\" \"SAMN26309382\" #> [4333] \"SAMN26304561\" \"SAMN26308466\" \"SAMN26308531\" \"SAMN26309402\" #> [4337] \"SAMN26304855\" \"SAMN26308386\" \"SAMN26304874\" \"SAMN26309361\" #> [4341] \"SAMN26305162\" \"SAMN26309362\" \"SAMN26305015\" \"SAMN26304905\" #> [4345] \"SAMN26305141\" \"SAMN26304433\" \"SAMN26305096\" \"SAMN26308927\" #> [4349] \"SAMN26308357\" \"SAMN26308528\" \"SAMN26308776\" \"SAMN26308482\" #> [4353] \"SAMN26308404\" \"SAMN26309012\" \"SAMN26309294\" \"SAMN26305153\" #> [4357] \"SAMN26304852\" \"SAMN26308854\" \"SAMN26308772\" \"SAMN26309066\" #> [4361] \"SAMN26304626\" \"SAMN26309430\" \"SAMN26309290\" \"SAMN26308565\" #> [4365] \"SAMN26309107\" \"SAMN26309024\" \"SAMN26309407\" \"SAMN26304913\" #> [4369] \"SAMN26309011\" \"SAMN26305272\" \"SAMN26304871\" \"SAMN26304940\" #> [4373] \"SAMN26308442\" \"SAMN26309062\" \"SAMN26305055\" \"SAMN26304880\" #> [4377] \"SAMN26305118\" \"SAMN26308879\" \"SAMN26304426\" \"SAMN26308637\" #> [4381] \"SAMN26308603\" \"SAMN26309088\" \"SAMN26304599\" \"SAMN26304544\" #> [4385] \"SAMN26308863\" \"SAMN26305077\" \"SAMN26308957\" \"SAMN26309373\" #> [4389] \"SAMN26308350\" \"SAMN26308905\" \"SAMN26309319\" \"SAMN26309284\" #> [4393] \"SAMN26309029\" \"SAMN26305042\" \"SAMN26304597\" \"SAMN26309255\" #> [4397] \"SAMN26309342\" \"SAMN26308496\" \"SAMN26309320\" \"SAMN26308435\" #> [4401] \"SAMN26309170\" \"SAMN26308734\" \"SAMN26304862\" \"SAMN26304602\" #> [4405] \"SAMN26305159\" \"SAMN26308759\" \"SAMN26305187\" \"SAMN26308953\" #> [4409] \"SAMN26308491\" \"SAMN26309075\" \"SAMN26304389\" \"SAMN26309199\" #> [4413] \"SAMN26304418\" \"SAMN26308497\" \"SAMN26308467\" \"SAMN26304553\" #> [4417] \"SAMN26308493\" \"SAMN26309102\" \"SAMN26305268\" \"SAMN26308394\" #> [4421] \"SAMN26309200\" \"SAMN26309310\" \"SAMN26308944\" \"SAMN26308697\" #> [4425] \"SAMN26308622\" \"SAMN26308492\" \"SAMN26308898\" \"SAMN26304635\" #> [4429] \"SAMN26304458\" \"SAMN26304512\" \"SAMN26305278\" \"SAMN26304569\" #> [4433] \"SAMN26304514\" \"SAMN26305064\" \"SAMN26304720\" \"SAMN26305182\" #> [4437] \"SAMN26304590\" \"SAMN26309124\" \"SAMN26308537\" \"SAMN26308371\" #> [4441] \"SAMN26304415\" \"SAMN26308382\" \"SAMN26305099\" \"SAMN26304748\" #> [4445] \"SAMN26308691\" \"SAMN26308575\" \"SAMN26309086\" \"SAMN26309406\" #> [4449] \"SAMN26305252\" \"SAMN26304532\" \"SAMN26308747\" \"SAMN26308975\" #> [4453] \"SAMN26308737\" \"SAMN26309371\" \"SAMN26309198\" \"SAMN26308736\" #> [4457] \"SAMN26304326\" \"SAMN26304929\" \"SAMN26305037\" \"SAMN26308690\" #> [4461] \"SAMN26309256\" \"SAMN26304398\" \"SAMN26309326\" \"SAMN26309074\" #> [4465] \"SAMN26308568\" \"SAMN26304888\" \"SAMN26304490\" \"SAMN26305097\" #> [4469] \"SAMN26309094\" \"SAMN26304409\" \"SAMN26304469\" \"SAMN26308935\" #> [4473] \"SAMN26309159\" \"SAMN26309424\" \"SAMN26305251\" \"SAMN26304568\" #> [4477] \"SAMN26309411\" \"SAMN26305195\" \"SAMN26305282\" \"SAMN26308966\" #> [4481] \"SAMN26309330\" \"SAMN26308735\" \"SAMN26309317\" \"SAMN26304471\" #> [4485] \"SAMN26308890\" \"SAMN26305254\" \"SAMN26305232\" \"SAMN26305062\" #> [4489] \"SAMN26305126\" \"SAMN26308729\" \"SAMN26304335\" \"SAMN26304980\" #> [4493] \"SAMN26308543\" \"SAMN26304751\" \"SAMN26304340\" \"SAMN26304332\" #> [4497] \"SAMN26304952\" \"SAMN26305114\" \"SAMN26305267\" \"SAMN26305184\" #> [4501] \"SAMN26305190\" \"SAMN26309090\" \"SAMN26308381\" \"SAMN26304885\" #> [4505] \"SAMN26308951\" \"SAMN26304670\" \"SAMN26308761\" \"SAMN26304749\" #> [4509] \"SAMN26304893\" \"SAMN26304369\" \"SAMN26309067\" \"SAMN26308711\" #> [4513] \"SAMN26304907\" \"SAMN26304345\" \"SAMN26305216\" \"SAMN26304413\" #> [4517] \"SAMN26304364\" \"SAMN26304925\" \"SAMN26305106\" \"SAMN26305208\" #> [4521] \"SAMN26308369\" \"SAMN26305149\" \"SAMN26308444\" \"SAMN26308952\" #> [4525] \"SAMN26308778\" \"SAMN26308388\" \"SAMN26304548\" \"SAMN26308929\" #> [4529] \"SAMN26308899\" \"SAMN26305236\" \"SAMN26308980\" \"SAMN26304921\" #> [4533] \"SAMN26305290\" \"SAMN26309417\" \"SAMN26305261\" \"SAMN26304727\" #> [4537] \"SAMN26304614\" \"SAMN26305151\" \"SAMN26308469\" \"SAMN26304978\" #> [4541] \"SAMN26309388\" \"SAMN26308992\" \"SAMN26308472\" \"SAMN26304537\" #> [4545] \"SAMN26304806\" \"SAMN26304968\" \"SAMN26308523\" \"SAMN26305205\" #> [4549] \"SAMN26309260\" \"SAMN26304515\" \"SAMN26305074\" \"SAMN26304807\" #> [4553] \"SAMN26304955\" \"SAMN26309092\" \"SAMN26304853\" \"SAMN26305253\" #> [4557] \"SAMN26309253\" \"SAMN26309156\" \"SAMN26304861\" \"SAMN26305004\" #> [4561] \"SAMN26305285\" \"SAMN26304969\" \"SAMN26309193\" \"SAMN26309375\" #> [4565] \"SAMN26304738\" \"SAMN26308782\" \"SAMN26309324\" \"SAMN26304837\" #> [4569] \"SAMN26304485\" \"SAMN26305033\" \"SAMN26309254\" \"SAMN26309351\" #> [4573] \"SAMN26308883\" \"SAMN26304776\" \"SAMN26305240\" \"SAMN26308471\" #> [4577] \"SAMN26309240\" \"SAMN26309306\" \"SAMN26308775\" \"SAMN26308615\" #> [4581] \"SAMN26304342\" \"SAMN26304645\" \"SAMN26305135\" \"SAMN26308847\" #> [4585] \"SAMN26304939\" \"SAMN26308755\" \"SAMN26308857\" \"SAMN26304879\" #> [4589] \"SAMN26304688\" \"SAMN26305160\" \"SAMN26304577\" \"SAMN26304754\" #> [4593] \"SAMN26308428\" \"SAMN26305125\" \"SAMN26304355\" \"SAMN26305250\" #> [4597] \"SAMN26304572\" \"SAMN26309415\" \"SAMN26304463\" \"SAMN26308366\" #> [4601] \"SAMN26309174\" \"SAMN26304341\" \"SAMN26308712\" \"SAMN26305152\" #> [4605] \"SAMN26305249\" \"SAMN26308461\" \"SAMN26308913\" \"SAMN26308692\" #> [4609] \"SAMN26308754\" \"SAMN26309061\" \"SAMN26308950\" \"SAMN26309060\" #> [4613] \"SAMN26309376\" \"SAMN26309073\" \"SAMN26308851\" \"SAMN26305260\" #> [4617] \"SAMN26304712\" \"SAMN26308965\" \"SAMN26304926\" \"SAMN26305194\" #> [4621] \"SAMN26305093\" \"SAMN26304506\" \"SAMN26309262\" \"SAMN26308567\" #> [4625] \"SAMN26309158\" \"SAMN26308495\" \"SAMN26309059\" \"SAMN26308744\" #> [4629] \"SAMN26305138\" \"SAMN26304615\" \"SAMN26309084\" \"SAMN26304987\" #> [4633] \"SAMN26309069\" \"SAMN26308745\" \"SAMN26308518\" \"SAMN26305054\" #> [4637] \"SAMN26304576\" \"SAMN26304608\" \"SAMN26309211\" \"SAMN26308766\" #> [4641] \"SAMN26304360\" \"SAMN26304948\" \"SAMN26304974\" \"SAMN26309192\" #> [4645] \"SAMN26304543\" \"SAMN26308626\" \"SAMN26304892\" \"SAMN26309278\" #> [4649] \"SAMN26308723\" \"SAMN26308499\" \"SAMN26308870\" \"SAMN26308768\" #> [4653] \"SAMN26308999\" \"SAMN26308441\" \"SAMN26304740\" \"SAMN26304836\" #> [4657] \"SAMN26309212\" \"SAMN26304723\" \"SAMN26304848\" \"SAMN26304428\" #> [4661] \"SAMN26305255\" \"SAMN26304429\" \"SAMN26309008\" \"SAMN26305121\" #> [4665] \"SAMN26305065\" \"SAMN26309053\" \"SAMN26304938\" \"SAMN26304755\" #> [4669] \"SAMN26304524\" \"SAMN26308589\" \"SAMN26309136\" \"SAMN26308517\" #> [4673] \"SAMN26305139\" \"SAMN26304903\" \"SAMN26308709\" \"SAMN26304869\" #> [4677] \"SAMN26305269\" \"SAMN26304972\" \"SAMN26305059\" \"SAMN26308705\" #> [4681] \"SAMN26305223\" \"SAMN26309236\" \"SAMN26304366\" \"SAMN26308344\" #> [4685] \"SAMN26309135\" \"SAMN26308380\" \"SAMN26305050\" \"SAMN26304486\" #> [4689] \"SAMN26308591\" \"SAMN26305020\" \"SAMN26308954\" \"SAMN26308481\" #> [4693] \"SAMN26304473\" \"SAMN26309189\" \"SAMN26304696\" \"SAMN26309054\" #> [4697] \"SAMN26305022\" \"SAMN26308645\" \"SAMN26309243\" \"SAMN26305228\" #> [4701] \"SAMN26304331\" \"SAMN26308988\" \"SAMN26308774\" \"SAMN26305242\" #> [4705] \"SAMN26305163\" \"SAMN26308990\" \"SAMN26309068\" \"SAMN26304530\" #> [4709] \"SAMN26309238\" \"SAMN26305293\" \"SAMN26309134\" \"SAMN26305129\" #> [4713] \"SAMN26309115\" \"SAMN26308377\" \"SAMN26308621\" \"SAMN26309195\" #> [4717] \"SAMN26304934\" \"SAMN26309299\" \"SAMN26309166\" \"SAMN26309147\" #> [4721] \"SAMN26308570\" \"SAMN26309089\" \"SAMN26304731\" \"SAMN26308886\" #> [4725] \"SAMN26304466\" \"SAMN26308727\" \"SAMN26304497\" \"SAMN26308799\" #> [4729] \"SAMN26305259\" \"SAMN26304457\" \"SAMN26304724\" \"SAMN26304794\" #> [4733] \"SAMN26304945\" \"SAMN26308529\" \"SAMN26305086\" \"SAMN26309385\" #> [4737] \"SAMN26309071\" \"SAMN26309353\" \"SAMN26304586\" \"SAMN26309179\" #> [4741] \"SAMN26308945\" \"SAMN26304935\" \"SAMN26308545\" \"SAMN26308741\" #> [4745] \"SAMN26308906\" \"SAMN26309000\" \"SAMN26309207\" \"SAMN26304916\" #> [4749] \"SAMN26308872\" \"SAMN26308540\" \"SAMN26304393\" \"SAMN26304815\" #> [4753] \"SAMN26304338\" \"SAMN26305289\" \"SAMN26308894\" \"SAMN26309151\" #> [4757] \"SAMN26304440\" \"SAMN26304620\" \"SAMN26309244\" \"SAMN26305058\" #> [4761] \"SAMN26309305\" \"SAMN26304668\" \"SAMN26305003\" \"SAMN26308722\" #> [4765] \"SAMN26308936\" \"SAMN26308604\" \"SAMN26304956\" \"SAMN26304676\" #> [4769] \"SAMN26304465\" \"SAMN26308938\" \"SAMN26304950\" \"SAMN26308663\" #> [4773] \"SAMN26308937\" \"SAMN26304808\" \"SAMN26308485\" \"SAMN26305107\" #> [4777] \"SAMN26309280\" \"SAMN26304619\" \"SAMN26308348\" \"SAMN26308765\" #> [4781] \"SAMN26309171\" \"SAMN26309281\" \"SAMN26308901\" \"SAMN26304565\" #> [4785] \"SAMN26304447\" \"SAMN26308846\" \"SAMN26308559\" \"SAMN26305295\" #> [4789] \"SAMN26308827\" \"SAMN26304773\" \"SAMN26308845\" \"SAMN26309004\" #> [4793] \"SAMN26308864\" \"SAMN26305002\" \"SAMN26305076\" \"SAMN26305238\" #> [4797] \"SAMN26305018\" \"SAMN26308383\" \"SAMN26304912\" \"SAMN26304339\" #> [4801] \"SAMN26308780\" \"SAMN26308955\" \"SAMN26304448\" \"SAMN26308732\" #> [4805] \"SAMN26308841\" \"SAMN26304721\" \"SAMN26305104\" \"SAMN26309141\" #> [4809] \"SAMN26304795\" \"SAMN26308880\" \"SAMN26308614\" \"SAMN26304961\" #> [4813] \"SAMN26305132\" \"SAMN26309190\" \"SAMN26304664\" \"SAMN26309246\" #> [4817] \"SAMN26308566\" \"SAMN26304587\" \"SAMN26308605\" \"SAMN26304467\" #> [4821] \"SAMN26305007\" \"SAMN26308649\" \"SAMN26308365\" \"SAMN26308601\" #> [4825] \"SAMN26304381\" \"SAMN26309403\" \"SAMN26305296\" \"SAMN26304866\" #> [4829] \"SAMN26304505\" \"SAMN26304534\" \"SAMN26304383\" \"SAMN26304758\" #> [4833] \"SAMN26305066\" \"SAMN26308751\" \"SAMN26304729\" \"SAMN26308440\" #> [4837] \"SAMN26304319\" \"SAMN26308363\" \"SAMN26308678\" \"SAMN26308796\" #> [4841] \"SAMN26308809\" \"SAMN26309050\" \"SAMN26304361\" \"SAMN26304845\" #> [4845] \"SAMN26305137\" \"SAMN26308480\" \"SAMN26305016\" \"SAMN26304992\" #> [4849] \"SAMN26308859\" \"SAMN26308852\" \"SAMN26308455\" \"SAMN26304932\" #> [4853] \"SAMN26304654\" \"SAMN26304359\" \"SAMN26308641\" \"SAMN26309154\" #> [4857] \"SAMN26304975\" \"SAMN26305127\" \"SAMN26308581\" \"SAMN26309063\" #> [4861] \"SAMN26308504\" \"SAMN26304709\" \"SAMN26309203\" \"SAMN26309130\" #> [4865] \"SAMN26304881\" \"SAMN26309248\" \"SAMN26309247\" \"SAMN26308524\" #> [4869] \"SAMN26304611\" \"SAMN26305019\" \"SAMN26308757\" \"SAMN26304621\" #> [4873] \"SAMN26308662\" \"SAMN26304814\" \"SAMN26309366\" \"SAMN26304711\" #> [4877] \"SAMN26308773\" \"SAMN26308704\" \"SAMN26309161\" \"SAMN26308702\" #> [4881] \"SAMN26308962\" \"SAMN26304353\" \"SAMN26305200\" \"SAMN26304665\" #> [4885] \"SAMN26304521\" \"SAMN26305298\" \"SAMN26304424\" \"SAMN26308488\" #> [4889] \"SAMN26309300\" \"SAMN26308424\" \"SAMN26304937\" \"SAMN26308656\" #> [4893] \"SAMN26304924\" \"SAMN26308969\" \"SAMN26304570\" \"SAMN26304736\" #> [4897] \"SAMN26308785\" \"SAMN26308853\" \"SAMN26308730\" \"SAMN26304997\" #> [4901] \"SAMN26308425\" \"SAMN26309269\" \"SAMN26304735\" \"SAMN26309309\" #> [4905] \"SAMN26304951\" \"SAMN26308353\" \"SAMN26304402\" \"SAMN26308868\" #> [4909] \"SAMN26304694\" \"SAMN26304443\" \"SAMN26308429\" \"SAMN26308865\" #> [4913] \"SAMN26304571\" \"SAMN26305010\" \"SAMN26304902\" \"SAMN26304927\" #> [4917] \"SAMN26304843\" \"SAMN26304715\" \"SAMN26305035\" \"SAMN26304650\" #> [4921] \"SAMN26304594\" \"SAMN26304971\" \"SAMN26308993\" \"SAMN26308807\" #> [4925] \"SAMN26305246\" \"SAMN26308431\" \"SAMN26309030\" \"SAMN26309132\" #> [4929] \"SAMN26309103\" \"SAMN26308620\" \"SAMN26308867\" \"SAMN26304846\" #> [4933] \"SAMN26308402\" \"SAMN26308598\" \"SAMN26304583\" \"SAMN26304584\" #> [4937] \"SAMN26304430\" \"SAMN26308752\" \"SAMN26309042\" \"SAMN26309184\" #> [4941] \"SAMN26305199\" \"SAMN26304989\" \"SAMN26304509\" \"SAMN26308683\" #> [4945] \"SAMN26309121\" \"SAMN26308633\" \"SAMN26305131\" \"SAMN26308574\" #> [4949] \"SAMN26308958\" \"SAMN26304876\" \"SAMN26308359\" \"SAMN26305302\" #> [4953] \"SAMN26304555\" \"SAMN26308486\" \"SAMN26305188\" \"SAMN26305116\" #> [4957] \"SAMN26309413\" \"SAMN26304556\" \"SAMN26304901\" \"SAMN26308399\" #> [4961] \"SAMN26308419\" \"SAMN26309408\" \"SAMN26304908\" \"SAMN26304920\" #> [4965] \"SAMN26305025\" \"SAMN26304828\" \"SAMN26308960\" \"SAMN26309432\" #> [4969] \"SAMN26305189\" \"SAMN26305176\" \"SAMN26308801\" \"SAMN26308699\" #> [4973] \"SAMN26305225\" \"SAMN26309221\" \"SAMN26308806\" \"SAMN26305119\" #> [4977] \"SAMN26305168\" \"SAMN26304388\" \"SAMN26304585\" \"SAMN26308713\" #> [4981] \"SAMN26308408\" \"SAMN26308764\" \"SAMN26308716\" \"SAMN26308439\" #> [4985] \"SAMN26304610\" \"SAMN26304803\" \"SAMN26304493\" \"SAMN26309181\" #> [4989] \"SAMN26304322\" \"SAMN26304959\" \"SAMN26305028\" \"SAMN26304858\" #> [4993] \"SAMN26309032\" \"SAMN26308941\" \"SAMN26305211\" \"SAMN26309266\" #> [4997] \"SAMN26305179\" \"SAMN26309113\" \"SAMN26308422\" \"SAMN26304763\" #> [5001] \"SAMN26308387\" \"SAMN26308928\" \"SAMN26309119\" \"SAMN26305012\" #> [5005] \"SAMN26304930\" \"SAMN26308437\" \"SAMN26309286\" \"SAMN26308450\" #> [5009] \"SAMN26304781\" \"SAMN26308840\" \"SAMN26308911\" \"SAMN26308813\" #> [5013] \"SAMN26309093\" \"SAMN26305185\" \"SAMN26308407\" \"SAMN26304944\" #> [5017] \"SAMN26309276\" \"SAMN26308421\" \"SAMN26309045\" \"SAMN26309048\" #> [5021] \"SAMN26309005\" \"SAMN26305284\" \"SAMN26305122\" \"SAMN26305198\" #> [5025] \"SAMN26308403\" \"SAMN26305101\" \"SAMN26308912\" \"SAMN26304478\" #> [5029] \"SAMN26308430\" \"SAMN26305136\" \"SAMN26304375\" \"SAMN26309020\" #> [5033] \"SAMN26308423\" \"SAMN26309321\" \"SAMN26304730\" \"SAMN26309433\" #> [5037] \"SAMN26308836\" \"SAMN26309162\" \"SAMN26308820\" \"SAMN26308777\" #> [5041] \"SAMN26305207\" \"SAMN26308789\" \"SAMN26309167\" \"SAMN26308733\" #> [5045] \"SAMN26309396\" \"SAMN26305045\" \"SAMN26304500\" \"SAMN26304842\" #> [5049] \"SAMN26308616\" \"SAMN26308973\" \"SAMN26309267\" \"SAMN26304613\" #> [5053] \"SAMN32680975\" \"SAMN14384395\" \"SAMN15729772\" \"SAMN16551975\" #> [5057] \"SAMN04014955\" \"SAMN08596255\" \"SAMN09287158\" \"SAMN09689835\" #> [5061] \"SAMN09729031\" \"SAMN09729004\" \"SAMN09839641\" \"SAMN10416394\" #> [5065] \"SAMN10416400\" \"SAMN10416382\" \"SAMN10416381\" \"SAMN10416384\" #> [5069] \"SAMN11102867\" \"SAMN11102865\" \"SAMN11102864\" \"SAMN11102862\" #> [5073] \"SAMN12056334\" \"SAMN12056336\" \"SAMN12056348\" \"SAMN11230749\" #> [5077] \"SAMN13178685\" \"SAMN13178726\" \"SAMN13178717\" \"SAMN13178753\" #> [5081] \"SAMN13178751\" \"SAMN13898773\" \"SAMN13898776\" \"SAMN13898771\" #> [5085] \"SAMN13898695\" \"SAMN13920469\" \"SAMN13981360\" \"SAMN13981359\" #> [5089] \"SAMN13981358\" \"SAMN13981357\" \"SAMN14125658\" \"SAMN14486712\" #> [5093] \"SAMN14544543\" \"SAMN14544565\" \"SAMN14544544\" \"SAMN19670127\" #> [5097] \"SAMN19670126\" \"SAMN19670125\" \"SAMN19670124\" \"SAMN19670123\" #> [5101] \"SAMN19670122\" \"SAMN19670121\" \"SAMN19670120\" \"SAMN19670119\" #> [5105] \"SAMN19670118\" \"SAMN19670117\" \"SAMN19670116\" \"SAMN19670115\" #> [5109] \"SAMN19670114\" \"SAMN19670113\" \"SAMN19670112\" \"SAMN19670111\" #> [5113] \"SAMN19670110\" \"SAMN19670109\" \"SAMN19670108\" \"SAMN19670107\" #> [5117] \"SAMN19670106\" \"SAMN19670105\" \"SAMN19670104\" \"SAMN19670103\" #> [5121] \"SAMN19670102\" \"SAMN19670101\" \"SAMN19670100\" \"SAMN19670099\" #> [5125] \"SAMN19670097\" \"SAMN19670096\" \"SAMN19670095\" \"SAMN19670094\" #> [5129] \"SAMN19670093\" \"SAMN19670092\" \"SAMN19670091\" \"SAMN19670090\" #> [5133] \"SAMN19670089\" \"SAMN19670088\" \"SAMN19670087\" \"SAMN19670086\" #> [5137] \"SAMN19670085\" \"SAMN19670084\" \"SAMN19670083\" \"SAMN19670082\" #> [5141] \"SAMN19670081\" \"SAMN19670080\" \"SAMN19670079\" \"SAMN19670078\" #> [5145] \"SAMN19670077\" \"SAMN19670076\" \"SAMN12056373\" \"SAMN04014925\" #> [5149] \"SAMN04014861\" \"SAMN04014842\" \"SAMN04014889\" \"SAMN04014959\" #> [5153] \"SAMN04014902\" \"SAMN04014910\" \"SAMN04014945\" \"SAMN04014990\" #> [5157] \"SAMN04014960\" \"SAMN04015003\" \"SAMN04014899\" \"SAMN04014992\" #> [5161] \"SAMN04014969\" \"SAMN04014991\" \"SAMN04014978\" \"SAMN04014896\" #> [5165] \"SAMN04014847\" \"SAMN04014855\" \"SAMN04014856\" \"SAMN04014852\" #> [5169] \"SAMN04014860\" \"SAMN04014858\" \"SAMN08397428\" \"SAMN04014918\" #> [5173] \"SAMN04014922\" \"SAMN07291530\" \"SAMN07291528\" \"SAMN07291529\" #> [5177] \"SAMN07291527\" \"SAMN04014926\" \"SAMN07291545\" \"SAMN07291544\" #> [5181] \"SAMN07291543\" \"SAMN07291526\" \"SAMN09703864\" \"SAMN09729015\" #> [5185] \"SAMN04014927\" \"SAMN04014854\" \"SAMN04014908\" \"SAMN04014930\" #> [5189] \"SAMN10396957\" \"SAMN11022092\" \"SAMN11022081\" \"SAMN11022120\" #> [5193] \"SAMN11022122\" \"SAMN11022126\" \"SAMN11842174\" \"SAMN11842189\" #> [5197] \"SAMN11842192\" \"SAMN12056306\" \"SAMN12286701\" \"SAMN12722928\" #> [5201] \"SAMN12722936\" \"SAMN12722946\" \"SAMN12723018\" \"SAMN12723019\" #> [5205] \"SAMN13049595\" \"SAMN13898628\" \"SAMN13898665\" \"SAMN13898672\" #> [5209] \"SAMN13898636\" \"SAMN13898659\" \"SAMN11953799\" \"SAMN11953912\" #> [5213] \"SAMN11953913\" \"SAMN11953914\" \"SAMN11953915\" \"SAMN11953916\" #> [5217] \"SAMN11953917\" \"SAMN11953918\" \"SAMN11953932\" \"SAMN11953936\" #> [5221] \"SAMN11953911\" \"SAMN17843409\" \"SAMN34111348\" \"SAMN05170063\" #> [5225] \"SAMN05170069\" \"SAMN05170071\" \"SAMN05170085\" \"SAMN05170086\" #> [5229] \"SAMN05170087\" \"SAMN05170113\" \"SAMN05170120\" \"SAMN05170126\" #> [5233] \"SAMN05170127\" \"SAMN05170132\" \"SAMN05170142\" \"SAMN05170159\" #> [5237] \"SAMN05170177\" \"SAMN05170183\" \"SAMN05170184\" \"SAMN05170190\" #> [5241] \"SAMN05170198\" \"SAMN05170210\" \"SAMN05170212\" \"SAMN05170213\" #> [5245] \"SAMN05170215\" \"SAMN05170220\" \"SAMN05170223\" \"SAMN05170224\" #> [5249] \"SAMN05170225\" \"SAMN05170227\" \"SAMN05170228\" \"SAMN05170229\" #> [5253] \"SAMN05170250\" \"SAMN05170257\" \"SAMN05170259\" \"SAMN05170260\" #> [5257] \"SAMN05170261\" \"SAMN05170262\" \"SAMN05170312\" \"SAMN05170318\" #> [5261] \"SAMN05170319\" \"SAMN05170323\" \"SAMN05170327\" \"SAMN05170336\" #> [5265] \"SAMN05170337\" \"SAMN05170348\" \"SAMN05170349\" \"SAMN05170351\" #> [5269] \"SAMN05170353\" \"SAMN05170354\" \"SAMN05170356\" \"SAMN07229836\" #> [5273] \"SAMN07229837\" \"SAMN07410534\" \"SAMN07410535\" \"SAMN07709810\" #> [5277] \"SAMN07747812\" \"SAMN07747820\" \"SAMN07747811\" \"SAMN07767094\" #> [5281] \"SAMN07709879\" \"SAMN07709875\" \"SAMN07709822\" \"SAMN07989025\" #> [5285] \"SAMN07989015\" \"SAMN08518915\" \"SAMN08397422\" \"SAMN08518910\" #> [5289] \"SAMN08397420\" \"SAMN07291512\" \"SAMN07291515\" \"SAMN07291517\" #> [5293] \"SAMN07291514\" \"SAMN07291513\" \"SAMN08596249\" \"SAMN08615701\" #> [5297] \"SAMN08615702\" \"SAMN08615704\" \"SAMN08963947\" \"SAMN08963939\" #> [5301] \"SAMN09287184\" \"SAMN08971981\" \"SAMN08971987\" \"SAMN08971990\" #> [5305] \"SAMN08971997\" \"SAMN09630331\" \"SAMN09630371\" \"SAMN09689851\" #> [5309] \"SAMN09689822\" \"SAMN09728997\" \"SAMN09728991\" \"SAMN09728995\" #> [5313] \"SAMN09728994\" \"SAMN07291521\" \"SAMN09951534\" \"SAMN09951533\" #> [5317] \"SAMN09951537\" \"SAMN09951536\" \"SAMN09951497\" \"SAMN09953974\" #> [5321] \"SAMN09953973\" \"SAMN09953976\" \"SAMN09953928\" \"SAMN09953966\" #> [5325] \"SAMN09953904\" \"SAMN09953967\" \"SAMN09953972\" \"SAMN09953905\" #> [5329] \"SAMN10078342\" \"SAMN10078343\" \"SAMN10235311\" \"SAMN10235313\" #> [5333] \"SAMN10235314\" \"SAMN10079295\" \"SAMN10246220\" \"SAMN10079292\" #> [5337] \"SAMN10079282\" \"SAMN10246200\" \"SAMN10283404\" \"SAMN10283416\" #> [5341] \"SAMN09772651\" \"SAMN10396956\" \"SAMN10396968\" \"SAMN10396954\" #> [5345] \"SAMN10396969\" \"SAMN10396962\" \"SAMN10396955\" \"SAMN10396965\" #> [5349] \"SAMN10078980\" \"SAMN10078942\" \"SAMN10416747\" \"SAMN10442532\" #> [5353] \"SAMN10442542\" \"SAMN10442523\" \"SAMN10442545\" \"SAMN10442553\" #> [5357] \"SAMN10442528\" \"SAMN10393224\" \"SAMN10393233\" \"SAMN10393152\" #> [5361] \"SAMN10393204\" \"SAMN10393213\" \"SAMN10393212\" \"SAMN10393205\" #> [5365] \"SAMN10393237\" \"SAMN10393227\" \"SAMN10393232\" \"SAMN10393210\" #> [5369] \"SAMN10393200\" \"SAMN10478629\" \"SAMN10478627\" \"SAMN10478631\" #> [5373] \"SAMN10620985\" \"SAMN10620986\" \"SAMN10620987\" \"SAMN10620981\" #> [5377] \"SAMN10620984\" \"SAMN10686134\" \"SAMN10686133\" \"SAMN10686132\" #> [5381] \"SAMN10686083\" \"SAMN10686125\" \"SAMN10751888\" \"SAMN10751934\" #> [5385] \"SAMN10393175\" \"SAMN10393223\" \"SAMN10393181\" \"SAMN10393169\" #> [5389] \"SAMN10393231\" \"SAMN10751940\" \"SAMN10751944\" \"SAMN10883178\" #> [5393] \"SAMN10883179\" \"SAMN10883176\" \"SAMN10883181\" \"SAMN10883180\" #> [5397] \"SAMN10883272\" \"SAMN10883267\" \"SAMN10478623\" \"SAMN11022087\" #> [5401] \"SAMN11022118\" \"SAMN11022117\" \"SAMN11127360\" \"SAMN11127355\" #> [5405] \"SAMN11127466\" \"SAMN11127476\" \"SAMN11127479\" \"SAMN11127475\" #> [5409] \"SAMN11127468\" \"SAMN11127483\" \"SAMN11127473\" \"SAMN11127467\" #> [5413] \"SAMN11127474\" \"SAMN11127469\" \"SAMN11127470\" \"SAMN11127471\" #> [5417] \"SAMN11127359\" \"SAMN11127472\" \"SAMN11127498\" \"SAMN11127495\" #> [5421] \"SAMN11102868\" \"SAMN11249683\" \"SAMN11249684\" \"SAMN11249686\" #> [5425] \"SAMN11249687\" \"SAMN11249685\" \"SAMN11288807\" \"SAMN11288811\" #> [5429] \"SAMN11288805\" \"SAMN11288804\" \"SAMN11288827\" \"SAMN11352641\" #> [5433] \"SAMN11352643\" \"SAMN11352648\" \"SAMN11357777\" \"SAMN11358501\" #> [5437] \"SAMN11371660\" \"SAMN11371666\" \"SAMN11371670\" \"SAMN11371671\" #> [5441] \"SAMN11371682\" \"SAMN11371681\" \"SAMN11461884\" \"SAMN11461887\" #> [5445] \"SAMN11461896\" \"SAMN11461895\" \"SAMN11461910\" \"SAMN11581017\" #> [5449] \"SAMN11581035\" \"SAMN11581029\" \"SAMN11581027\" \"SAMN11581064\" #> [5453] \"SAMN11581105\" \"SAMN11581143\" \"SAMN11581145\" \"SAMN11604263\" #> [5457] \"SAMN11604723\" \"SAMN11604733\" \"SAMN11604763\" \"SAMN11604757\" #> [5461] \"SAMN11604759\" \"SAMN11604887\" \"SAMN11604836\" \"SAMN11604751\" #> [5465] \"SAMN11604747\" \"SAMN11604752\" \"SAMN11636350\" \"SAMN11636368\" #> [5469] \"SAMN11842188\" \"SAMN11842226\" \"SAMN11842196\" \"SAMN11954893\" #> [5473] \"SAMN11954915\" \"SAMN11954851\" \"SAMN11954882\" \"SAMN12056296\" #> [5477] \"SAMN12056314\" \"SAMN12056325\" \"SAMN12056323\" \"SAMN12056321\" #> [5481] \"SAMN12056344\" \"SAMN12056363\" \"SAMN12056304\" \"SAMN12174733\" #> [5485] \"SAMN12175268\" \"SAMN12175410\" \"SAMN12175436\" \"SAMN12175445\" #> [5489] \"SAMN12261709\" \"SAMN12286706\" \"SAMN12286865\" \"SAMN12286867\" #> [5493] \"SAMN12497059\" \"SAMN12601400\" \"SAMN12603128\" \"SAMN12603150\" #> [5497] \"SAMN12602753\" \"SAMN12601672\" \"SAMN12601678\" \"SAMN12601506\" #> [5501] \"SAMN12601480\" \"SAMN12601499\" \"SAMN12715618\" \"SAMN12715615\" #> [5505] \"SAMN12716009\" \"SAMN12716010\" \"SAMN12716813\" \"SAMN12722856\" #> [5509] \"SAMN12722857\" \"SAMN12722894\" \"SAMN12722910\" \"SAMN12722905\" #> [5513] \"SAMN12722908\" \"SAMN12723012\" \"SAMN12723017\" \"SAMN12722914\" #> [5517] \"SAMN12987056\" \"SAMN12987221\" \"SAMN13012206\" \"SAMN13012205\" #> [5521] \"SAMN13012234\" \"SAMN13012226\" \"SAMN13012229\" \"SAMN13012276\" #> [5525] \"SAMN13012315\" \"SAMN13012291\" \"SAMN13012308\" \"SAMN13012293\" #> [5529] \"SAMN13012292\" \"SAMN13012323\" \"SAMN13012322\" \"SAMN13012328\" #> [5533] \"SAMN13012380\" \"SAMN13012377\" \"SAMN13012231\" \"SAMN13012430\" #> [5537] \"SAMN13012473\" \"SAMN13012543\" \"SAMN13012485\" \"SAMN13012611\" #> [5541] \"SAMN13012614\" \"SAMN13012651\" \"SAMN13012648\" \"SAMN13049244\" #> [5545] \"SAMN13049606\" \"SAMN13050471\" \"SAMN13050467\" \"SAMN13178622\" #> [5549] \"SAMN13178654\" \"SAMN13178631\" \"SAMN13178657\" \"SAMN13178656\" #> [5553] \"SAMN13340359\" \"SAMN13340415\" \"SAMN13340450\" \"SAMN13392107\" #> [5557] \"SAMN13392145\" \"SAMN13392151\" \"SAMN13392159\" \"SAMN13392146\" #> [5561] \"SAMN13429239\" \"SAMN13429519\" \"SAMN13429594\" \"SAMN13429612\" #> [5565] \"SAMN13429611\" \"SAMN11510109\" \"SAMN13703363\" \"SAMN13703354\" #> [5569] \"SAMN13703359\" \"SAMN13703356\" \"SAMN13703423\" \"SAMN13703497\" #> [5573] \"SAMN13703490\" \"SAMN13703481\" \"SAMN13703479\" \"SAMN13703501\" #> [5577] \"SAMN13703503\" \"SAMN13708351\" \"SAMN13719085\" \"SAMN13721834\" #> [5581] \"SAMN13898648\" \"SAMN13898778\" \"SAMN13898690\" \"SAMN13898675\" #> [5585] \"SAMN13898782\" \"SAMN13898692\" \"SAMN13898666\" \"SAMN13898634\" #> [5589] \"SAMN13898685\" \"SAMN13898687\" \"SAMN13920398\" \"SAMN13920444\" #> [5593] \"SAMN13920675\" \"SAMN13920680\" \"SAMN13920678\" \"SAMN13920688\" #> [5597] \"SAMN13944381\" \"SAMN13944380\" \"SAMN13944379\" \"SAMN13944370\" #> [5601] \"SAMN13944369\" \"SAMN13944368\" \"SAMN13944367\" \"SAMN13944366\" #> [5605] \"SAMN14008725\" \"SAMN14008726\" \"SAMN14008727\" \"SAMN14008724\" #> [5609] \"SAMN14008732\" \"SAMN14008810\" \"SAMN14008844\" \"SAMN14008855\" #> [5613] \"SAMN14009998\" \"SAMN14009997\" \"SAMN14009994\" \"SAMN14009993\" #> [5617] \"SAMN14009919\" \"SAMN14009873\" \"SAMN14068986\" \"SAMN14068987\" #> [5621] \"SAMN14080490\" \"SAMN13981344\" \"SAMN13981343\" \"SAMN13981354\" #> [5625] \"SAMN13981353\" \"SAMN13981352\" \"SAMN13981351\" \"SAMN13981350\" #> [5629] \"SAMN13981366\" \"SAMN13981365\" \"SAMN13981364\" \"SAMN13981363\" #> [5633] \"SAMN13981362\" \"SAMN14125157\" \"SAMN14125146\" \"SAMN14125139\" #> [5637] \"SAMN14125151\" \"SAMN14125505\" \"SAMN14125500\" \"SAMN14125501\" #> [5641] \"SAMN14125503\" \"SAMN14125502\" \"SAMN14125516\" \"SAMN14125507\" #> [5645] \"SAMN14125530\" \"SAMN14125549\" \"SAMN14125560\" \"SAMN14125557\" #> [5649] \"SAMN14125543\" \"SAMN14125550\" \"SAMN14125555\" \"SAMN14125552\" #> [5653] \"SAMN14125579\" \"SAMN14125573\" \"SAMN14125568\" \"SAMN14125567\" #> [5657] \"SAMN14125623\" \"SAMN14125641\" \"SAMN14125634\" \"SAMN14125649\" #> [5661] \"SAMN14125635\" \"SAMN14125638\" \"SAMN14125648\" \"SAMN14125644\" #> [5665] \"SAMN14125646\" \"SAMN14125645\" \"SAMN14125659\" \"SAMN14125660\" #> [5669] \"SAMN14125668\" \"SAMN14125656\" \"SAMN14125652\" \"SAMN14125663\" #> [5673] \"SAMN14125665\" \"SAMN14125657\" \"SAMN14125667\" \"SAMN14125678\" #> [5677] \"SAMN14331071\" \"SAMN14331072\" \"SAMN14331069\" \"SAMN14331073\" #> [5681] \"SAMN14331074\" \"SAMN14331113\" \"SAMN14384390\" \"SAMN14384389\" #> [5685] \"SAMN14384388\" \"SAMN14384387\" \"SAMN14384386\" \"SAMN14384380\" #> [5689] \"SAMN14384379\" \"SAMN14384378\" \"SAMN14384400\" \"SAMN14384399\" #> [5693] \"SAMN14384398\" \"SAMN14384397\" \"SAMN14384396\" \"SAMN14384377\" #> [5697] \"SAMN14486745\" \"SAMN14486738\" \"SAMN14486748\" \"SAMN14487786\" #> [5701] \"SAMN14487824\" \"SAMN14488134\" \"SAMN14488130\" \"SAMN14488144\" #> [5705] \"SAMN14488132\" \"SAMN14488154\" \"SAMN14488153\" \"SAMN14488160\" #> [5709] \"SAMN14544560\" \"SAMN14544566\" \"SAMN14544571\" \"SAMN14544568\" #> [5713] \"SAMN14544569\" \"SAMN14544542\" \"SAMN14544552\" \"SAMN14605680\" #> [5717] \"SAMN14605679\" \"SAMN14605678\" \"SAMN14605677\" \"SAMN14605676\" #> [5721] \"SAMN14911219\" \"SAMN14911218\" \"SAMN14911222\" \"SAMN14911266\" #> [5725] \"SAMN14911265\" \"SAMN14911290\" \"SAMN14911285\" \"SAMN15239395\" #> [5729] \"SAMN15239385\" \"SAMN15239419\" \"SAMN15349902\" \"SAMN15349901\" #> [5733] \"SAMN15349900\" \"SAMN15349899\" \"SAMN15349898\" \"SAMN15569259\" #> [5737] \"SAMN15569258\" \"SAMN15569257\" \"SAMN15569256\" \"SAMN15569255\" #> [5741] \"SAMN15569249\" \"SAMN15569248\" \"SAMN15569247\" \"SAMN15569246\" #> [5745] \"SAMN15569245\" \"SAMN15717926\" \"SAMN15717376\" \"SAMN15717385\" #> [5749] \"SAMN15717387\" \"SAMN15717382\" \"SAMN15717379\" \"SAMN15717375\" #> [5753] \"SAMN15717914\" \"SAMN15717910\" \"SAMN15717928\" \"SAMN15717923\" #> [5757] \"SAMN15729761\" \"SAMN15729760\" \"SAMN15690527\" \"SAMN15690526\" #> [5761] \"SAMN15690525\" \"SAMN15690524\" \"SAMN15747898\" \"SAMN15747896\" #> [5765] \"SAMN15747897\" \"SAMN15747895\" \"SAMN16124838\" \"SAMN15776715\" #> [5769] \"SAMN15776714\" \"SAMN15776725\" \"SAMN15776724\" \"SAMN15776744\" #> [5773] \"SAMN15776719\" \"SAMN15776717\" \"SAMN15776741\" \"SAMN15776739\" #> [5777] \"SAMN15776736\" \"SAMN15776727\" \"SAMN15776735\" \"SAMN15776733\" #> [5781] \"SAMN15776710\" \"SAMN15776709\" \"SAMN15776713\" \"SAMN15776712\" #> [5785] \"SAMN15776711\" \"SAMN15776732\" \"SAMN15776723\" \"SAMN15776731\" #> [5789] \"SAMN15776722\" \"SAMN15776721\" \"SAMN15776747\" \"SAMN15776746\" #> [5793] \"SAMN15776720\" \"SAMN15776718\" \"SAMN15776716\" \"SAMN15776728\" #> [5797] \"SAMN15776742\" \"SAMN15776740\" \"SAMN15776738\" \"SAMN15776737\" #> [5801] \"SAMN16284627\" \"SAMN16282955\" \"SAMN16282954\" \"SAMN16282953\" #> [5805] \"SAMN16282952\" \"SAMN16282951\" \"SAMN16282950\" \"SAMN16282949\" #> [5809] \"SAMN16282948\" \"SAMN16285368\" \"SAMN16285680\" \"SAMN16285889\" #> [5813] \"SAMN16285883\" \"SAMN16480745\" \"SAMN16480747\" \"SAMN16480744\" #> [5817] \"SAMN16480739\" \"SAMN16480742\" \"SAMN16480857\" \"SAMN16480840\" #> [5821] \"SAMN16481008\" \"SAMN16481065\" \"SAMN16481071\" \"SAMN16484193\" #> [5825] \"SAMN16484192\" \"SAMN16484191\" \"SAMN16484190\" \"SAMN16484189\" #> [5829] \"SAMN16484188\" \"SAMN16551978\" \"SAMN16551972\" \"SAMN16551971\" #> [5833] \"SAMN16551992\" \"SAMN16551991\" \"SAMN16551990\" \"SAMN16551989\" #> [5837] \"SAMN16551988\" \"SAMN16551982\" \"SAMN16551981\" \"SAMN16551980\" #> [5841] \"SAMN16551979\" \"SAMN16551970\" \"SAMN16551969\" \"SAMN16565208\" #> [5845] \"SAMN16565207\" \"SAMN16565206\" \"SAMN16629944\" \"SAMN16662053\" #> [5849] \"SAMN16662052\" \"SAMN16662051\" \"SAMN16662054\" \"SAMN16614857\" #> [5853] \"SAMN16614858\" \"SAMN11953785\" \"SAMN11953781\" \"SAMN11953780\" #> [5857] \"SAMN11953778\" \"SAMN11953777\" \"SAMN11953776\" \"SAMN11953774\" #> [5861] \"SAMN11954013\" \"SAMN11953796\" \"SAMN11953801\" \"SAMN11953802\" #> [5865] \"SAMN11953803\" \"SAMN11953804\" \"SAMN11953805\" \"SAMN11953797\" #> [5869] \"SAMN11953800\" \"SAMN11953798\" \"SAMN11953893\" \"SAMN11953895\" #> [5873] \"SAMN11953909\" \"SAMN11953883\" \"SAMN11953896\" \"SAMN11953991\" #> [5877] \"SAMN17348078\" \"SAMN17348077\" \"SAMN17348076\" \"SAMN17348075\" #> [5881] \"SAMN17348074\" \"SAMN17368267\" \"SAMN17368266\" \"SAMN17368265\" #> [5885] \"SAMN17368264\" \"SAMN17368263\" \"SAMN17369177\" \"SAMN17369176\" #> [5889] \"SAMN17369175\" \"SAMN17369174\" \"SAMN17369178\" \"SAMN17379562\" #> [5893] \"SAMN17379561\" \"SAMN17379560\" \"SAMN17379559\" \"SAMN17379558\" #> [5897] \"SAMN17379557\" \"SAMN17379556\" \"SAMN17379555\" \"SAMN17379554\" #> [5901] \"SAMN17379553\" \"SAMN17762789\" \"SAMN17762788\" \"SAMN17762787\" #> [5905] \"SAMN17762786\" \"SAMN17762785\" \"SAMN17813922\" \"SAMN17813921\" #> [5909] \"SAMN17813920\" \"SAMN17813919\" \"SAMN17813918\" \"SAMN17813917\" #> [5913] \"SAMN17813950\" \"SAMN17813949\" \"SAMN17813948\" \"SAMN17813947\" #> [5917] \"SAMN17813946\" \"SAMN17813945\" \"SAMN17813944\" \"SAMN17813943\" #> [5921] \"SAMN17813916\" \"SAMN17813942\" \"SAMN17813941\" \"SAMN17813940\" #> [5925] \"SAMN17813939\" \"SAMN17813938\" \"SAMN17813937\" \"SAMN17813936\" #> [5929] \"SAMN17813935\" \"SAMN17813934\" \"SAMN17813933\" \"SAMN17813915\" #> [5933] \"SAMN17813932\" \"SAMN17813931\" \"SAMN17813930\" \"SAMN17813929\" #> [5937] \"SAMN17813928\" \"SAMN17813927\" \"SAMN17813926\" \"SAMN17813925\" #> [5941] \"SAMN17813924\" \"SAMN17813923\" \"SAMN17813914\" \"SAMN17813913\" #> [5945] \"SAMN17843418\" \"SAMN17843417\" \"SAMN17843416\" \"SAMN17843415\" #> [5949] \"SAMN17843414\" \"SAMN17843413\" \"SAMN17843412\" \"SAMN17843411\" #> [5953] \"SAMN18106130\" \"SAMN18106125\" \"SAMN18106124\" \"SAMN18106123\" #> [5957] \"SAMN18106122\" \"SAMN18106121\" \"SAMN18106134\" \"SAMN18106133\" #> [5961] \"SAMN18106132\" \"SAMN18106131\" \"SAMN18381301\" \"SAMN18381306\" #> [5965] \"SAMN18527823\" \"SAMN18527822\" \"SAMN18527821\" \"SAMN18527820\" #> [5969] \"SAMN18634031\" \"SAMN18634030\" \"SAMN18634029\" \"SAMN15776748\" #> [5973] \"SAMN15776745\" \"SAMN15776743\" \"SAMN15776726\" \"SAMN18634049\" #> [5977] \"SAMN18634048\" \"SAMN18634047\" \"SAMN18634046\" \"SAMN18634045\" #> [5981] \"SAMN18634043\" \"SAMN18634042\" \"SAMN15776734\" \"SAMN18634041\" #> [5985] \"SAMN18634040\" \"SAMN18634039\" \"SAMN18634038\" \"SAMN18634037\" #> [5989] \"SAMN18634036\" \"SAMN18634035\" \"SAMN18634034\" \"SAMN18634033\" #> [5993] \"SAMN18634032\" \"SAMN15776730\" \"SAMN15776729\" \"SAMN18848518\" #> [5997] \"SAMN18988772\" \"SAMN18988771\" \"SAMN18988770\" \"SAMN18988769\" #> [6001] \"SAMN18988768\" \"SAMN18988788\" \"SAMN18988787\" \"SAMN18988786\" #> [6005] \"SAMN18988785\" \"SAMN18988778\" \"SAMN18988777\" \"SAMN18988776\" #> [6009] \"SAMN18988775\" \"SAMN18988774\" \"SAMN19064872\" \"SAMN19094640\" #> [6013] \"SAMN19068274\" \"SAMN19068273\" \"SAMN19094639\" \"SAMN19094638\" #> [6017] \"SAMN19068272\" \"SAMN19068280\" \"SAMN19068279\" \"SAMN19068278\" #> [6021] \"SAMN19068277\" \"SAMN19094643\" \"SAMN19094642\" \"SAMN19068276\" #> [6025] \"SAMN19068271\" \"SAMN19068270\" \"SAMN19101986\" \"SAMN19101985\" #> [6029] \"SAMN19101984\" \"SAMN19101983\" \"SAMN19101997\" \"SAMN19101996\" #> [6033] \"SAMN19101995\" \"SAMN19101994\" \"SAMN19101993\" \"SAMN19101992\" #> [6037] \"SAMN19101991\" \"SAMN19101982\" \"SAMN19101981\" \"SAMN19468978\" #> [6041] \"SAMN19680763\" \"SAMN19680762\" \"SAMN19680761\" \"SAMN19680760\" #> [6045] \"SAMN19680759\" \"SAMN19680758\" \"SAMN19680757\" \"SAMN19680756\" #> [6049] \"SAMN19680755\" \"SAMN19680775\" \"SAMN19680774\" \"SAMN19680773\" #> [6053] \"SAMN19680772\" \"SAMN19680754\" \"SAMN19680770\" \"SAMN19680769\" #> [6057] \"SAMN19680768\" \"SAMN19680767\" \"SAMN19680766\" \"SAMN19680765\" #> [6061] \"SAMN19680764\" \"SAMN20085873\" \"SAMN20085872\" \"SAMN20085871\" #> [6065] \"SAMN20085870\" \"SAMN20085869\" \"SAMN20085868\" \"SAMN20085867\" #> [6069] \"SAMN20085866\" \"SAMN20085883\" \"SAMN20085882\" \"SAMN20085881\" #> [6073] \"SAMN20085880\" \"SAMN20085879\" \"SAMN20085878\" \"SAMN20085877\" #> [6077] \"SAMN20085876\" \"SAMN20085875\" \"SAMN20085874\" \"SAMN20085865\" #> [6081] \"SAMN20085864\" \"SAMN20163841\" \"SAMN20200240\" \"SAMN20200239\" #> [6085] \"SAMN20200238\" \"SAMN20200237\" \"SAMN20200289\" \"SAMN20200288\" #> [6089] \"SAMN20200287\" \"SAMN20200286\" \"SAMN20200285\" \"SAMN20200284\" #> [6093] \"SAMN20200283\" \"SAMN20200282\" \"SAMN20200281\" \"SAMN20200236\" #> [6097] \"SAMN20200280\" \"SAMN20200279\" \"SAMN20200278\" \"SAMN20200277\" #> [6101] \"SAMN20200276\" \"SAMN20200275\" \"SAMN20200274\" \"SAMN20200273\" #> [6105] \"SAMN20200272\" \"SAMN20200271\" \"SAMN20200235\" \"SAMN20200270\" #> [6109] \"SAMN20200269\" \"SAMN20200268\" \"SAMN20200267\" \"SAMN20200266\" #> [6113] \"SAMN20200265\" \"SAMN20200264\" \"SAMN20200263\" \"SAMN20200262\" #> [6117] \"SAMN20200261\" \"SAMN20200234\" \"SAMN20200260\" \"SAMN20200259\" #> [6121] \"SAMN20200258\" \"SAMN20200257\" \"SAMN20200256\" \"SAMN20200255\" #> [6125] \"SAMN20200254\" \"SAMN20200253\" \"SAMN20200252\" \"SAMN20200251\" #> [6129] \"SAMN20200233\" \"SAMN20200250\" \"SAMN20200249\" \"SAMN20200248\" #> [6133] \"SAMN20200247\" \"SAMN20200246\" \"SAMN20200245\" \"SAMN20200244\" #> [6137] \"SAMN20200243\" \"SAMN20200242\" \"SAMN20200241\" \"SAMN20200232\" #> [6141] \"SAMN20200231\" \"SAMN21038410\" \"SAMN21038409\" \"SAMN21038407\" #> [6145] \"SAMN21038401\" \"SAMN21038400\" \"SAMN21038399\" \"SAMN21038395\" #> [6149] \"SAMN21038393\" \"SAMN21038390\" \"SAMN21038389\" \"SAMN21038388\" #> [6153] \"SAMN21038386\" \"SAMN21038385\" \"SAMN21038384\" \"SAMN21038374\" #> [6157] \"SAMN21038373\" \"SAMN21038378\" \"SAMN21038377\" \"SAMN21038411\" #> [6161] \"SAMN21038408\" \"SAMN21038376\" \"SAMN21038398\" \"SAMN21038397\" #> [6165] \"SAMN21038396\" \"SAMN21038394\" \"SAMN21038375\" \"SAMN21038392\" #> [6169] \"SAMN21038391\" \"SAMN21038387\" \"SAMN22133034\" \"SAMN22133033\" #> [6173] \"SAMN22137293\" \"SAMN22137292\" \"SAMN22137291\" \"SAMN22137290\" #> [6177] \"SAMN22137289\" \"SAMN22137288\" \"SAMN22137287\" \"SAMN22137261\" #> [6181] \"SAMN22137260\" \"SAMN22137259\" \"SAMN22137258\" \"SAMN22137257\" #> [6185] \"SAMN22137246\" \"SAMN22137245\" \"SAMN22137244\" \"SAMN22137243\" #> [6189] \"SAMN22137286\" \"SAMN22137242\" \"SAMN22137302\" \"SAMN22137301\" #> [6193] \"SAMN22137300\" \"SAMN22137299\" \"SAMN22137298\" \"SAMN22137297\" #> [6197] \"SAMN22137296\" \"SAMN22137295\" \"SAMN22137294\" \"SAMN22137285\" #> [6201] \"SAMN22137284\" \"SAMN22184024\" \"SAMN22184023\" \"SAMN22184022\" #> [6205] \"SAMN22184021\" \"SAMN22184020\" \"SAMN22184019\" \"SAMN22184018\" #> [6209] \"SAMN22184039\" \"SAMN22184038\" \"SAMN22184037\" \"SAMN22184036\" #> [6213] \"SAMN22184035\" \"SAMN22184017\" \"SAMN22184034\" \"SAMN22184033\" #> [6217] \"SAMN22184031\" \"SAMN22184030\" \"SAMN22184029\" \"SAMN22184027\" #> [6221] \"SAMN22184026\" \"SAMN22184025\" \"SAMN22184015\" \"SAMN22184032\" #> [6225] \"SAMN22184028\" \"SAMN22184016\" \"SAMN23010866\" \"SAMN05170083\" #> [6229] \"SAMN08518914\" \"SAMN28235857\" \"SAMN04448242\" \"SAMN07709883\" #> [6233] \"SAMN08963938\" \"SAMN08971996\" \"SAMN09951495\" \"SAMN09951494\" #> [6237] \"SAMN09951496\" \"SAMN09951528\" \"SAMN09951523\" \"SAMN10246274\" #> [6241] \"SAMN10393236\" \"SAMN10393211\" \"SAMN10393235\" \"SAMN11604260\" #> [6245] \"SAMN12344213\" \"SAMN12881540\" \"SAMN12881550\" \"SAMN12881652\" #> [6249] \"SAMN14911261\" \"SAMN15747901\" \"SAMN16887358\" \"SAMN16887354\" #> [6253] \"SAMN16887373\" \"SAMN16887371\" \"SAMN16887369\" \"SAMN16887362\" #> [6257] \"SAMN28235860\" \"SAMN28235843\" \"SAMN28235841\" \"SAMN28235839\" #> [6261] \"SAMN28235837\" \"SAMN28235862\" \"SAMN28235861\" \"SAMN28235859\" #> [6265] \"SAMN28235858\" \"SAMN28235856\" \"SAMN28235854\" \"SAMN28235852\" #> [6269] \"SAMN28235850\" \"SAMN28235848\" \"SAMN28235846\" \"SAMN28235834\" #> [6273] \"SAMN07229835\" \"SAMN07709805\" \"SAMN07709821\" \"SAMN07709787\" #> [6277] \"SAMN08518916\" \"SAMN10235280\" \"SAMN10235281\" \"SAMN10235285\" #> [6281] \"SAMN10235321\" \"SAMN10246254\" \"SAMN10246276\" \"SAMN10457090\" #> [6285] \"SAMN10457087\" \"SAMN10457091\" \"SAMN10457089\" \"SAMN10457078\" #> [6289] \"SAMN10457076\" \"SAMN10457088\" \"SAMN10457086\" \"SAMN11127478\" #> [6293] \"SAMN11417667\" \"SAMN11417669\" \"SAMN11417729\" \"SAMN11417756\" #> [6297] \"SAMN11417755\" \"SAMN11954887\" \"SAMN11954876\" \"SAMN11954902\" #> [6301] \"SAMN11954908\" \"SAMN11954911\" \"SAMN12175339\" \"SAMN12344205\" #> [6305] \"SAMN12525316\" \"SAMN12715674\" \"SAMN12881535\" \"SAMN12881548\" #> [6309] \"SAMN12881651\" \"SAMN13392147\" \"SAMN14149044\" \"SAMN14911220\" #> [6313] \"SAMN14911236\" \"SAMN14911235\" \"SAMN14911253\" \"SAMN15747904\" #> [6317] \"SAMN15747902\" \"SAMN15747900\" \"SAMN15747903\" \"SAMN16428977\" #> [6321] \"SAMN16428976\" \"SAMN16428975\" \"SAMN16428974\" \"SAMN16428973\" #> [6325] \"SAMN20163840\" \"SAMN20163839\" \"SAMN20163838\" \"SAMN20163837\" #> [6329] \"SAMN20163836\" \"SAMN21038382\" \"SAMN21038381\" \"SAMN21038380\" #> [6333] \"SAMN21038379\" \"SAMN21038406\" \"SAMN21038404\" \"SAMN21038403\" #> [6337] \"SAMN21038405\" \"SAMN21038402\" \"SAMN21038383\" \"SAMN03892121\" print(result$geno_matched) #> # A tibble: 60,129 × 13 #>    Name         marker      drug_agent drug_class `Gene symbol` `Hierarchy node` #>    <chr>        <gene>      <ab>       <chr>      <chr>         <chr>            #>  1 SAMN03177615 blaEC       NA         Beta-lact… blaEC         blaEC            #>  2 SAMN03177615 acrF        NA         Efflux     acrF          acrF             #>  3 SAMN03177615 glpT_E448K  FOS        Other ant… glpT_E448K    glpT             #>  4 SAMN03177615 floR        CHL        Amphenico… floR          floR             #>  5 SAMN03177615 floR        FLR        Other ant… floR          floR             #>  6 SAMN03177615 mdtM        NA         Efflux     mdtM          mdtM             #>  7 SAMN03177615 blaTEM-1    NA         Beta-lact… blaTEM-1      blaTEM-1         #>  8 SAMN03177615 sul2        SSS        Other ant… sul2          sul2             #>  9 SAMN03177615 aph(3'')-Ib STR1       Aminoglyc… aph(3'')-Ib   aph(3'')-Ib      #> 10 SAMN03177615 aph(6)-Id   STR1       Aminoglyc… aph(6)-Id     aph(6)-Id        #> # ℹ 60,119 more rows #> # ℹ 7 more variables: `Element type` <chr>, `Element subtype` <chr>, #> #   Class <chr>, Subclass <chr>, `% Coverage of reference sequence` <dbl>, #> #   `% Identity to reference sequence` <dbl>, #> #   `Accession of closest sequence` <chr> print(result$pheno_matched) #> # A tibble: 13,794 × 24 #>    id           spp_pheno    drug_agent ecoff pheno     mic  disk guideline #>    <chr>        <mo>         <ab>       <chr> <sir>   <mic> <dsk> <chr>     #>  1 SAMN07988997 B_ESCHR_COLI IPM        NWT     S   <=1.000    NA CLSI      #>  2 SAMN11638310 B_ESCHR_COLI CIP        NWT     R   256.000    NA CLSI      #>  3 SAMN18634044 B_ESCHR_COLI CIP        NWT     R   <=1.000    NA CLSI      #>  4 SAMN04122821 B_ESCHR_COLI CIP        NWT     R     1.000    NA CLSI      #>  5 SAMN04279649 B_ESCHR_COLI CIP        NWT     R   >=4.000    NA CLSI      #>  6 SAMN04279648 B_ESCHR_COLI CIP        NWT     R   >=4.000    NA CLSI      #>  7 SAMN04339728 B_ESCHR_COLI CIP        NWT     R     1.000    NA CLSI      #>  8 SAMN04393387 B_ESCHR_COLI CIP        NWT     R   >=4.000    NA CLSI      #>  9 SAMN04455486 B_ESCHR_COLI CIP        WT      S   <=0.015    NA CLSI      #> 10 SAMN04455488 B_ESCHR_COLI CIP        WT      S   <=0.015    NA CLSI      #> # ℹ 13,784 more rows #> # ℹ 16 more variables: `Organism group` <chr>, `Scientific name` <chr>, #> #   `Isolation type` <chr>, Location <chr>, `Isolation source` <chr>, #> #   Isolate <chr>, Antibiotic <chr>, `Resistance phenotype` <chr>, #> #   `Measurement sign` <chr>, `MIC (mg/L)` <dbl>, `Disk diffusion (mm)` <dbl>, #> #   `Laboratory typing platform` <chr>, Vendor <chr>, #> #   `Laboratory typing method version or reagent` <chr>, …"},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast.html","id":null,"dir":"Reference","previous_headings":"","what":"E. coli NCBI AST Example Data, Re-interpreted with AMR Package — ecoli_ast","title":"E. coli NCBI AST Example Data, Re-interpreted with AMR Package — ecoli_ast","text":"subset E. coli phenotype data NCBI AST browser.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E. coli NCBI AST Example Data, Re-interpreted with AMR Package — ecoli_ast","text":"","code":"ecoli_ast"},{"path":[]},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast.html","id":"ecoli-ast-a-data-frame-with-rows-and-columns-representing-reinterpreted-data-from-the-ncbi-ast-browser-","dir":"Reference","previous_headings":"","what":"ecoli_ast A data frame with 15320 rows and 24 columns representing reinterpreted data from the NCBI AST browser.","title":"E. coli NCBI AST Example Data, Re-interpreted with AMR Package — ecoli_ast","text":"Columns include: id: Sample identifier, imported #BioSample column raw input. spp_pheno: Species identifier, interpreted Scientific name using .mo, used interpret ecoff pheno columns. drug_agent: Antibiotic code, interpreted Antibiotic using .ab, used interpret ecoff pheno columns. ecoff: WT/NWT classification, interpreted using .sir. pheno: S//R classification, interpreted using .sir. mic: Minimum inhibitory concentration, formatted using .mic, used interpret ecoff pheno columns. disk: Disk diffusion zone, formatted using .disk, used interpret ecoff pheno columns. guideline: Interpretation guidelines used interpret ecoff pheno columns. Scientific name: Species identifier, input file. Antibiotic: Antibiotic name, input file. Testing standard: Interpretation standard (EUCAST CLSI), input file. Measurement sign: Measurement sign (>, <, =, etc.) relating MIC measurement, input file. MIC (mg/L): Minimum inhibitory concentration, input file. Disk diffusion (mm): Disk diffusion zone, input file. Resistance phenotype: Resistance call (SIR), input file. ...: Additional metadata columns NCBI AST export.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"E. coli NCBI AST Example Data, Re-interpreted with AMR Package — ecoli_ast","text":"https://www.ncbi.nlm.nih.gov/pathogens/ast","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"E. coli NCBI AST Example Data — ecoli_ast_raw","title":"E. coli NCBI AST Example Data — ecoli_ast_raw","text":"subset E. coli phenotype data NCBI AST browser.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E. coli NCBI AST Example Data — ecoli_ast_raw","text":"","code":"ecoli_ast_raw"},{"path":[]},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast_raw.html","id":"ecoli-ast-raw-a-data-frame-with-rows-and-columns-representing-unprocessed-data-from-the-ncbi-ast-browser-","dir":"Reference","previous_headings":"","what":"ecoli_ast_raw A data frame with 10 rows and 17 columns representing unprocessed data from the NCBI AST browser.","title":"E. coli NCBI AST Example Data — ecoli_ast_raw","text":"Columns include: #BioSample: Sample identifier. Scientific name: Species identifier. Antibiotic: Antibiotic name. Testing standard: Interpretation standard (EUCAST CLSI). Measurement sign: Measurement sign (>, <, =, etc.) relating MIC measurement. MIC (mg/L): Minimum inhibitory concentration. Disk diffusion (mm): Disk diffusion zone. Resistance phenotype: Resistance call (SIR) submitted. ...: Additional metadata columns NCBI AST export.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_ast_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"E. coli NCBI AST Example Data — ecoli_ast_raw","text":"https://www.ncbi.nlm.nih.gov/pathogens/ast","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_geno_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"E. coli Genotype Example Data — ecoli_geno_raw","title":"E. coli Genotype Example Data — ecoli_geno_raw","text":"Genotypes called using AMRfinderPlus (v3.12.8, DB 2024-01-31.1), sourced AllTheBacteria project.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_geno_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E. coli Genotype Example Data — ecoli_geno_raw","text":"","code":"ecoli_geno_raw"},{"path":[]},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_geno_raw.html","id":"ecoli-geno-raw-a-data-frame-with-rows-and-columns-representing-genotyping-results-from-amrfinderplus-","dir":"Reference","previous_headings":"","what":"ecoli_geno_raw A data frame with 53591 rows and 10 columns representing genotyping results from AMRfinderPlus.","title":"E. coli Genotype Example Data — ecoli_geno_raw","text":"Columns include: Name: Sample identifier. Gene symbol: Gene symbol NCBI RefGene. Hierarchy node: Node NCBI hierarchy. Class, Subclass: Drug class(es) associated marker (NCBI RefGene). % Coverage reference sequence, % Identity reference sequence, Accession closest sequence: Sequence match information. ...: Additional metadata columns AMRfinderPlus output.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/ecoli_geno_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"E. coli Genotype Example Data — ecoli_geno_raw","text":"https://github.com/ncbi/amr/wiki/Interpreting-results","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/eucast_supported_ab_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Available Antimicrobial Wild Type Distributions from EUCAST — eucast_supported_ab_distributions","title":"Retrieve Available Antimicrobial Wild Type Distributions from EUCAST — eucast_supported_ab_distributions","text":"Run function get updated list antimicrobial distributions currently supported EUCAST. retrieves live info https://mic.eucast.org.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/eucast_supported_ab_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Available Antimicrobial Wild Type Distributions from EUCAST — eucast_supported_ab_distributions","text":"","code":"eucast_supported_ab_distributions(...)"},{"path":"https://interpretamr.github.io/AMRgen/reference/eucast_supported_ab_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Available Antimicrobial Wild Type Distributions from EUCAST — eucast_supported_ab_distributions","text":"... Arguments passed function, currently unused.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/eucast_supported_ab_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Available Antimicrobial Wild Type Distributions from EUCAST — eucast_supported_ab_distributions","text":"","code":"eucast_supported_ab_distributions() #>                             AMK                             AMX  #>                      \"Amikacin\"                   \"Amoxicillin\"  #>                             AMC                             AMB  #>   \"Amoxicillin/clavulanic acid\"                \"Amphotericin B\"  #>                             AMP                             SAM  #>                    \"Ampicillin\"          \"Ampicillin/sulbactam\"  #>                             SAM                             ANI  #>          \"Ampicillin/sulbactam\"                 \"Anidulafungin\"  #>                             APR                             APX  #>                     \"Apramycin\"                  \"Aspoxicillin\"  #>                             AVI                             AZM  #>                    \"Avilamycin\"                  \"Azithromycin\"  #>                             ATM                             AZA  #>                     \"Aztreonam\"           \"Aztreonam/avibactam\"  #>                             BAC                             BDQ  #>                    \"Bacitracin\"                   \"Bedaquiline\"  #>                             PEN                             CAP  #>              \"Benzylpenicillin\"                   \"Capreomycin\"  #>                             CEC                             CFR  #>                      \"Cefaclor\"                    \"Cefadroxil\"  #>                             LEX                             RID  #>                     \"Cefalexin\"                  \"Cefaloridine\"  #>                             CEP                             HAP  #>                     \"Cefalotin\"                     \"Cefapirin\"  #>                             CZO                             CDR  #>                     \"Cefazolin\"                      \"Cefdinir\"  #>                             FEP                             FPE  #>                      \"Cefepime\"       \"Cefepime/enmetazobactam\"  #>                             FPT                             FPZ  #>           \"Cefepime/tazobactam\"           \"Cefepime/zidebactam\"  #>                             FDC                             CFM  #>                   \"Cefiderocol\"                      \"Cefixime\"  #>                             CFP                             CSL  #>                  \"Cefoperazone\"        \"Cefoperazone/sulbactam\"  #>                             CSE                             CTX  #>                     \"Cefoselis\"                    \"Cefotaxime\"  #>                             CTT                             FOV  #>                     \"Cefotetan\"                     \"Cefovecin\"  #>                             FOX                             CPO  #>                     \"Cefoxitin\"                     \"Cefpirome\"  #>                             CPD                             CDC  #>                   \"Cefpodoxime\"   \"Cefpodoxime/clavulanic acid\"  #>                             CEQ                             CPT  #>                    \"Cefquinome\"                   \"Ceftaroline\"  #>                             CAZ                             CZA  #>                   \"Ceftazidime\"         \"Ceftazidime/avibactam\"  #>                             CTB                             TIO  #>                    \"Ceftibuten\"                     \"Ceftiofur\"  #>                             BPR                             CZT  #>                  \"Ceftobiprole\"        \"Ceftolozane/tazobactam\"  #>                             CZT                             CRO  #>        \"Ceftolozane/tazobactam\"                   \"Ceftriaxone\"  #>                             CXM                             CED  #>                    \"Cefuroxime\"                    \"Cephradine\"  #>                             CHL                             CTE  #>               \"Chloramphenicol\"             \"Chlortetracycline\"  #>                             CIP                             CLR  #>                 \"Ciprofloxacin\"                \"Clarithromycin\"  #>                            CLA1                             CLX  #>               \"Clavulanic acid\"                 \"Clinafloxacin\"  #>                             CLI                             CLF  #>                   \"Clindamycin\"                   \"Clofazimine\"  #>                             CLO                             COL  #>                   \"Cloxacillin\"                      \"Colistin\"  #>                             CYC                             DAL  #>                   \"Cycloserine\"                   \"Dalbavancin\"  #>                             DAN                             DAP  #>                  \"Danofloxacin\"                    \"Daptomycin\"  #>                             DFX                             DLM  #>                  \"Delafloxacin\"                     \"Delamanid\"  #>                             DIC                             DIF  #>                 \"Dicloxacillin\"                    \"Difloxacin\"  #>                             DOR                             DOX  #>                     \"Doripenem\"                   \"Doxycycline\"  #>                             ENR                             ERV  #>                  \"Enrofloxacin\"                  \"Eravacycline\"  #>                             ETP                             ERY  #>                     \"Ertapenem\"                  \"Erythromycin\"  #>                             ETH                            ETI1  #>                    \"Ethambutol\"                   \"Ethionamide\"  #>                             FAR                             FDX  #>                     \"Faropenem\"                   \"Fidaxomicin\"  #>                             FLR                             FLC  #>                   \"Florfenicol\"                \"Flucloxacillin\"  #>                             FLU                             FCT  #>                   \"Fluconazole\"                   \"Flucytosine\"  #>                             FLM                             FOS  #>                    \"Flumequine\"                    \"Fosfomycin\"  #>                             FUS                             GAM  #>                  \"Fusidic acid\"                 \"Gamithromycin\"  #>                             GAT                             GEM  #>                  \"Gatifloxacin\"                  \"Gemifloxacin\"  #>                             GEN                             IPM  #>                    \"Gentamicin\"                      \"Imipenem\"  #>                             IMR                             ISV  #>           \"Imipenem/relebactam\"                 \"Isavuconazole\"  #>                             INH                             ITR  #>                     \"Isoniazid\"                  \"Itraconazole\"  #>                             KAN                             KET  #>                     \"Kanamycin\"                  \"Ketoconazole\"  #>                             LAS                             LMU  #>                     \"Lasalocid\"                     \"Lefamulin\"  #>                             LVX                             LIN  #>                  \"Levofloxacin\"                    \"Lincomycin\"  #>                             LNZ                             LOR  #>                     \"Linezolid\"                    \"Loracarbef\"  #>                             MAR                             MEC  #>                 \"Marbofloxacin\"                    \"Mecillinam\"  #>                             MEM                             MEV  #>                     \"Meropenem\"         \"Meropenem/vaborbactam\"  #>                             MTR                             MIF  #>                 \"Metronidazole\"                    \"Micafungin\"  #>                             MNO                             MON  #>                   \"Minocycline\"               \"Monensin sodium\"  #>                             MFX                             MUP  #>                  \"Moxifloxacin\"                     \"Mupirocin\"  #>                             NAL                             NAR  #>                \"Nalidixic acid\"                       \"Narasin\"  #>                             NEO                             NET  #>                      \"Neomycin\"                    \"Netilmicin\"  #>                             NIT                             NTR  #>                \"Nitrofurantoin\"                   \"Nitroxoline\"  #>                             NOR                             NVA  #>                   \"Norfloxacin\"                 \"Norvancomycin\"  #>                             OFX                             OMC  #>                     \"Ofloxacin\"                  \"Omadacycline\"  #>                             ORB                             ORI  #>                  \"Orbifloxacin\"                   \"Oritavancin\"  #>                             OXA                             OXO  #>                     \"Oxacillin\"                 \"Oxolinic acid\"  #>                             OXY                             PEF  #>               \"Oxytetracycline\"                    \"Pefloxacin\"  #>                             PHN                             PIP  #>       \"Phenoxymethylpenicillin\"                  \"Piperacillin\"  #>                             TZP                             PRL  #>       \"Piperacillin/tazobactam\"                    \"Pirlimycin\"  #>                             POS                             PRA  #>                  \"Posaconazole\"                 \"Pradofloxacin\"  #>                             PRI                             PZA  #>                 \"Pristinamycin\"                  \"Pyrazinamide\"  #>                             QDA                             RTP  #>     \"Quinupristin/dalfopristin\"                   \"Retapamulin\"  #>                             RZF                             RIB  #>                    \"Rezafungin\"                     \"Rifabutin\"  #>                             RIF                             RXT  #>                    \"Rifampicin\"                 \"Roxithromycin\"  #>                             SAL                             SEC  #>                   \"Salinomycin\"                   \"Secnidazole\"  #>                             SIT                             SPT  #>                  \"Sitafloxacin\"                 \"Spectinomycin\"  #>                             SPI                            STR1  #>                    \"Spiramycin\"                  \"Streptomycin\"  #>                             SUL                             SDI  #>                     \"Sulbactam\"                  \"Sulfadiazine\"  #>                             SMX                             SOX  #>              \"Sulfamethoxazole\"                 \"Sulfisoxazole\"  #>                             TZD                             TEC  #>                     \"Tedizolid\"                   \"Teicoplanin\"  #>                             TLV                             TLV  #>                    \"Telavancin\"                    \"Telavancin\"  #>                             TLT                             TEM  #>                 \"Telithromycin\"                    \"Temocillin\"  #>                             TRB                             TCY  #>                   \"Terbinafine\"                  \"Tetracycline\"  #>                             THI                             TIA  #>                 \"Thiamphenicol\"                      \"Tiamulin\"  #>                             TIC                             TCC  #>                   \"Ticarcillin\"   \"Ticarcillin/clavulanic acid\"  #>                             TGC                             TIP  #>                   \"Tigecycline\"                  \"Tildipirosin\"  #>                             TIL                             TOB  #>                    \"Tilmicosin\"                    \"Tobramycin\"  #>                             TMP                             SXT  #>                  \"Trimethoprim\" \"Trimethoprim/sulfamethoxazole\"  #>                             TUL                             TYL  #>                 \"Tulathromycin\"                       \"Tylosin\"  #>                            TYL1                             VAN  #>                    \"Tylvalosin\"                    \"Vancomycin\"  #>                             VIO                             VOR  #>                      \"Viomycin\"                  \"Voriconazole\""},{"path":"https://interpretamr.github.io/AMRgen/reference/export_ncbi_biosample.html","id":null,"dir":"Reference","previous_headings":"","what":"Import/Export BioSample Antibiograms — export_ncbi_biosample","title":"Import/Export BioSample Antibiograms — export_ncbi_biosample","text":"Output phenotype data NCBI BioSample Antibiograms.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/export_ncbi_biosample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import/Export BioSample Antibiograms — export_ncbi_biosample","text":"","code":"export_ncbi_biosample(data, file, overwrite = FALSE)"},{"path":"https://interpretamr.github.io/AMRgen/reference/export_ncbi_biosample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import/Export BioSample Antibiograms — export_ncbi_biosample","text":"data Data set containing SIR results. file File path data exported. overwrite Logical indicating whether overwrite existing file.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/export_ncbi_biosample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import/Export BioSample Antibiograms — export_ncbi_biosample","text":"tab-delimited UTF-8 text file written disk format required NCBI BioSample Antibiograms.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"function generates binary matrix representing resistance (R vs S/) nonwildtype (R/vs S) status given antibiotic, presence absence genetic markers related one specified drug classes. takes input separate tables genotype phenotype data, matches according common identifier (either specified column names assuming first column contains ID), filters data according specified antibiotic drug class criteria creating binary matrix. Suitable input files can generated using import_ncbi_ast import phenotype data NCBI, parse_amrfp import genotype data AMRfinderPlus.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"","code":"get_binary_matrix(   geno_table,   pheno_table,   antibiotic,   drug_class_list,   keep_SIR = TRUE,   keep_assay_values = FALSE,   keep_assay_values_from = c(\"mic\", \"disk\"),   geno_sample_col = NULL,   pheno_sample_col = NULL,   sir_col = \"pheno\",   ecoff_col = \"ecoff\",   most_resistant = TRUE )"},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"geno_table data frame containing genotype data, including least one column labeled drug_class drug class information one column sample identifiers (specified via geno_sample_col, otherwise assumed first column contains identifiers). pheno_table data frame containing phenotype data, must include column drug_agent (antibiotic information), column resistance interpretation (S//R, specified via sir_col), optionally column ECOFF interpretation (WT/NWT, specified via ecoff_col). antibiotic character string specifying antibiotic interest filter phenotype data. value must match one entries drug_agent column pheno_table. drug_class_list character vector drug classes filter genotype data markers related specified antibiotic. Markers geno_table filtered based whether drug_class matches value list. keep_SIR logical indicating whether retain full S//R phenotype column output. Defaults TRUE. keep_assay_values logical indicating whether include columns raw phenotype assay data. Assumes columns labelled \"mic\" \"disk\"; added output table present. Defaults FALSE. keep_assay_values_from character vector specifying assay values (e.g., \"mic\", \"disk\") retain keep_assay_values TRUE. Defaults c(\"mic\", \"disk\"). geno_sample_col character string (optional) specifying column name geno_table containing sample identifiers. Defaults NULL, case assumed first column contains identifiers. pheno_sample_col character string (optional) specifying column name pheno_table containing sample identifiers. Defaults NULL, case assumed first column contains identifiers. sir_col character string specifying column name pheno_table contains resistance interpretation (SIR) data. values interpretable \"R\" (resistant), \"\" (intermediate), \"S\" (susceptible). ecoff_col character string specifying column name pheno_table contains ECOFF interpretation phenotype. values interpretable \"WT\" (wildtype) \"NWT\" (nonwildtype). most_resistant logical indicating whether, multiple phenotype entries present sample drug, resistant kept (otherwise least resistant kept). Default TRUE.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"data frame row represents sample, column represents genetic marker related specified antibiotic's drug class. binary values matrix indicate presence (1) absence (0) marker sample, along resistance status columns specified antibiotic: R resistant (defined sir_col, 1=R, 0=/S) NWT nonwildtype (defined ecoff_col provided: 1=NWT, 0=WT; otherwise defined sir_col: 1=/R, 0=S).","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"function performs several steps: Verifies pheno_table contains drug_agent column converts class ab necessary. Filters pheno_table retain data related specified antibiotic. Checks geno_table contains markers associated specified drug class(es). Matches sample identifiers geno_table pheno_table. Extracts transforms phenotype data binary format indicating resistance NWT status. Constructs binary matrix genotype data, column representing genetic marker. Returns single matrix sample identifiers plus binary variables phenotype genetic marker.","code":""},{"path":[]},{"path":"https://interpretamr.github.io/AMRgen/reference/get_binary_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Binary Matrix of Genotype and Phenotype Data — get_binary_matrix","text":"","code":"if (FALSE) { # \\dontrun{ geno_table <- parse_amrfp(\"testdata/Ecoli_AMRfinderplus_n50.tsv\", \"Name\") pheno_table <- import_ncbi_ast(\"testdata/Ecoli_AST_NCBI_n50.tsv\") get_binary_matrix(   geno_table,   pheno_table,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"Resistance phenotype\" ) get_binary_matrix(   geno_table,   pheno_table,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"Resistance phenotype\",   keep_assay_values = TRUE ) get_binary_matrix(   geno_table,   pheno_table,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"Resistance phenotype\",   keep_assay_values = TRUE,   keep_assay_values_from = \"mic\" ) get_binary_matrix(   geno_table,   pheno_table,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"Resistance phenotype\",   keep_assay_values = TRUE,   keep_assay_values_from = \"MIC (mg/L)\" ) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"functions allow retrieval antimicrobial wild type distributions, live eucast.org.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"","code":"get_eucast_amr_distribution(   ab,   mo = NULL,   method = \"MIC\",   as_freq_table = TRUE )  get_eucast_mic_distribution(ab, mo = NULL, as_freq_table = TRUE)  get_eucast_disk_distribution(ab, mo = NULL, as_freq_table = TRUE)  compare_mic_with_eucast(mics, ab, mo = NULL)  compare_disk_with_eucast(disks, ab, mo = NULL)"},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"ab antimicrobial, can anything understood ab_name() mo microorganism, can anything understood mo_name() (can left blank) method either \"MIC\" \"disk\"/\"diff\" as_freq_table either TRUE (default) FALSE, return result frequency table mics MIC values, coerced .mic() disks Disk diffusion values, coerced .disk()","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"compare_*_with_eucast() functions allow compare user range EUCAST distributions. Use ggplot2::autoplot() output visualise results.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":"supported-antimicrobials","dir":"Reference","previous_headings":"","what":"Supported Antimicrobials","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"December 2024, EUCAST 176 distributions available, namely antimicrobials: Amikacin, amoxicillin, amoxicillin/clavulanic acid, amphotericin B, ampicillin, ampicillin/sulbactam, anidulafungin, apramycin, aspoxicillin, avilamycin, azithromycin, aztreonam, aztreonam/avibactam, bacitracin, bedaquiline, benzylpenicillin, capreomycin, cefaclor, cefadroxil, cefalexin, cefaloridine, cefalotin, cefapirin, cefazolin, cefdinir, cefepime, cefepime/tazobactam, cefepime/zidebactam, cefiderocol, cefixime, cefoperazone, cefoperazone/sulbactam, cefoselis, cefotaxime, cefotetan, cefovecin, cefoxitin, cefpirome, cefpodoxime, cefpodoxime/clavulanic acid, cefquinome, ceftaroline, ceftazidime, ceftazidime/avibactam, ceftibuten, ceftiofur, ceftobiprole, ceftolozane/tazobactam, ceftriaxone, cefuroxime, cephradine, chloramphenicol, chlortetracycline, ciprofloxacin, clarithromycin, clavulanic acid, clinafloxacin, clindamycin, clofazimine, cloxacillin, colistin, cycloserine, dalbavancin, danofloxacin, daptomycin, delafloxacin, delamanid, dicloxacillin, difloxacin, doripenem, doxycycline, enrofloxacin, eravacycline, ertapenem, erythromycin, ethambutol, ethionamide, faropenem, fidaxomicin, florfenicol, flucloxacillin, fluconazole, flucytosine, flumequine, fosfomycin, fusidic acid, gamithromycin, gatifloxacin, gemifloxacin, gentamicin, imipenem, imipenem/relebactam, isavuconazole, isoniazid, itraconazole, kanamycin, ketoconazole, lefamulin, levofloxacin, lincomycin, linezolid, loracarbef, marbofloxacin, mecillinam, meropenem, meropenem/vaborbactam, metronidazole, micafungin, minocycline, moxifloxacin, mupirocin, nalidixic acid, narasin, neomycin, netilmicin, nitrofurantoin, nitroxoline, norfloxacin, norvancomycin, ofloxacin, omadacycline, orbifloxacin, oritavancin, oxacillin, oxolinic acid, oxytetracycline, pefloxacin, phenoxymethylpenicillin, piperacillin, piperacillin/tazobactam, pirlimycin, posaconazole, pradofloxacin, pristinamycin, pyrazinamide, quinupristin/dalfopristin, retapamulin, rezafungin, rifabutin, rifampicin, roxithromycin, secnidazole, sitafloxacin, spectinomycin, spiramycin, streptomycin, sulbactam, sulfadiazine, sulfamethoxazole, sulfisoxazole, tedizolid, teicoplanin, telavancin, telithromycin, temocillin, terbinafine, tetracycline, thiamphenicol, tiamulin, ticarcillin, ticarcillin/clavulanic acid, tigecycline, tildipirosin, tilmicosin, tobramycin, trimethoprim, trimethoprim/sulfamethoxazole, tulathromycin, tylosin, tylvalosin, vancomycin, viomycin, voriconazole. current list, run eucast_supported_ab_distributions().","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/get_eucast_amr_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Compare Antimicrobial Wild Type Distributions from EUCAST — get_eucast_amr_distribution","text":"","code":"get_eucast_mic_distribution(\"cipro\") #> # A tibble: 2,033 × 4 #>    microorganism              microorganism_code   mic count #>    <chr>                      <mo>               <mic> <int> #>  1 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.002     0 #>  2 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.004     0 #>  3 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.008     0 #>  4 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.016     0 #>  5 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.030     0 #>  6 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.060     0 #>  7 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.125     0 #>  8 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.250     1 #>  9 Achromobacter xylosoxidans B_ACHRMB_XYLS      0.500     0 #> 10 Achromobacter xylosoxidans B_ACHRMB_XYLS      1.000     6 #> # ℹ 2,023 more rows  # not returning as frequency table get_eucast_mic_distribution(\"cipro\", as_freq_table = FALSE) #> # A tibble: 107 × 25 #>    microorganism       microorganism_code `0.002` `0.004` `0.008` `0.016` `0.03` #>    <chr>               <mo>                 <dbl>   <dbl>   <dbl>   <dbl>  <dbl> #>  1 Achromobacter xylo… B_ACHRMB_XYLS            0       0       0       0      0 #>  2 Acinetobacter baum… B_ACNTB_BMNN             0       0       2       5     16 #>  3 Acinetobacter pitt… B_ACNTB_PITT             0       0       0       0      0 #>  4 Actinomyces israel… B_AMYCS_ISRL             0       0       0       0      0 #>  5 Aerococcus sanguin… B_AERCC_SNGN             0       0       0       0      0 #>  6 Aerococcus urinae   B_AERCC_URIN             0       0       0       0      0 #>  7 Alcaligenes faecal… B_ALCLG_FCLS             0       0       0       0      0 #>  8 Bacillus anthracis  B_BCLLS_ANTH             0       0       0       0      2 #>  9 Bacillus cereus     B_BCLLS_CERS             0       0       0       0      0 #> 10 Brucella melitensis B_BRCLL_MLTN             0       0       0       1      0 #> # ℹ 97 more rows #> # ℹ 18 more variables: `0.06` <dbl>, `0.125` <dbl>, `0.25` <dbl>, `0.5` <dbl>, #> #   `1` <int>, `2` <int>, `4` <int>, `8` <int>, `16` <int>, `32` <int>, #> #   `64` <int>, `128` <int>, `256` <int>, `512` <int>, distributions <chr>, #> #   observations <chr>, ecoff <chr>, confidence_interval <chr>  # specify microorganism to only get results for that pathogen get_eucast_mic_distribution(\"cipro\", \"K. pneumoniae\") #> # A tibble: 19 × 2 #>        mic count #>      <mic> <int> #>  1   0.002     0 #>  2   0.004     4 #>  3   0.008   116 #>  4   0.016   545 #>  5   0.030  1456 #>  6   0.060   692 #>  7   0.125   196 #>  8   0.250   189 #>  9   0.500   119 #> 10   1.000    88 #> 11   2.000    36 #> 12   4.000    43 #> 13   8.000    26 #> 14  16.000    36 #> 15  32.000   105 #> 16  64.000    53 #> 17 128.000    31 #> 18 256.000    28 #> 19 512.000    15  get_eucast_disk_distribution(\"cipro\", \"K. pneumoniae\") #> # A tibble: 45 × 2 #>    disk_diffusion count #>             <dsk> <int> #>  1              6   362 #>  2              7     6 #>  3              8     8 #>  4              9     8 #>  5             10    20 #>  6             11    15 #>  7             12     5 #>  8             13     8 #>  9             14    20 #> 10             15    37 #> # ℹ 35 more rows   # Plotting ----------------------------------------------------------------  mic_data <- get_eucast_mic_distribution(\"cipro\", \"K. pneumoniae\") mics <- rep(mic_data$mic, mic_data$count) ggplot2::autoplot(mics, ab = \"cipro\", mo = \"K. pneumoniae\", title = \"Look at my MICs!\")    # Comparing With User Values ----------------------------------------------  my_mic_values <- AMR::random_mic(500) comparison <- compare_mic_with_eucast(my_mic_values, ab = \"cipro\", mo = \"K. pneumoniae\") #> Joining with `by = join_by(value)` comparison #> # A tibble: 25 × 3 #>    value    user eucast #>  * <fct>   <int>  <int> #>  1 <=0.001    35      0 #>  2 0.002      31      0 #>  3 0.004       0      4 #>  4 0.005      25      0 #>  5 0.008       0    116 #>  6 0.01       20      0 #>  7 0.016       0    545 #>  8 0.025      32      0 #>  9 0.03        0   1456 #> 10 0.06        0    692 #> # ℹ 15 more rows #> Use ggplot2::autoplot() on this output to visualise. ggplot2::autoplot(comparison)"},{"path":"https://interpretamr.github.io/AMRgen/reference/glm_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Details from a Generalized Linear Model — glm_details","title":"Extract Details from a Generalized Linear Model — glm_details","text":"function extracts formats estimates, confidence intervals, p-values fitted glm model.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/glm_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Details from a Generalized Linear Model — glm_details","text":"","code":"glm_details(model)"},{"path":"https://interpretamr.github.io/AMRgen/reference/glm_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Details from a Generalized Linear Model — glm_details","text":"model fitted glm model object.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/glm_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Details from a Generalized Linear Model — glm_details","text":"tibble containing estimates, confidence intervals, p-values predictor model.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/glm_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Details from a Generalized Linear Model — glm_details","text":"","code":"# Generate example data set.seed(1) dat <- data.frame(   R = rbinom(100, 1, 0.3),   geneA = rbinom(100, 1, 0.2),   geneB = rbinom(100, 1, 0.5),   geneC = rbinom(100, 1, 0.3) )  # Fit logistic regression model and extract details model <- glm(R ~ ., data = dat, family = binomial(link = \"logit\")) model_details <- glm_details(model) #> Waiting for profiling to be done...  # Plot model summary ggplot2::autoplot(model_details)"},{"path":"https://interpretamr.github.io/AMRgen/reference/gtdb.mo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microorganism from GTDB Species Name — gtdb.mo","title":"Get Microorganism from GTDB Species Name — gtdb.mo","text":"Parse character vector containing species names GTDB output get valid microorganism code.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/gtdb.mo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microorganism from GTDB Species Name — gtdb.mo","text":"","code":"gtdb.mo(species)"},{"path":"https://interpretamr.github.io/AMRgen/reference/gtdb.mo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microorganism from GTDB Species Name — gtdb.mo","text":"species Name species, coerced AMR::.mo().","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/gtdb.mo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microorganism from GTDB Species Name — gtdb.mo","text":"character vector valid microorganism codes determined AMR::.mo().","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/gtdb.mo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microorganism from GTDB Species Name — gtdb.mo","text":"","code":"gtdb.mo(\"Escherichia_A coli_BC\") #> Class 'mo' #> [1] B_ESCHR_COLI_COLI"},{"path":"https://interpretamr.github.io/AMRgen/reference/harmonize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"hamronize_data — harmonize_data","title":"hamronize_data — harmonize_data","text":"hamronize_data","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/harmonize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hamronize_data — harmonize_data","text":"","code":"harmonize_data(   user_software_name,   user_software_version,   user_database_version,   user_input_filename )"},{"path":"https://interpretamr.github.io/AMRgen/reference/harmonize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hamronize_data — harmonize_data","text":"user_software_name analysis software used screen genome data AMR determinants (must amrfinderplus, rgi, resfinder) user_software_version version analysis software used screen genome data user_database_version version database used user_input_filename name genotypic AMR data file","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/harmonize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hamronize_data — harmonize_data","text":"data frame containing 'harmonized' AMR genotype data","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/harmonize_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hamronize_data — harmonize_data","text":"","code":"if (FALSE) { # \\dontrun{ harmonize_data(   user_software_name = \"amrfinderplus\",   user_software_version = \"3.12.8\",   user_input_filename = \"ATB_Achromobacter_AFP.tsv\",   user_database_version = \"2024-01-31.1\" ) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and Process AMRFinderPlus Results — import_amrfp","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"function imports processes AMRFinderPlus results, extracting antimicrobial resistance (AMR) elements mapping standardised antibiotic names drug classes. function also converts gene symbols harmonised format ensures compatibility AMR package.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"","code":"import_amrfp(input_table, sample_col, amrfp_drugs = amrfp_drugs_table)"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"input_table character string specifying path AMRFinderPlus results table (TSV format). sample_col character string specifying column identifies samples dataset. amrfp_drugs tibble containing reference table mapping AMRFinderPlus subclasses (AFP_Subclass) standardised drug agents (drug_agent) drug classes (drug_class). Defaults amrfp_drugs_table, provided internally.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"tibble containing processed AMR elements, harmonised gene names, mapped drug agents, drug classes. output retains original columns AMRFinderPlus table along newly mapped variables.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"function performs following steps: Reads AMRFinderPlus output table. Filters data include AMR elements. Converts gene symbols harmonised format. Splits multiple subclass annotations separate rows. Maps AMRFinderPlus subclasses standardised drug agent drug class names using amrfp_drugs. Converts drug agent names \"ab\" class AMR package. processing ensures compatibility downstream AMR analysis workflows.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_amrfp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and Process AMRFinderPlus Results — import_amrfp","text":"","code":"if (FALSE) { # \\dontrun{ # small example E. coli AMRfinderplus data ecoli_geno_raw  # import first few rows of this data frame and parse it as AMRfp data geno <- import_amrfp(ecoli_geno_raw %>% head(n = 10), \"Name\") geno } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_gtdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Import GTDB Output — import_gtdb","title":"Import GTDB Output — import_gtdb","text":"Import GTDB output (file data frame) parse species name microorganism recognised AMR package. AMR mo code species name added data frame.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_gtdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import GTDB Output — import_gtdb","text":"","code":"import_gtdb(file = NULL, tbl = NULL, species_column = \"Species\")"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_gtdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import GTDB Output — import_gtdb","text":"file File path GTDB output file (tab-separated). given, tbl must provided. tbl Data frame containing GTDB output. given, file must provided. species_column Name column containing species call (default \"Species\").","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_gtdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import GTDB Output — import_gtdb","text":"data frame containing GTDB output AMR-parsed microorganism code (gtdb.mo) species name (gtdb.species) appended.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_gtdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import GTDB Output — import_gtdb","text":"","code":"if (FALSE) { # \\dontrun{ import_gtdb(tbl = data.frame(Species = c(   \"Pseudomonas_E piscis\",   \"Haemophilus_D parainfluenzae_A\",   \"Acinetobacter calcoaceticus_C\" ))) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_ncbi_ast.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and Process AST Data from an NCBI File — import_ncbi_ast","title":"Import and Process AST Data from an NCBI File — import_ncbi_ast","text":"function imports antibiotic susceptibility testing (AST) dataset, processes data, optionally interprets results based MIC disk diffusion data. assumes input file tab-delimited text file (e.g., TSV) parses relevant columns (antibiotic names, species names, MIC disk data) suitable classes using AMR package. optionally can use AMR package determine susceptibility phenotype (SIR) based EUCAST CLSI guidelines (human breakpoints /ECOFF). expected columns found warnings given, interpretation may possible.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_ncbi_ast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and Process AST Data from an NCBI File — import_ncbi_ast","text":"","code":"import_ncbi_ast(   input,   sample_col = \"#BioSample\",   interpret = F,   ecoff = F,   default_guideline = \"EUCAST\" )"},{"path":"https://interpretamr.github.io/AMRgen/reference/import_ncbi_ast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and Process AST Data from an NCBI File — import_ncbi_ast","text":"input string representing dataframe, path tab-delimited file, containing AST data NCBI antibiogram format. files can downloaded NCBI AST browser, e.g. https://www.ncbi.nlm.nih.gov/pathogens/ast#Pseudomonas%20aeruginosa sample_col string indicating name column sample identifiers. NULL, assume '#BioSample'. interpret logical value (default FALSE). TRUE, function interpret susceptibility phenotype (SIR) row based MIC disk diffusion values, human breakpoints either EUCAST CLSI testing standard (indicated Testing standard column input file, blank value default_guideline parameter used default). FALSE, interpretation performed. ecoff logical value (default FALSE). TRUE, function interpret wildtype vs nonwildtype status row based MIC disk diffusion values, epidemiological cut-(ECOFF) values. reported new column ecoff, coded 'NWT' (nonwildtype) 'WT' (wildtype). FALSE, ECOFF interpretation performed. default_guideline string (default \"EUCAST\"). Default guideline use interpretation via .sir. Allowed values 'EUCAST' 'CLSI'. input file contains column Testing standard, interpret ecoff set TRUE, new column guideline created use interpretation step. Values populated Testing standard, however rows missing/NA values non-allowed values coerced value specified default_guideline. Testing standard column, rows interpreted using default_guideline.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_ncbi_ast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and Process AST Data from an NCBI File — import_ncbi_ast","text":"data frame processed AST data, including additional columns: id: biological sample identifier (renamed #BioSample specified column). spp_pheno: species phenotype, formatted using .mo function. drug_agent: antibiotic used test, formatted using .ab function. mic: minimum inhibitory concentration (MIC) value, formatted using .mic function. disk: disk diffusion measurement (mm), formatted using .disk function. guideline: guideline used interpretation (either EUCAST CLSI; taken input column otherwise forced parameter default_guideline). pheno: phenotype interpreted specified breakpoint standard (S//R), based MIC disk diffusion data. ecoff: wildtype/nonwildtype status interpreted ECOFF (WT/NWT), based MIC disk diffusion data.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/import_ncbi_ast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and Process AST Data from an NCBI File — import_ncbi_ast","text":"","code":"if (FALSE) { # \\dontrun{ # small example E. coli AST data from NCBI ecoli_ast_raw  # import without re-interpreting resistance pheno <- import_ncbi_ast(ecoli_ast_raw) head(pheno)  # import and re-interpret resistance (S/I/R) and ECOFF (WT/NWT) using AMR package pheno <- import_ncbi_ast(ecoli_ast_raw, interpret = TRUE, ecoff = TRUE) head(pheno) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/logistf_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Details from a logistf Model — logistf_details","title":"Extract Details from a logistf Model — logistf_details","text":"function extracts formats estimates, confidence intervals, p-values fitted logistf model.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/logistf_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Details from a logistf Model — logistf_details","text":"","code":"logistf_details(model)"},{"path":"https://interpretamr.github.io/AMRgen/reference/logistf_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Details from a logistf Model — logistf_details","text":"model fitted logistf model object.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/logistf_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Details from a logistf Model — logistf_details","text":"tibble containing estimates, confidence intervals, p-values predictor model.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/logistf_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Details from a logistf Model — logistf_details","text":"","code":"library(logistf) library(ggplot2) model <- logistf(case ~ age + oc + vic + vicl + vis + dia, data = sex2) model_details <- logistf_details(model) autoplot(model_details)"},{"path":"https://interpretamr.github.io/AMRgen/reference/merge_logreg_soloppv.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","title":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","text":"function merges logistic regression model statistics solo PPV statistics creates combined plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/merge_logreg_soloppv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","text":"","code":"merge_logreg_soloppv(model, solo_stats, title = NULL)"},{"path":"https://interpretamr.github.io/AMRgen/reference/merge_logreg_soloppv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","text":"model data frame containing logistic regression model statistics. solo_stats data frame containing solo PPV statistics. title optional title plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/merge_logreg_soloppv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","text":"list containing: combined: merged data frame logistic regression PPV statistics. plot: ggplot object showing relationship model estimates PPV.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/merge_logreg_soloppv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Logistic Regression and Solo PPV Statistics — merge_logreg_soloppv","text":"","code":"if (FALSE) { # \\dontrun{ soloPPV_cipro <- solo_ppv_analysis(ecoli_geno, ecoli_ast,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"pheno\" ) logistic_cipro <- amr_logistic(ecoli_geno, ecoli_ast,   \"Ciprofloxacin\", c(\"Quinolones\"),   maf = 5 ) allstatsR <- merge_logreg_soloppv(logistic_cipro$modelR,   soloPPV_cipro$solo_stats %>% filter(category == \"R\"),   title = \"Quinolone markers vs Cip R\" ) } # }"},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_combined_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Combined Statistics — plot_combined_stats","title":"Plot Combined Statistics — plot_combined_stats","text":"function creates plot combined logistic regression solo PPV statistics.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_combined_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Combined Statistics — plot_combined_stats","text":"","code":"plot_combined_stats(combined_stats, sig = 0.05, title = NULL)"},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_combined_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Combined Statistics — plot_combined_stats","text":"combined_stats data frame containing combined statistics logistic regression solo PPV. sig significance level logistic regression p-values. Default 0.05. title optional title plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_combined_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Combined Statistics — plot_combined_stats","text":"ggplot2 object representing combined plot.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Estimates from a Table of Results — plot_estimates","title":"Plot Estimates from a Table of Results — plot_estimates","text":"function creates ggplot object visualizing logistic regression coefficients 95% confidence intervals. Significant markers highlighted based specified p-value threshold.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Estimates from a Table of Results — plot_estimates","text":"","code":"plot_estimates(   tbl,   sig = 0.05,   sig_colors = c(`FALSE` = \"grey\", `TRUE` = \"blue4\"),   x_title = \"Coefficient (95% CI)\",   y_title = \"Variant\",   title = NULL,   axis_label_size = 9,   marker_order = NULL )"},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Estimates from a Table of Results — plot_estimates","text":"tbl data frame tibble containing logistic regression results. Expected columns : marker: name marker (e.g., variable name). pval: p-value marker. ci.lower: lower bound confidence interval. ci.upper: upper bound confidence interval. est: estimated coefficient. sig (optional) significance threshold p-values. Defaults 0.05. sig_colors (optional) vector two colors represent significant non-significant estimates. x_title (optional) title x-axis. Defaults \"Coefficient (95% CI)\". y_title (optional) title y-axis. Defaults \"Variant\". title (optional) main title plot. NULL, title added. axis_label_size (optional) font size axis labels. Defaults 9. marker_order (optional) Vector indicating order markers plotted y-axis.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Estimates from a Table of Results — plot_estimates","text":"ggplot object showing logistic regression coefficients confidence intervals. Significant markers (p-value < sig) colored differently.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Estimates from a Table of Results — plot_estimates","text":"","code":"tbl <- tibble::tibble(   marker = c(\"(Intercept)\", \"var1\", \"var2\", \"var3\"),   pval = c(0.1, 0.03, 0.2, 0.04),   ci.lower = c(-0.2, 0.1, -0.3, 0.2),   ci.upper = c(0.5, 0.8, 0.4, 1.1),   est = c(0.2, 0.5, 0.1, 0.7) )  plot_estimates(tbl)"},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_solo_logReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Combined Statistics of Logistic Regression and Solo PPV — plot_solo_logReg","title":"Plot Combined Statistics of Logistic Regression and Solo PPV — plot_solo_logReg","text":"function creates plot comparing logistic regression coefficients PPV values solo marker analysis. highlights markers based statistical significance logistic regression.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_solo_logReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Combined Statistics of Logistic Regression and Solo PPV — plot_solo_logReg","text":"","code":"plot_solo_logReg(combined_stats, sig = 0.05, title = NULL)"},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_solo_logReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Combined Statistics of Logistic Regression and Solo PPV — plot_solo_logReg","text":"combined_stats data frame containing combined statistics logistic regression solo PPV analysis. sig numeric value specifying significance threshold p-values. Default 0.05. title optional character string specifying plot title.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/plot_solo_logReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Combined Statistics of Logistic Regression and Solo PPV — plot_solo_logReg","text":"ggplot2 object visualizing relationship PPV logistic regression estimates, confidence intervals significance annotation.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"function performs Positive Predictive Value (PPV) analysis AMR markers associated given antibiotic drug class. calculates PPV solo markers visualizes results using various plots.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"","code":"solo_ppv_analysis(   geno_table,   pheno_table,   antibiotic,   drug_class_list,   geno_sample_col = NULL,   pheno_sample_col = NULL,   sir_col = NULL,   keep_assay_values = TRUE,   min = 1,   axis_label_size = 9,   pd = position_dodge(width = 0.8),   plot_cols = c(R = \"IndianRed\", NWT = \"navy\") )"},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"geno_table data frame containing genotype data, including least one column labeled drug_class drug class information one column sample identifiers (specified via geno_sample_col otherwise assumed first column contains identifiers). pheno_table data frame containing phenotype data, must include column drug_agent (antibiotic information) column resistance interpretation (S//R, colname specified via sir_col). antibiotic character string specifying antibiotic interest filter phenotype data. value must match one entries drug_agent column pheno_table. drug_class_list character vector drug classes filter genotype data markers related specified antibiotic. Markers geno_table filtered based whether drug_class matches value list. geno_sample_col character string (optional) specifying column name geno_table containing sample identifiers. Defaults NULL, case assumed first column contains identifiers. pheno_sample_col character string (optional) specifying column name pheno_table containing sample identifiers. Defaults NULL, case assumed first column contains identifiers. sir_col character string specifying column name pheno_table contains resistance interpretation (SIR) data. values interpretable \"R\" (resistant), \"\" (intermediate), \"S\" (susceptible). keep_assay_values logical indicating whether include columns raw phenotype assay data binary matrix. Assumes columns labelled \"mic\" /\"disk\"; added output table present. Defaults TRUE. min Minimum number genomes solo marker, include marker plot (default 1). axis_label_size Font size axis labels PPV plot (default 9). pd Position dodge, .e. spacing R/NWT values positioned /line PPV plot. Default 'position_dodge(width = 0.8)'. plot_cols named vector colors plot. names phenotype categories (e.g., \"R\", \"\", \"S\", \"NWT\"), values valid color names hexadecimal color codes. Default colors provided resistant (\"R\"), intermediate (\"\"), susceptible (\"S\"), non-wild-type (\"NWT\").","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"list containing following elements: solo_stats: dataframe summarizing PPV resistance (R vs S/) NWT (R/vs S), including number positive hits, sample size, PPV, 95% confidence intervals marker. combined_plot: combined ggplot object showing PPV plot solo markers, bar plot phenotype distribution. solo_binary: dataframe binary values indicating presence absence solo markers. amr_binary: dataframe binary values AMR markers, based input genotype phenotype data.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"function analyzes predictive power individual AMR markers belong specified drug class uniquely associated one class. phenotype data matched genotype presence/absence stratified compute PPV resistance non-wild-type interpretations. also generates plots aid interpretation.","code":""},{"path":"https://interpretamr.github.io/AMRgen/reference/solo_ppv_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Solo PPV Analysis for AMR Markers — solo_ppv_analysis","text":"","code":"if (FALSE) { # \\dontrun{ geno_table <- import_amrfp(ecoli_geno_raw, \"Name\") head(ecoli_ast) soloPPV_cipro <- solo_ppv_analysis(   geno_table = geno_table,   pheno_table = ecoli_ast,   antibiotic = \"Ciprofloxacin\",   drug_class_list = c(\"Quinolones\"),   sir_col = \"Resistance phenotype\" ) soloPPV_cipro$solo_stats soloPPV_cipro$combined_plot } # }"}]
